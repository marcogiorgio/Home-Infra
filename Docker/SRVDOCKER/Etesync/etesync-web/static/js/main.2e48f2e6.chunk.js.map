{"version":3,"sources":["images/logo.svg","images/signed-pages-badge.svg","images/wizard-welcome.svg","images/wizard-create.svg","widgets/ConfirmationDialog.tsx","widgets/ExternalLink.tsx","widgets/List.tsx","widgets/withSpin.tsx","widgets/PrettyError.tsx","components/ErrorBoundary.tsx","store/actions.ts","store/reducers.ts","store/construct.ts","store/index.ts","store/promise-middleware.ts","constants/index.ts","pim-types.ts","helpers.tsx","credentials.tsx","SideMenu/index.tsx","routes.ts","sync/SyncManager.ts","widgets/LoadingIndicator.tsx","widgets/AppBarOverride.tsx","widgets/Container.tsx","etebase-helpers.ts","Contacts/Sidebar.tsx","Contacts/Toolbar.tsx","widgets/Avatar.tsx","Contacts/AddressBook.tsx","Contacts/SearchableAddressBook.tsx","icons/Copy.tsx","components/PimItemHeader.tsx","Contacts/Contact.tsx","Contacts/ContactEdit.tsx","Contacts/GroupEdit.tsx","PageNotFound.tsx","Pim/helpers.tsx","components/GenericChangeHistory.tsx","Pim/ItemChangeHistory.tsx","Contacts/Main.tsx","Calendars/Calendar.tsx","widgets/RRule.tsx","Calendars/Event.tsx","widgets/DateTimePicker.tsx","widgets/TimezonePicker.tsx","widgets/Toast.tsx","Calendars/EventEdit.tsx","persist-state-history.tsx","Calendars/Main.tsx","Tasks/TaskListItem.tsx","Tasks/Sidebar.tsx","widgets/Menu.tsx","Tasks/Toolbar.tsx","Tasks/QuickAdd.tsx","Tasks/TaskList.tsx","Tasks/Task.tsx","widgets/ColoredRadio.tsx","Tasks/TaskEdit.tsx","Tasks/Main.tsx","widgets/ColorBox.tsx","Collections/CollectionList.tsx","Collections/ImportDialog.tsx","Collections/CollectionImport.tsx","widgets/ColorPicker.tsx","Collections/CollectionEdit.tsx","widgets/PrettyFingerprint.tsx","Collections/CollectionMemberAddDialog.tsx","Collections/CollectionMembers.tsx","Collections/CollectionChangeEntries.tsx","Collections/Collection.tsx","Collections/Invitations.tsx","Collections/Main.tsx","widgets/PasswordField.tsx","Settings/index.tsx","Debug.tsx","Pim/NavigationTabs.tsx","SyncGate.tsx","SignupPage.tsx","components/LoginForm.tsx","LoginPage.tsx","widgets/Wizard.tsx","WizardPage.tsx","MainRouter.tsx","App.tsx","registerServiceWorker.ts","index.tsx"],"names":["module","exports","React","_props","title","children","onCancel","onOk","labelOk","props","Dialog","onClose","DialogTitle","DialogContent","DialogActions","Button","color","onClick","ExternalLink","target","rel","useStyles","makeStyles","theme","createStyles","inset","marginLeft","nested","paddingLeft","spacing","List","MuiList","ListSubheader","MuiListSubheader","ListDivider","classes","insetClass","undefined","Divider","className","ListItem","leftIcon","rightIcon","primaryText","secondaryText","href","style","insetChildren","nestedItems","selected","secondaryTextColor","secondaryAction","extraProps","button","component","ListItemIcon","ListItemText","primary","secondary","secondaryTypographyProps","disablePadding","withSpin","Component","spin","PrettyError","fontWeight","error","message","stack","ErrorBoundary","state","_info","this","setState","IntegrityError","createAction","actionType","payloadCreator","metaCreator","origCreateAction","resetKey","logout","etebase","a","login","save","setCacheCollection","colMgr","col","cacheSave","_colMgr","colUid","uid","deleted","isDeleted","unsetCacheCollection","collectionUpload","upload","setCacheItem","_col","itemMgr","item","_itemMgr","itemUid","setCacheItemMulti","_colUid","items","ret","push","_deps","itemBatch","deps","batch","setSyncCollection","stoken","setSyncGeneral","performSync","syncPromise","appendError","clearErros","_etesync","pushMessage","popMessage","setSettings","settings","credentials","handleActions","actions","toString","action","payload","storedSession","_state","_action","encryptionKeyReducer","key","syncCollections","set","clear","ImmutableMap","syncGeneral","lastSyncDate","Date","collections","combineActions","meta","remove","setIn","action_","withMutations","i","has","fetchActions","func","startsWith","fetchCount","handleAction","errorsReducer","Array","isArray","messagesReducer","settingsReducer","locale","darkMode","taskSettings","filterBy","sortBy","settingsMigrations","0","settingsPersistConfig","version","storage","localforage","migrate","createMigrate","debug","credentialsPersistConfig","encryptionKeyPersistConfig","session","syncPersistConfig","transforms","createTransform","toJS","cachePersistConfig","map","x","Etebase","reducers","combineReducers","persistReducer","encryptionKey","sync","general","cache","errors","messages","middleware","thunkMiddleware","dispatch","next","val","then","result","catch","Promise","reject","asyncDispatch","store","useAsyncDispatch","useDispatch","createStore","applyMiddleware","persistor","persistStore","manualPersist","defaultServerUrl","process","REACT_APP_DEFAULT_API_PATH","homePage","faq","sourceCode","timezoneLoadFromName","timezone","zone","zones","ICAL","get","ics","forEach","zonePart","addSubcomponent","addPropertyWithValue","retZone","tzid","register","parseString","content","replace","TaskStatusType","TaskPriorityType","EventType","collectionUid","comp","updatePropertyWithValue","updateTimezones","fromString","startDate","endDate","summary","toJSDate","isDate","description","getFirstPropertyValue","time","rule","getFirstSubcomponent","event","clone","fromVCalendar","TaskTags","TaskType","task","isRecurring","rrule","count","recur","iterator","dueDate","nextRecurrence","compare","now","nextStartDate","nextDueDate","offset","subtractDateTz","addDuration","nextTask","uuid","status","NeedsAction","lastModified","Completed","Cancelled","priority","tags","property","getFirstProperty","empty","length","removeAllProperties","setValues","newProp","addProperty","getValues","filter","date","parentUid","moment","isSameOrBefore","isBefore","isAfter","ContactType","kind","includes","getAllProperties","prop","getFirstValue","arrayToChunkIterator","formatDate","mDate","format","formatOurTimezoneOffset","getTimezoneOffset","prefix","Math","abs","hours","floor","minutes","padStart","getCurrentTimezone","Intl","DateTimeFormat","resolvedOptions","timeZone","mapPriority","High","Medium","Low","Undefined","arr","size","slice","isPromise","startTask","delay","resolve","setTimeout","e","usePromiseMemo","promise","initial","_returnedValue","setVal","cancel","enforcePasswordRules","password","credentialsSelector","createSelector","restore","useCredentials","credentialsPromise","useSelector","SideMenu","loggedInItems","useTheme","username","user","history","useHistory","onCloseDrawerRequest","routeResolver","getRoute","overflowX","width","alt","src","logo","palette","contrastText","C","RouteResolver","routes","name","_keys","dict","path","split","_base","keys","Object","assign","pathComponent","Error","join","cachedSyncManager","Map","SyncManager","COLLECTION_TYPES","BATCH_SIZE","isSyncing","storeState","getState","syncCollection","getCollectionManager","getItemManager","limit","done","list","data","collectionType","getCollectionType","fetchCollection","removedMemberships","removed","alwaysThrowErrors","fetchAllCollections","cached","delete","CircularProgress","thickness","titleEl","document","querySelector","buttonsEl","ReactDOM","display","flexDirection","Paper","elevation","flexGrow","getCollections","memoize","cachedCollections","values","cacheLoad","getCollectionsByType","colType","getItems","cachedItems","getItemsByType","cachedColItems","useCollections","useItems","SidebarListItem","icon","filterByGroup","editGroup","setFilterByGroup","IconButton","groups","newGroup","groupList","sort","b","fn","localeCompare","group","dense","justifyContent","edge","transitionStyles","entering","visibility","overflow","entered","exiting","exited","marginRight","textField","transition","Toolbar","searchTerm","setSearchTerm","alignItems","Transition","in","timeout","TextField","fullWidth","placeholder","value","variant","onChange","InputProps","startAdornment","InputAdornment","position","Avatar","backgroundColor","borderRadius","height","getContactColor","contact","colorOptions","colors","console","toIcal","sum","charCodeAt","AddressBookItem","entry","toUpperCase","sortSelector","entries","_a","_b","sensitivity","AddressBook","sortedEntries","rowCount","rowHeight","rowRenderer","index","onItemClick","topBar","SearchableAddressBook","searchQuery","setSearchQuery","find","reg","RegExp","Grid","container","xs","borderRight","divider","onNewGroupClick","marginTop","ent","members","match","CopyIcon","SvgIcon","d","withTheme","main","header","getContrastText","Color","rgb","string","padding","headerText","marginBottom","text","rightItem","Contact","revProp","lists","getAllType","propName","props_","valueToHref","primaryTransform","secondaryTransform","idx","type","toJSON","clipboardButton","preventDefault","window","navigator","clipboard","writeText","ref","substring","indexOf","skips","theRest","_val","String","note","wordWrap","whiteSpace","contactImageSrc","PimItemHeader","fontSize","telTypes","emailTypes","addressTypes","imppTypes","TypeSelector","types","Select","MenuItem","toLowerCase","ValueType","ValueTypeComponent","multiline","onClearRequest","ContactEdit","lastName","firstName","middleName","namePrefix","nameSuffix","phone","email","address","impp","org","showDeleteDialog","collectionGroups","newGroups","originalGroups","n","trim","pop","propToValueType","propToStringType","initialCollection","collection","getCollectionGroups","onSubmit","bind","addMetadata","handleChange","handleInputChange","handleCollectionChange","reloadGroupSuggestions","handleValueTypeChange","addValueType","removeValueType","onDeleteRequest","_type","prevState","newArray","splice","allGroups","isGroup","oldGroup","updatedGroup","onSave","deletedGroup","m","setProperties","source","setParameter","setValue","setProperty","goBack","styles","form","boxSizing","submit","textAlign","FormControl","disabled","InputLabel","metadata","Autocomplete","freeSolo","multiple","clearOnBlur","selectOnFocus","options","_e","renderInput","params","label","ConfirmationDialog","open","onDelete","GroupEdit","showError","nameUsed","helperText","PageNotFoundRoute","PageNotFound","getRawItemNavigationUid","getItemNavigationUid","getDecryptCollectionsFunction","_colType","getMeta","max","getDecryptItemsFunction","parseFunc","cur","getContent","itemSave","originalItem","mtime","getTime","eteItem","setContent","setMeta","create","itemDelete","PimFab","Fab","margin","top","right","bottom","left","GenericChangeHistory","entriesList","a_","b_","cacheItem","isEvent","itemManager","itemRevisions","revisions","ItemChangeHistory","setEntries","dialog","setDialog","loadRevisions","etag","LoadingIndicator","decryptCollections","decryptItems","parse","ContactsMain","setCachedCollections","colEntries","onItemSave","onItemDelete","flatEntries","exact","render","cachedCollection","readOnly","accessLevel","ReadOnly","calendarLocalizer","momentLocalizer","MAX_RECURRENCE_DATE","eventPropGetter","agendaHeaderFormat","_culture","localizer","start","end","adjust","Ends","Months","MonthRepeat","WeekDay","Calendar","onNavigate","onView","slotClicked","shift","ev","minHeight","defaultDate","scrollToTime","events","selectable","onSelectEvent","onSelectSlot","formats","currentDate","view","slotInfo","onSlotClick","Event","strStart","strEnd","mStart","mEnd","diff","subtract","isSame","formatDateRange","location","attendees","DateTimePicker","Picker","dateOnly","KeyboardDatePicker","KeyboardDateTimePicker","dateFormat","utils","MomentUtils","ampm","showTodayButton","KeyboardButtonProps","isMoment","toDate","zonelist","getOptionLabel","option","Toast","severity","autoHideDuration","Snackbar","Alert","weekdays","from","_","months","menuItemsEnds","Forever","Until","After","displayhName","menuItemsFrequency","menuItemMonths","month","menuItemsWeekDays","day","makeArray","multiSelect","minWidth","maxWidth","RRule","updateRule","newOptions","reset","updatedOptions","freq","inputProps","min","interval","inputNode","currentTarget","valueAsNumber","byday","parseInt","substr","bymonthday","step","numberValue","Number","bymonth","until","fromJSDate","EventEdit","allDay","locState","getHours","getMinutes","duplicate","convertToZone","localTimezone","rruleProp","toggleAllDay","toggleRecurring","handleRRuleChange","handleCloseToast","_event","reason","fromDate","fromData","recurring","differentTimezone","FormHelperText","FormGroup","FormControlLabel","control","Switch","checked","stateCache","tag","PersistCalendar","Base","withRouter","rest","tagName","getKeyForTag","pathname","CalendarsMain","checkboxColor","TagsList","Chip","onToggleComplete","dueDateText","freqText","overdue","Checkbox","stopPropagation","finished","amount","tasks","amountDueToday","dueToday","setTaskTags","tagsList","anchorOrigin","vertical","horizontal","transferOrigin","Menu","getContentAnchorEl","transformOrigin","showCompleted","setShowCompleted","showHidden","setShowHidden","sortAnchorEl","setSortAnchorEl","optionsAnchorEl","setOptionsAnchorEl","SortMenuItem","innerRef","aria-label","aria-controls","aria-haspopup","id","anchorEl","keepMounted","ListItemSecondaryAction","QuickAdd","setTitle","defaultCollection","v4","Time","sortCompleted","sortLastModifiedDate","aIn","bIn","sortDueDate","sortPriority","sortTitle","TaskList","handleToggleComplete","completed","clonedTask","getNextOccurence","potentialEntries","Fuse","shouldSort","threshold","maxPatternLength","minMatchCharLength","search","hidden","subEntriesMap","itemList","relatedTo","sortOrder","sortFunctions","sortFunction","getSortFunction","taskListItemFromTask","Task","root","ColoredRadio","other","Radio","TaskEdit","includeTime","due","toggleTime","completionDate","InProcess","FormLabel","RadioGroup","row","TasksMain","ColorBox","CollectionList","collectionMap","colorBox","AppBarOverride","Link","to","ImportDialog","loading","setLoading","itemsProcessed","setItemsProccessed","onFileDropCommon","itemsCreator","acceptedFiles","rejectedFiles","reader","FileReader","onabort","alert","onerror","onload","fileText","eteItems","chunks","chunk","file","readAsText","log","acceptTypes","dropFunction","getAllSubcomponents","onDrop","accept","getRootProps","getInputProps","DialogContentText","CollectionImport","selectedCollection","setSelectedCollection","colClicked","ColorPicker","colorGroup","flex","colorOption","ButtonBase","CollectionEdit","setErrors","setShowDeleteDialog","setColType","info","setInfo","selectedColor","setSelectedColor","saveErrors","fieldRequired","test","collectionColorBox","pageTitle","colTypes","defaultColor","required","PrettyFingerprint","prettyFingerprint","publicKey","CollectionMemberAddDialog","addUser","setAddUser","setPublicKey","setReadOnly","userChosen","setUserChosen","setError","_user","inviteMgr","getInvitationManager","fetchUserProfile","userProfile","pubkey","ReadWrite","CollectionMembers","setMembers","revokeUser","setRevokeUser","addMemberOpen","setAddMemberOpen","revokeUserIsAdmin","Admin","fetchMembers","memberManager","getMemberManager","member","invite","CollectionChangeEntries","changelogRoute","Collection","importDialogToggle","tab","importDialogOpen","isAdmin","invitationManager","listIncoming","invitations","Invitations","InvitationsIncoming","setInvitations","chosenInvitation","setChosenInvitation","removeInvitation","loadInvitations","fromUsername","fromPubkey","CollectionsMain","formIdCounter","PasswordField","showPassword","setShowPassword","formId_","formId","htmlFor","Input","endAdornment","SecurityFingerprint","ChangePassword","showDialog","setShowDialog","oldPassword","setOldPassword","newPassword","setNewPassword","infoAlert","passwordRulesError","serverUrl","changePassword","minLength","getDashboardUrl","url","Debug","stateCollectionUid","setCollectionUid","itemsUids","setEntriesUids","setResult","cacheCollections","cacheItems","colItems","wantedEntries","wantAll","retEntries","JSON","stringify","PimNavigationTabs","tabs","linkValue","Tabs","Tab","SyncGate","syncManager","getManager","SignupPage","setUsername","setEmail","setPassword","server","setServer","showAdvanced","setShowAdvanced","signup","found","field","detail","advancedSettings","textDecoration","LoginForm","forgotPassword","paddingTop","errorServer","errorEmail","errorPassword","LoginPage","useLocation","fetchError","setFetchError","serviceApiUrl","isSafe","SignedPagesBadge","WizardNavigationBar","first","currentPage","last","totalPages","prev","Wizard","inProps","setCurrentPage","pages","onFinish","Content","wizardPages","wizardWelcome","SetupCollectionsPage","wizardCreate","WizardPage","tryCount","setTryCount","ranWizard","setRanWizard","syncError","setSyncError","MainRouter","PrivateRoute","GlobalMessages","handleClose","home","pim","contacts","_id","edit","new","incoming","outgoing","import","wizard","AppBarWitHistory","toggleDrawerIcon","iconElementRight","AppBar","IconRefreshWithSpin","NavigationRefresh","App","drawerOpen","setDrawerOpen","errorsDialog","setErrorsDialog","refresh","autoRefresh","onLine","toggleDrawer","setInterval","clearInterval","fetching","muiTheme","createMuiTheme","amber","light","lightBlue","A200","A400","dark","A700","background","default","ThemeProvider","Badge","badgeContent","Drawer","isLocalhost","Boolean","hostname","registerValidSW","swUrl","serviceWorker","registration","onupdatefound","installingWorker","installing","onstatechange","controller","MyPersistGate","persist","getElementById","URL","origin","addEventListener","fetch","response","headers","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.2e48f2e6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.9725d5d6.svg\";","module.exports = __webpack_public_path__ + \"static/media/signed-pages-badge.d5eaa486.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-welcome.585ebe1b.svg\";","module.exports = __webpack_public_path__ + \"static/media/wizard-create.6036b172.svg\";","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nexport default React.memo((_props: any) => {\n  const {\n    title,\n    children,\n    onCancel,\n    onOk,\n    labelOk,\n    ...props\n  } = _props;\n\n  return (\n    <Dialog\n      onClose={onCancel}\n      {...props}\n    >\n      <DialogTitle>\n        {title}\n      </DialogTitle>\n      <DialogContent>\n        {children}\n      </DialogContent>\n      <DialogActions>\n        <Button\n          color=\"primary\"\n          onClick={onCancel}\n        >\n          Cancel\n        </Button>\n        <Button\n          color=\"primary\"\n          onClick={onOk}\n        >\n          {labelOk || \"Confirm\"}\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n});\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nexport const ExternalLink = React.memo(({ children, ...props }: any) => (\n  <a target=\"_blank\" rel=\"noopener noreferrer\" {...props}>\n    {children}\n  </a>\n));\n\nexport default ExternalLink;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport { createStyles, makeStyles } from \"@material-ui/core/styles\";\nimport MuiList from \"@material-ui/core/List\";\nimport MuiListItem from \"@material-ui/core/ListItem\";\nimport MuiListItemSecondaryAction from \"@material-ui/core/ListItemSecondaryAction\";\nimport MuiListSubheader from \"@material-ui/core/ListSubheader\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport Divider from \"@material-ui/core/Divider\";\n\nimport ExternalLink from \"./ExternalLink\";\n\nconst useStyles = makeStyles((theme) => (createStyles({\n  inset: {\n    marginLeft: 64,\n  },\n  nested: {\n    paddingLeft: theme.spacing(4),\n  },\n})));\n\nexport const List = MuiList;\n\nexport const ListSubheader = MuiListSubheader;\n\nexport const ListDivider = React.memo(function ListDivider(props: { inset?: boolean }) {\n  const classes = useStyles();\n  const insetClass = (props.inset) ? classes.inset : undefined;\n  return (\n    <Divider className={insetClass} />\n  );\n});\n\ninterface ListItemPropsType {\n  leftIcon?: React.ReactElement;\n  rightIcon?: React.ReactElement;\n  style?: React.CSSProperties;\n  primaryText?: string;\n  secondaryText?: string;\n  children?: React.ReactNode | React.ReactNode[];\n  onClick?: () => void;\n  href?: string;\n  insetChildren?: boolean;\n  nestedItems?: React.ReactNode[];\n  selected?: boolean;\n  secondaryTextColor?: \"initial\" | \"inherit\" | \"primary\" | \"secondary\" | \"textPrimary\" | \"textSecondary\" | \"error\";\n  secondaryAction?: React.ReactNode;\n}\n\nexport const ListItem = React.memo(function ListItem(_props: ListItemPropsType) {\n  const classes = useStyles();\n  const {\n    leftIcon,\n    rightIcon,\n    primaryText,\n    secondaryText,\n    children,\n    onClick,\n    href,\n    style,\n    insetChildren,\n    nestedItems,\n    selected,\n    secondaryTextColor,\n    secondaryAction,\n  } = _props;\n\n  const extraProps = (onClick || href) ? {\n    button: true,\n    href,\n    onClick,\n    component: (href) ? ExternalLink : \"div\",\n  } : undefined;\n\n  return (\n    <>\n      <MuiListItem\n        style={style}\n        onClick={onClick}\n        selected={selected}\n        {...(extraProps as any)}\n      >\n        {leftIcon && (\n          <ListItemIcon>\n            {leftIcon}\n          </ListItemIcon>\n        )}\n        <ListItemText inset={insetChildren} primary={primaryText} secondary={secondaryText} secondaryTypographyProps={{ color: secondaryTextColor }}>\n          {children}\n        </ListItemText>\n        {rightIcon && (\n          <ListItemIcon>\n            {rightIcon}\n          </ListItemIcon>\n        )}\n        {secondaryAction && (\n          <MuiListItemSecondaryAction>\n            {secondaryAction}\n          </MuiListItemSecondaryAction>\n        )}\n      </MuiListItem>\n      {nestedItems && (\n        <List className={classes.nested} disablePadding>\n          {nestedItems}\n        </List>\n      )}\n    </>\n  );\n});\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport \"./withSpin.css\";\n\nconst withSpin = (Component: any) => {\n  return React.memo((_props: any) => {\n    const {\n      spin,\n      ...props\n    } = _props;\n    return (\n      <Component {...props} className={spin ? \"withSpin-spin\" : \"\"} />\n    );\n  });\n};\n\nexport default withSpin;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nexport const PrettyError = React.memo((props: any) => (\n  <div>\n    <pre style={{ fontWeight: \"bold\" }}>\n      {props.error.message}\n    </pre>\n\n    <pre>\n      {props.error.stack}\n    </pre>\n  </div>\n));\n\nexport default PrettyError;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport { IntegrityError } from \"etebase\";\nimport PrettyError from \"../widgets/PrettyError\";\n\ninterface PropsType {\n  children: React.ReactNode | React.ReactNode[];\n}\n\nclass ErrorBoundary extends React.Component<PropsType> {\n  public state: {\n    error?: Error;\n  };\n\n  constructor(props: PropsType) {\n    super(props);\n    this.state = { };\n  }\n\n  public componentDidCatch(error: Error, _info: any) {\n    this.setState({ error });\n  }\n\n  public render() {\n    const { error } = this.state;\n    if (error) {\n      if (error instanceof IntegrityError) {\n        return (\n          <div>\n            <h2>Integrity Error</h2>\n            <p>\n              Please log out from the menu, refresh the page and try again, and if the problem persists, contact support.\n            </p>\n            <pre>\n              {error.message}\n            </pre>\n          </div>\n        );\n      }\n    }\n\n    if (error) {\n      return (\n        <div>\n          <h2>Something went wrong!</h2>\n          <PrettyError error={this.state.error} />\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nexport default ErrorBoundary;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport { createAction as origCreateAction, ActionMeta } from \"redux-actions\";\n\nimport * as Etebase from \"etebase\";\n\nimport { SettingsType } from \"./\";\nimport { Message } from \"./reducers\";\n\ntype FunctionAny = (...args: any[]) => any;\n\nfunction createAction<Func extends FunctionAny, MetaFunc extends FunctionAny>(\n  actionType: string,\n  payloadCreator: Func,\n  metaCreator?: MetaFunc\n): (..._params: Parameters<Func>) => ActionMeta<ReturnType<Func>, ReturnType<MetaFunc>> {\n  return origCreateAction(actionType, payloadCreator, metaCreator as any) as any;\n}\n\nexport const resetKey = createAction(\n  \"RESET_KEY\",\n  () => {\n    return null;\n  }\n);\n\nexport const logout = createAction(\n  \"LOGOUT\",\n  async (etebase: Etebase.Account) => {\n    // We don't wait on purpose, because we would like to logout and clear local data anyway\n    etebase.logout();\n  }\n);\n\nexport const login = createAction(\n  \"LOGIN\",\n  async (etebase: Etebase.Account) => {\n    return etebase.save();\n  }\n);\n\nexport const setCacheCollection = createAction(\n  \"SET_CACHE_COLLECTION\",\n  async (colMgr: Etebase.CollectionManager, col: Etebase.Collection) => {\n    return colMgr.cacheSave(col);\n  },\n  (_colMgr: Etebase.CollectionManager, col: Etebase.Collection) => {\n    return {\n      colUid: col.uid,\n      deleted: col.isDeleted,\n    };\n  }\n);\n\nexport const unsetCacheCollection = createAction(\n  \"UNSET_CACHE_COLLECTION\",\n  (_colMgr: Etebase.CollectionManager, colUid: string) => {\n    return colUid;\n  },\n  (_colMgr: Etebase.CollectionManager, colUid: string) => {\n    return {\n      colUid,\n      deleted: true,\n    };\n  }\n);\n\nexport const collectionUpload = createAction(\n  \"COLLECTION_UPLOAD\",\n  async (colMgr: Etebase.CollectionManager, col: Etebase.Collection) => {\n    await colMgr.upload(col);\n    return colMgr.cacheSave(col);\n  },\n  (_colMgr: Etebase.CollectionManager, col: Etebase.Collection) => {\n    return {\n      colUid: col.uid,\n      deleted: col.isDeleted,\n    };\n  }\n);\n\nexport const setCacheItem = createAction(\n  \"SET_CACHE_ITEM\",\n  async (_col: Etebase.Collection, itemMgr: Etebase.ItemManager, item: Etebase.Item) => {\n    return itemMgr.cacheSave(item);\n  },\n  (col: Etebase.Collection, _itemMgr: Etebase.ItemManager, item: Etebase.Item) => {\n    return {\n      colUid: col.uid,\n      itemUid: item.uid,\n      deleted: item.isDeleted,\n    };\n  }\n);\n\nexport const setCacheItemMulti = createAction(\n  \"SET_CACHE_ITEM_MULTI\",\n  async (_colUid: string, itemMgr: Etebase.ItemManager, items: Etebase.Item[]) => {\n    const ret = [];\n    for (const item of items) {\n      ret.push(itemMgr.cacheSave(item));\n    }\n    return ret;\n  },\n  (colUid: string, _itemMgr: Etebase.ItemManager, items: Etebase.Item[], _deps?: Etebase.Item[]) => {\n    return {\n      colUid,\n      items: items,\n    };\n  }\n);\n\nexport const itemBatch = createAction(\n  \"ITEM_BATCH\",\n  async (_col: Etebase.Collection, itemMgr: Etebase.ItemManager, items: Etebase.Item[], deps?: Etebase.Item[]) => {\n    await itemMgr.batch(items, deps);\n    const ret = [];\n    for (const item of items) {\n      ret.push(itemMgr.cacheSave(item));\n    }\n    return ret;\n  },\n  (col: Etebase.Collection, _itemMgr: Etebase.ItemManager, items: Etebase.Item[], _deps?: Etebase.Item[]) => {\n    return {\n      colUid: col.uid,\n      items: items,\n    };\n  }\n);\n\nexport const setSyncCollection = createAction(\n  \"SET_SYNC_COLLECTION\",\n  (uid: string, stoken: string) => {\n    return {\n      uid,\n      stoken,\n    };\n  }\n);\n\nexport const setSyncGeneral = createAction(\n  \"SET_SYNC_GENERAL\",\n  (stoken: string | null) => {\n    return stoken;\n  }\n);\n\nexport const performSync = createAction(\n  \"PERFORM_SYNC\",\n  (syncPromise: Promise<any>) => {\n    return syncPromise;\n  }\n);\n\nexport const appendError = createAction(\n  \"APPEND_ERROR\",\n  (error: Error | Error[]) => {\n    return error;\n  }\n);\n\nexport const clearErros = createAction(\n  \"CLEAR_ERRORS\",\n  (_etesync: Etebase.Account) => {\n    return true;\n  }\n);\n\nexport const pushMessage = createAction(\n  \"PUSH_MESSAGE\",\n  (message: Message) => {\n    return message;\n  }\n);\n\nexport const popMessage = createAction(\n  \"POP_MESSAGE\",\n  () => {\n    return true;\n  }\n);\n\n// FIXME: Move the rest to their own file\nexport const setSettings = createAction(\n  \"SET_SETTINGS\",\n  (settings: Partial<SettingsType>) => {\n    return { ...settings };\n  }\n);\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport { Action, ActionMeta, ActionFunctionAny, combineActions, handleAction, handleActions } from \"redux-actions\";\n\nimport { List, Map as ImmutableMap } from \"immutable\";\n\nimport * as Etebase from \"etebase\";\n\nimport * as actions from \"./actions\";\n\ninterface BaseModel {\n  uid: string;\n}\n\nexport interface SyncCollectionsEntryData extends BaseModel {\n  stoken: string;\n}\n\nexport type SyncCollectionsData = ImmutableMap<string, SyncCollectionsEntryData>;\n\nexport type CacheItem = Uint8Array;\nexport type CacheItems = ImmutableMap<string, CacheItem>;\nexport type CacheItemsData = ImmutableMap<string, CacheItems>;\nexport type CacheCollection = Uint8Array;\nexport type CacheCollectionsData = ImmutableMap<string, Uint8Array>;\n\nexport type SyncGeneralData = {\n  stoken: string | null;\n  lastSyncDate: Date;\n};\n\nexport type Message = {\n  message: string;\n  severity: \"error\" | \"warning\" | \"info\" | \"success\";\n};\n\nexport interface CredentialsData {\n  storedSession?: string;\n}\n\nexport const credentials = handleActions(\n  {\n    [actions.login.toString()]: (\n      state: CredentialsData, action: Action<string>) => {\n      if (action.error) {\n        return state;\n      } else if (action.payload === undefined) {\n        return state;\n      } else {\n        return {\n          storedSession: action.payload,\n        };\n      }\n    },\n    [actions.logout.toString()]: (_state: CredentialsData, _action: any) => {\n      return { storedSession: undefined };\n    },\n  },\n  { storedSession: undefined }\n);\n\nexport const encryptionKeyReducer = handleActions(\n  {\n  },\n  { key: null }\n);\n\nexport const syncCollections = handleActions(\n  {\n    [actions.setSyncCollection.toString()]: (state: SyncCollectionsData, action: Action<SyncCollectionsEntryData>) => {\n      if (action.payload !== undefined) {\n        return state.set(action.payload.uid, action.payload);\n      }\n      return state;\n    },\n    [actions.logout.toString()]: (state: SyncCollectionsData, _action: any) => {\n      return state.clear();\n    },\n  },\n  ImmutableMap({})\n);\n\nexport const syncGeneral = handleActions(\n  {\n    [actions.setSyncGeneral.toString()]: (state: SyncGeneralData, action: Action<string | null | undefined>) => {\n      if (action.payload !== undefined) {\n        return {\n          stoken: action.payload,\n          lastSyncDate: new Date(),\n        };\n      }\n      return state;\n    },\n    [actions.logout.toString()]: (_state: SyncGeneralData, _action: any) => {\n      return {};\n    },\n  },\n  {}\n);\n\nexport const collections = handleActions(\n  {\n    [combineActions(\n      actions.setCacheCollection,\n      actions.collectionUpload,\n      actions.unsetCacheCollection\n    ).toString()]: (state: CacheCollectionsData, action: ActionMeta<CacheCollection, { colUid: string, deleted: boolean }>) => {\n      if (action.payload !== undefined) {\n        if (action.meta.deleted) {\n          return state.remove(action.meta.colUid);\n        } else {\n          return state.set(action.meta.colUid, action.payload);\n        }\n      }\n      return state;\n    },\n    [actions.logout.toString()]: (state: CacheCollectionsData, _action: any) => {\n      return state.clear();\n    },\n  },\n  ImmutableMap({})\n);\n\nexport const items = handleActions(\n  {\n    [combineActions(\n      actions.setCacheItem\n    ).toString()]: (state: CacheItemsData, action: ActionMeta<CacheItem, { colUid: string, itemUid: string, deleted: boolean }>) => {\n      if (action.payload !== undefined) {\n        return state.setIn([action.meta.colUid, action.meta.itemUid], action.payload);\n      }\n      return state;\n    },\n    [combineActions(\n      actions.itemBatch,\n      actions.setCacheItemMulti\n    ).toString()]: (state: CacheItemsData, action_: any) => {\n      // Fails without it for some reason\n      const action = action_ as ActionMeta<CacheItem[], { colUid: string, items: Etebase.Item[] }>;\n      if (action.payload !== undefined) {\n        return state.withMutations((state) => {\n          let i = 0;\n          for (const item of action.meta.items) {\n            state.setIn([action.meta.colUid, item.uid], action.payload[i]);\n            i++;\n          }\n        });\n      }\n      return state;\n    },\n    [actions.setCacheCollection.toString()]: (state: CacheItemsData, action: ActionMeta<CacheCollection, { colUid: string }>) => {\n      if (action.payload !== undefined) {\n        if (!state.has(action.meta.colUid)) {\n          return state.set(action.meta.colUid, ImmutableMap());\n        }\n      }\n      return state;\n    },\n    [actions.unsetCacheCollection.toString()]: (state: CacheItemsData, action: ActionMeta<string, { colUid: string }>) => {\n      if (action.payload !== undefined) {\n        return state.remove(action.meta.colUid);\n      }\n      return state;\n    },\n    [actions.logout.toString()]: (state: CacheItemsData, _action: any) => {\n      return state.clear();\n    },\n  },\n  ImmutableMap({})\n);\n\nconst fetchActions = [\n] as Array<ActionFunctionAny<Action<any>>>;\n\nfor (const func in actions) {\n  if (func.startsWith(\"fetch\") ||\n    func.startsWith(\"add\") ||\n    func.startsWith(\"update\") ||\n    func.startsWith(\"delete\")) {\n\n    fetchActions.push(actions[func]);\n  }\n}\n\n// Indicates network activity, not just fetch\nexport const fetchCount = handleAction(\n  combineActions(\n    actions.performSync.toString(),\n    ...fetchActions\n  ),\n  (state: number, action: any) => {\n    if (action.payload === undefined) {\n      return state + 1;\n    } else {\n      return state - 1;\n    }\n  },\n  0\n);\n\nexport const errorsReducer = handleActions(\n  {\n    [combineActions(\n      actions.performSync\n    ).toString()]: (state: List<Error>, action: Action<any>) => {\n      if (action.error) {\n        return state.push(action.payload);\n      }\n\n      return state;\n    },\n    [actions.appendError.toString()]: (state: List<Error>, action: Action<any>) => {\n      if (Array.isArray(action.payload)) {\n        return state.push(...action.payload);\n      } else {\n        return state.push(action.payload);\n      }\n    },\n    [actions.clearErros.toString()]: (state: List<Error>, _action: Action<any>) => {\n      return state.clear();\n    },\n  },\n  List([])\n);\n\nexport const messagesReducer = handleActions(\n  {\n    [actions.pushMessage.toString()]: (state: List<Message>, action: Action<Message>) => {\n      return state.push(action.payload);\n    },\n    [actions.popMessage.toString()]: (state: List<Message>, _action: Action<unknown>) => {\n      return state.remove(0);\n    },\n  },\n  List([])\n);\n\n\n// FIXME Move all the below (potentially the fetchCount ones too) to their own file\nexport interface SettingsType {\n  locale: string;\n  darkMode?: boolean;\n  taskSettings: {\n    filterBy: string | null;\n    sortBy: string;\n  };\n}\n\nexport const settingsReducer = handleActions(\n  {\n    [actions.setSettings.toString()]: (state: { key: string | null }, action: any) => (\n      { ...state, ...action.payload }\n    ),\n  },\n  {\n    locale: \"en-gb\",\n    darkMode: false,\n    taskSettings: {\n      filterBy: null,\n      sortBy: \"smart\",\n    },\n  }\n);\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as localforage from \"localforage\";\nimport { combineReducers } from \"redux\";\nimport { createMigrate, persistReducer, createTransform } from \"redux-persist\";\nimport session from \"redux-persist/lib/storage/session\";\n\nimport * as Etebase from \"etebase\";\n\nimport { List, Map as ImmutableMap } from \"immutable\";\nimport {\n  SettingsType,\n  fetchCount, credentials, settingsReducer, encryptionKeyReducer, errorsReducer, messagesReducer,\n  syncGeneral, syncCollections, collections, items,\n  SyncGeneralData, SyncCollectionsData, CacheCollectionsData, CacheItemsData, CredentialsData, Message,\n} from \"./reducers\";\n\nexport interface StoreState {\n  fetchCount: number;\n  credentials: CredentialsData;\n  settings: SettingsType;\n  encryptionKey: {key: string};\n  sync: {\n    collections: SyncCollectionsData;\n    general: SyncGeneralData;\n  };\n  cache: {\n    collections: CacheCollectionsData;\n    items: CacheItemsData;\n  };\n  errors: List<Error>;\n  messages: List<Message>;\n}\n\nconst settingsMigrations = {\n  0: (state: any) => {\n    return {\n      ...state,\n      taskSettings: {\n        filterBy: null,\n        sortBy: \"smart\",\n      },\n    };\n  },\n};\n\nconst settingsPersistConfig = {\n  key: \"settings\",\n  version: 0,\n  storage: localforage,\n  migrate: createMigrate(settingsMigrations, { debug: false }),\n};\n\nconst credentialsPersistConfig = {\n  key: \"credentials2\",\n  version: 0,\n  storage: localforage,\n};\n\nconst encryptionKeyPersistConfig = {\n  key: \"encryptionKey\",\n  storage: session,\n};\n\nconst syncSerialize = (state: any, key: string | number) => {\n  if (key === \"collections\") {\n    return state.toJS();\n  }\n\n  return state;\n};\n\nconst syncDeserialize = (state: any, key: string | number) => {\n  if (key === \"collections\") {\n    return ImmutableMap(state);\n  }\n\n  return state;\n};\n\nconst syncPersistConfig = {\n  key: \"sync\",\n  storage: localforage,\n  transforms: [createTransform(syncSerialize, syncDeserialize)],\n};\n\nconst cacheSerialize = (state: any, key: string | number) => {\n  if (key === \"collections\") {\n    const typedState = state as CacheCollectionsData;\n    const ret = typedState.map((x) => Etebase.toBase64(x));\n    return ret.toJS();\n  } else if (key === \"items\") {\n    const typedState = state as CacheItemsData;\n    const ret = typedState.map((items) => {\n      return items.map((x) => Etebase.toBase64(x));\n    });\n    return ret.toJS();\n  }\n\n  return state;\n};\n\nconst cacheDeserialize = (state: any, key: string | number) => {\n  if (key === \"collections\") {\n    return ImmutableMap<string, string>(state).map((x) => {\n      return Etebase.fromBase64(x);\n    });\n  } else if (key === \"items\") {\n    return ImmutableMap(state).map((item: any) => {\n      return ImmutableMap<string, string>(item).map((x) => Etebase.fromBase64(x));\n    });\n  }\n\n  return state;\n};\n\nconst cachePersistConfig = {\n  key: \"cache2\",\n  version: 0,\n  storage: localforage,\n  transforms: [createTransform(cacheSerialize, cacheDeserialize)] as any,\n};\n\nconst reducers = combineReducers({\n  fetchCount,\n  settings: persistReducer(settingsPersistConfig, settingsReducer),\n  credentials: persistReducer(credentialsPersistConfig, credentials),\n  encryptionKey: persistReducer(encryptionKeyPersistConfig, encryptionKeyReducer),\n  sync: persistReducer(syncPersistConfig, combineReducers({\n    collections: syncCollections,\n    general: syncGeneral,\n  })),\n  cache: persistReducer(cachePersistConfig, combineReducers({\n    collections,\n    items,\n  })),\n  errors: errorsReducer,\n  messages: messagesReducer,\n});\n\nexport default reducers;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport { createStore, applyMiddleware } from \"redux\";\nimport { persistStore } from \"redux-persist\";\nimport thunkMiddleware from \"redux-thunk\";\nimport { createLogger } from \"redux-logger\";\nimport { ActionMeta } from \"redux-actions\";\nimport { useDispatch } from \"react-redux\";\n\nimport promiseMiddleware from \"./promise-middleware\";\n\nimport reducers from \"./construct\";\n\n// Workaround babel limitation\nexport * from \"./reducers\";\nexport * from \"./construct\";\n\nconst middleware = [\n  thunkMiddleware,\n  promiseMiddleware,\n];\n\nif (process.env.NODE_ENV === \"development\") {\n  middleware.push(createLogger());\n}\n\n// FIXME: Hack, we don't actually return a promise when one is not passed.\nexport function asyncDispatch<T, V>(action: ActionMeta<Promise<T> | T, V>): Promise<ActionMeta<T, V>> {\n  return store.dispatch(action) as any;\n}\n\nexport function useAsyncDispatch() {\n  const dispatch = useDispatch();\n  return function (action: any): any {\n    return dispatch(action) as any;\n  } as typeof asyncDispatch;\n}\n\nexport const store = createStore(\n  reducers,\n  applyMiddleware(...middleware)\n);\n\nexport const persistor = persistStore(store, { manualPersist: true } as any);\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\n// Based on: https://github.com/acdlite/redux-promise/blob/master/src/index.js\n\nfunction isPromise(val: any): val is Promise<any> {\n  return val && typeof val.then === \"function\";\n}\n\nexport default function promiseMiddleware({ dispatch }: any) {\n  return (next: any) => (action: any) => {\n    if (isPromise(action.payload)) {\n      dispatch({ ...action, payload: undefined });\n\n      return action.payload\n        .then((result: any) => dispatch({ ...action, payload: result }))\n        .catch((error: Error) => {\n          dispatch({ ...action, payload: error, error: true });\n          return Promise.reject(error);\n        });\n    } else {\n      return next(action);\n    }\n  };\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nexport const appName = \"EteSync\";\nexport const defaultServerUrl = process.env.REACT_APP_DEFAULT_API_PATH ?? \"https://api.etebase.com/partner/etesync/\";\nexport const homePage = \"https://www.etesync.com/\";\nexport const faq = homePage + \"faq/\";\nexport const pricing = homePage + \"pricing/\";\nexport const getApps = homePage + \"get-apps/\";\nexport const terms = homePage + \"tos/\";\nexport const sourceCode = \"https://github.com/etesync/etesync-web\";\nexport const reportIssue = sourceCode + \"/issues\";\n\nexport const forgotPassword = \"https://www.etesync.com/faq/#forgot-password\";\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as ICAL from \"ical.js\";\nimport * as zones from \"./data/zones.json\";\nimport moment from \"moment\";\nimport * as uuid from \"uuid\";\n\nexport const PRODID = \"-//iCal.js EteSync iOS\";\n\nexport interface PimType {\n  uid: string;\n  collectionUid?: string;\n  itemUid?: string;\n  toIcal(): string;\n  clone(): PimType;\n  lastModified: ICAL.Time | undefined;\n}\n\nexport function timezoneLoadFromName(timezone: string | null) {\n  if (!timezone) {\n    return null;\n  }\n\n  let zone = zones.zones[timezone];\n  if (!zone && zones.aliases[timezone]) {\n    zone = zones.zones[zones.aliases[timezone]];\n  }\n\n  if (!zone) {\n    return null;\n  }\n\n  if (ICAL.TimezoneService.has(timezone)) {\n    return ICAL.TimezoneService.get(timezone);\n  }\n\n  const component = new ICAL.Component(\"vtimezone\");\n  zone.ics.forEach((zonePart: string) => {\n    component.addSubcomponent(new ICAL.Component(ICAL.parse(zonePart)));\n  });\n  component.addPropertyWithValue(\"tzid\", timezone);\n\n  const retZone = new ICAL.Timezone({\n    component,\n    tzid: timezone,\n  });\n\n  ICAL.TimezoneService.register(timezone, retZone);\n\n  return retZone;\n}\n\nexport function parseString(content: string) {\n  content = content.replace(/^[a-zA-Z0-9]*\\./gm, \"\"); // FIXME: ugly hack to ignore item groups.\n  return new ICAL.Component(ICAL.parse(content));\n}\n\nexport class EventType extends ICAL.Event implements PimType {\n  public collectionUid?: string;\n  public itemUid?: string;\n\n  public static isEvent(comp: ICAL.Component) {\n    return !!comp.getFirstSubcomponent(\"vevent\");\n  }\n\n  public static fromVCalendar(comp: ICAL.Component) {\n    const event = new EventType(comp.getFirstSubcomponent(\"vevent\"));\n    // FIXME: we need to clone it so it loads the correct timezone and applies it\n    timezoneLoadFromName(event.timezone);\n    return event.clone();\n  }\n\n  public static parse(content: string) {\n    return EventType.fromVCalendar(parseString(content));\n  }\n\n  public color: string;\n\n  get timezone() {\n    if (this.startDate) {\n      return this.startDate.timezone;\n    } else if (this.endDate) {\n      return this.endDate.timezone;\n    }\n\n    return null;\n  }\n\n  get title() {\n    return this.summary;\n  }\n\n  set title(title: string) {\n    this.summary = title;\n  }\n\n  get start() {\n    return this.startDate.toJSDate();\n  }\n\n  get end() {\n    return this.endDate.toJSDate();\n  }\n\n  get allDay() {\n    return this.startDate.isDate;\n  }\n\n  get desc() {\n    return this.description;\n  }\n\n  get lastModified() {\n    return this.component.getFirstPropertyValue(\"last-modified\");\n  }\n\n  set lastModified(time: ICAL.Time) {\n    this.component.updatePropertyWithValue(\"last-modified\", time);\n  }\n\n  get rrule() {\n    return this.component.getFirstPropertyValue(\"rrule\");\n  }\n\n  set rrule(rule: ICAL.Recur) {\n    this.component.updatePropertyWithValue(\"rrule\", rule);\n  }\n\n  public toIcal() {\n    const comp = new ICAL.Component([\"vcalendar\", [], []]);\n    comp.updatePropertyWithValue(\"prodid\", PRODID);\n    comp.updatePropertyWithValue(\"version\", \"2.0\");\n\n    comp.addSubcomponent(this.component);\n    ICAL.helpers.updateTimezones(comp);\n    return comp.toString();\n  }\n\n  public clone() {\n    const ret = new EventType(ICAL.Component.fromString(this.component.toString()));\n    ret.color = this.color;\n    ret.collectionUid = this.collectionUid;\n    ret.itemUid = this.itemUid;\n    return ret;\n  }\n}\n\nexport enum TaskStatusType {\n  NeedsAction = \"NEEDS-ACTION\",\n  Completed = \"COMPLETED\",\n  InProcess = \"IN-PROCESS\",\n  Cancelled = \"CANCELLED\",\n}\n\nexport enum TaskPriorityType {\n  Undefined = 0,\n  High = 1,\n  Medium = 5,\n  Low = 9\n}\n\nexport let TaskTags = [\"Work\", \"Home\"];\n\nexport function setTaskTags(tags: string[]) {\n  TaskTags = tags;\n}\n\nexport class TaskType extends EventType {\n  public collectionUid?: string;\n  public itemUid?: string;\n\n  public static fromVCalendar(comp: ICAL.Component) {\n    const task = new TaskType(comp.getFirstSubcomponent(\"vtodo\"));\n    // FIXME: we need to clone it so it loads the correct timezone and applies it\n    timezoneLoadFromName(task.timezone);\n    return task.clone();\n  }\n\n  public static parse(content: string) {\n    return TaskType.fromVCalendar(parseString(content));\n  }\n\n  public color: string;\n\n  constructor(comp?: ICAL.Component | null) {\n    super(comp ? comp : new ICAL.Component(\"vtodo\"));\n  }\n\n  get finished() {\n    return this.status === TaskStatusType.Completed ||\n      this.status === TaskStatusType.Cancelled;\n  }\n\n  set status(status: TaskStatusType) {\n    this.component.updatePropertyWithValue(\"status\", status);\n  }\n\n  get status(): TaskStatusType {\n    return this.component.getFirstPropertyValue(\"status\");\n  }\n\n  set priority(priority: TaskPriorityType) {\n    this.component.updatePropertyWithValue(\"priority\", priority);\n  }\n\n  get priority() {\n    return this.component.getFirstPropertyValue(\"priority\");\n  }\n\n  set tags(tags: string[]) {\n    const property = this.component.getFirstProperty(\"categories\");\n    const empty = tags.length === 0;\n    if (property) {\n      if (empty) {\n        this.component.removeAllProperties(\"categories\");\n      } else {\n        property.setValues(tags);\n      }\n    } else if (!empty) {\n      const newProp = new ICAL.Property(\"categories\", this.component);\n      newProp.setValues(tags);\n      this.component.addProperty(newProp);\n    }\n  }\n\n  get tags() {\n    return this.component.getFirstProperty(\"categories\")?.getValues()?.filter((x) => x !== \"\") ?? [];\n  }\n\n  set dueDate(date: ICAL.Time | undefined) {\n    if (date) {\n      this.component.updatePropertyWithValue(\"due\", date);\n    } else {\n      this.component.removeAllProperties(\"due\");\n    }\n  }\n\n  get dueDate() {\n    return this.component.getFirstPropertyValue(\"due\");\n  }\n\n  set completionDate(date: ICAL.Time | undefined) {\n    if (date) {\n      this.component.updatePropertyWithValue(\"completed\", date);\n    } else {\n      this.component.removeAllProperties(\"completed\");\n    }\n  }\n\n  get completionDate() {\n    return this.component.getFirstPropertyValue(\"completed\");\n  }\n\n  set relatedTo(parentUid: string | undefined) {\n    if (parentUid !== undefined) {\n      this.component.updatePropertyWithValue(\"related-to\", parentUid);\n    } else {\n      this.component.removeAllProperties(\"related-to\");\n    }\n  }\n\n  get relatedTo(): string | undefined {\n    return this.component.getFirstPropertyValue(\"related-to\");\n  }\n\n  get endDate() {\n    // XXX: A hack to override this as it shouldn't be used\n    return undefined as any;\n  }\n\n  get allDay() {\n    return !!((this.startDate?.isDate) || (this.dueDate?.isDate));\n  }\n\n  get dueToday() {\n    return this.dueDate && moment(this.dueDate.toJSDate()).isSameOrBefore(moment(), \"day\");\n  }\n\n  get overdue() {\n    if (!this.dueDate) {\n      return false;\n    }\n\n    const dueDate = moment(this.dueDate.toJSDate());\n    const now = moment();\n    return (this.dueDate.isDate) ? dueDate.isBefore(now, \"day\") : dueDate.isBefore(now);\n  }\n\n  get hidden() {\n    if (!this.startDate) {\n      return false;\n    }\n\n    const startDate = moment(this.startDate.toJSDate());\n    const now = moment();\n    return startDate.isAfter(now);\n  }\n\n  public clone() {\n    const ret = new TaskType(ICAL.Component.fromString(this.component.toString()));\n    ret.color = this.color;\n    return ret;\n  }\n\n  public getNextOccurence(): TaskType | null {\n    if (!this.isRecurring()) {\n      return null;\n    }\n\n    const rrule = this.rrule.clone();\n\n    if (rrule.count && rrule.count <= 1) {\n      return null; // end of reccurence\n    }\n\n    rrule.count = null; // clear count so we can iterate as many times as needed\n    const recur = rrule.iterator(this.startDate ?? this.dueDate);\n    let nextRecurrence = recur.next();\n    while ((nextRecurrence = recur.next())) {\n      if (nextRecurrence.compare(ICAL.Time.now()) > 0) {\n        break;\n      }\n    }\n\n    if (!nextRecurrence) {\n      return null; // end of reccurence\n    }\n\n    const nextStartDate = this.startDate ? nextRecurrence : undefined;\n    const nextDueDate = this.dueDate ? nextRecurrence : undefined;\n    if (nextStartDate && nextDueDate) {\n      const offset = this.dueDate!.subtractDateTz(this.startDate);\n      nextDueDate.addDuration(offset);\n    }\n\n    const nextTask = this.clone();\n    nextTask.uid = uuid.v4();\n    if (nextStartDate) {\n      nextTask.startDate = nextStartDate;\n    }\n    if (nextDueDate) {\n      nextTask.dueDate = nextDueDate;\n    }\n\n    if (this.rrule.count) {\n      rrule.count = this.rrule.count - 1;\n      nextTask.rrule = rrule;\n    }\n\n    nextTask.status = TaskStatusType.NeedsAction;\n    nextTask.lastModified = ICAL.Time.now();\n\n    return nextTask;\n  }\n}\n\nexport class ContactType implements PimType {\n  public comp: ICAL.Component;\n  public collectionUid?: string;\n  public itemUid?: string;\n\n\n  public static parse(content: string) {\n    return new ContactType(parseString(content));\n  }\n\n  constructor(comp: ICAL.Component) {\n    this.comp = comp;\n  }\n\n  public toIcal() {\n    return this.comp.toString();\n  }\n\n  public clone() {\n    return new ContactType(ICAL.Component.fromString(this.comp.toString()));\n  }\n\n  get uid() {\n    return this.comp.getFirstPropertyValue(\"uid\");\n  }\n\n  set uid(uid: string) {\n    this.comp.updatePropertyWithValue(\"uid\", uid);\n  }\n\n  get fn() {\n    return this.comp.getFirstPropertyValue(\"fn\");\n  }\n\n  get n() {\n    return this.comp.getFirstPropertyValue(\"n\");\n  }\n\n  get bday() {\n    return this.comp.getFirstPropertyValue(\"bday\");\n  }\n\n  get lastModified() {\n    return this.comp.getFirstPropertyValue(\"rev\");\n  }\n\n  get group() {\n    const kind = this.comp.getFirstPropertyValue(\"kind\");\n    return [\"group\", \"organization\"].includes(kind);\n  }\n\n  get members() {\n    return this.comp.getAllProperties(\"member\").map((prop) => prop.getFirstValue<string>().replace(\"urn:uuid:\", \"\"));\n  }\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport * as ICAL from \"ical.js\";\nimport moment from \"moment\";\nimport { TaskPriorityType } from \"./pim-types\";\n\n// Generic handling of input changes\nexport function handleInputChange(self: React.Component, part?: string) {\n  return (event: React.ChangeEvent<any>) => {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    let newState;\n\n    if (event.target.type === \"checkbox\") {\n      newState = {\n        [name]: event.target.checked,\n      };\n    } else {\n      newState = {\n        [name]: value,\n      };\n    }\n\n    if (part === undefined) {\n      self.setState(newState);\n    } else {\n      self.setState({\n        [part]: {\n          ...self.state[part],\n          ...newState,\n        },\n      });\n    }\n  };\n}\n\nexport function insertSorted<T>(array: T[] = [], newItem: T, key: string) {\n  if (array.length === 0) {\n    return [newItem];\n  }\n\n  for (let i = 0, len = array.length; i < len; i++) {\n    if (newItem[key] < array[i][key]) {\n      array.splice(i, 0, newItem);\n      return array;\n    }\n  }\n\n  array.push(newItem);\n\n  return array;\n}\n\nconst allDayFormat = \"dddd, LL\";\nconst fullFormat = \"LLLL\";\n\nexport function formatDate(date: ICAL.Time) {\n  const mDate = moment(date.toJSDate());\n  if (date.isDate) {\n    return mDate.format(allDayFormat);\n  } else {\n    return mDate.format(fullFormat);\n  }\n}\n\nexport function formatDateRange(start: ICAL.Time, end: ICAL.Time) {\n  const mStart = moment(start.toJSDate());\n  const mEnd = moment(end.toJSDate());\n  let strStart;\n  let strEnd;\n\n  // All day\n  if (start.isDate) {\n    if (mEnd.diff(mStart, \"days\", true) === 1) {\n      return mStart.format(allDayFormat);\n    } else {\n      strStart = mStart.format(allDayFormat);\n      strEnd = mEnd.clone().subtract(1, \"day\").format(allDayFormat);\n    }\n  } else if (mStart.isSame(mEnd, \"day\")) {\n    strStart = mStart.format(fullFormat);\n    strEnd = mEnd.format(\"LT\");\n\n    if (mStart.isSame(mEnd)) {\n      return strStart;\n    }\n  } else {\n    strStart = mStart.format(fullFormat);\n    strEnd = mEnd.format(fullFormat);\n  }\n\n  return strStart + \" - \" + strEnd;\n}\n\nexport function formatOurTimezoneOffset() {\n  let offset = new Date().getTimezoneOffset();\n  const prefix = (offset > 0) ? \"-\" : \"+\";\n  offset = Math.abs(offset);\n  const hours = Math.floor(offset / 60);\n  const minutes = offset % 60;\n\n  return `GMT${prefix}${hours.toString().padStart(2, \"0\")}:${minutes.toString().padStart(2, \"0\")}`;\n}\n\nexport function getCurrentTimezone() {\n  return Intl.DateTimeFormat().resolvedOptions().timeZone;\n}\n\nexport function mapPriority(priority: number): TaskPriorityType {\n  if (priority > 0 && priority < 5) {\n    return TaskPriorityType.High;\n  } else if (priority === 5) {\n    return TaskPriorityType.Medium;\n  } else if (priority > 5 && priority < 10) {\n    return TaskPriorityType.Low;\n  } else {\n    return TaskPriorityType.Undefined;\n  }\n}\n\nexport function* arrayToChunkIterator<T>(arr: T[], size: number) {\n  for (let i = 0 ; i < arr.length ; i += size) {\n    yield arr.slice(i, i + size);\n  }\n}\n\nexport function isPromise(x: any): x is Promise<any> {\n  return x && typeof x.then === \"function\";\n}\n\nexport function isDefined<T>(x: T | undefined): x is T {\n  return x !== undefined;\n}\n\nexport function startTask<T = any>(func: () => Promise<T> | T, delay = 0): Promise<T> {\n  return new Promise((resolve, reject) => {\n    setTimeout(\n      () => {\n        try {\n          const ret = func();\n          if (isPromise(ret)) {\n            ret.then(resolve)\n              .catch(reject);\n          } else {\n            resolve(ret);\n          }\n        } catch (e) {\n          reject(e);\n        }\n      },\n      delay);\n  });\n}\n\nexport function usePromiseMemo<T>(promise: Promise<T> | undefined | null, deps: React.DependencyList, initial: T | undefined = undefined): T | undefined {\n  const [val, setVal] = React.useState<T>((promise as any)._returnedValue ?? initial);\n  React.useEffect(() => {\n    let cancel = false;\n    if (promise === undefined || promise === null) {\n      return undefined;\n    }\n    promise.then((val) => {\n      (promise as any)._returnedValue = val;\n      if (!cancel) {\n        setVal(val);\n      }\n    });\n    return () => {\n      cancel = true;\n    };\n  }, [...deps, promise]);\n  return val;\n}\n\nexport function parseDate(prop: ICAL.Property) {\n  const value = prop.getFirstValue();\n  if ((value.day !== null) && (value.day !== undefined)) {\n    return {\n      day: value.day,\n      month: value.month - 1,\n      year: value.year ?? undefined,\n    };\n  } else {\n    const time = prop.toJSON()[3];\n    if (time.length === 6 && time.startsWith(\"--\")) {\n      return {\n        day: parseInt(time.slice(4, 6)),\n        month: parseInt(time.slice(2, 4)) - 1,\n      };\n    } else if (time.length === 8) {\n      return {\n        day: parseInt(time.slice(6, 8)),\n        month: parseInt(time.slice(4, 6)) - 1,\n        year: parseInt(time.slice(0, 4)),\n      };\n    }\n  }\n\n  return {};\n}\n\nexport const PASSWORD_MIN_LENGTH = 8;\n\nexport function enforcePasswordRules(password: string): string | undefined {\n\n  if (password.length < PASSWORD_MIN_LENGTH) {\n    return `Passwourds should be at least ${PASSWORD_MIN_LENGTH} digits long.`;\n  }\n  return undefined;\n}\n","// SPDX-FileCopyrightText: © 2017 Etebase Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport { useSelector } from \"react-redux\";\nimport { createSelector } from \"reselect\";\n\nimport * as Etebase from \"etebase\";\n\nimport * as store from \"./store\";\nimport { usePromiseMemo } from \"./helpers\";\n\nexport const credentialsSelector = createSelector(\n  (state: store.StoreState) => state.credentials.storedSession,\n  (storedSession) => {\n    if (storedSession) {\n      return Etebase.Account.restore(storedSession);\n    } else {\n      return Promise.resolve(null);\n    }\n  }\n);\n\nexport function useCredentials() {\n  const credentialsPromise = useSelector(credentialsSelector);\n  return usePromiseMemo(credentialsPromise, [credentialsPromise]);\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { List, ListItem, ListSubheader, ListDivider } from \"../widgets/List\";\nimport ActionCode from \"@material-ui/icons/Code\";\nimport ActionHome from \"@material-ui/icons/Home\";\nimport ActionSettings from \"@material-ui/icons/Settings\";\nimport ActionJournals from \"@material-ui/icons/LibraryBooks\";\nimport ActionBugReport from \"@material-ui/icons/BugReport\";\nimport ActionQuestionAnswer from \"@material-ui/icons/QuestionAnswer\";\nimport LogoutIcon from \"@material-ui/icons/PowerSettingsNew\";\nimport IconImport from \"@material-ui/icons/ImportExport\";\nimport IconInvitation from \"@material-ui/icons/MailOutline\";\n\nimport logo from \"../images/logo.svg\";\n\nimport { routeResolver } from \"../App\";\n\nimport { store } from \"../store\";\nimport { logout } from \"../store/actions\";\n\nimport * as C from \"../constants\";\nimport { useTheme } from \"@material-ui/core\";\nimport { useCredentials } from \"../credentials\";\nimport { useHistory } from \"react-router\";\n\ninterface PropsType {\n  onCloseDrawerRequest: () => void;\n}\n\nexport default function SideMenu(props: PropsType) {\n  const theme = useTheme();\n  const etebase = useCredentials();\n  const username = etebase?.user.username ?? C.appName;\n  const history = useHistory();\n\n  function logoutDo() {\n    store.dispatch(logout(etebase!));\n    props.onCloseDrawerRequest();\n  }\n\n  let loggedInItems;\n  if (etebase) {\n    loggedInItems = (\n      <React.Fragment>\n        <ListItem\n          primaryText=\"Collections\"\n          leftIcon={<ActionJournals />}\n          onClick={() => {\n            props.onCloseDrawerRequest();\n            history.push(routeResolver.getRoute(\"collections\"));\n          }}\n        />\n        <ListItem\n          primaryText=\"Invitations\"\n          leftIcon={<IconInvitation />}\n          onClick={() => {\n            props.onCloseDrawerRequest();\n            history.push(routeResolver.getRoute(\"collections.invitations\"));\n          }}\n        />\n        <ListItem\n          primaryText=\"Import\"\n          leftIcon={<IconImport />}\n          onClick={() => {\n            props.onCloseDrawerRequest();\n            history.push(routeResolver.getRoute(\"collections.import\"));\n          }}\n        />\n        <ListItem\n          primaryText=\"Settings\"\n          leftIcon={<ActionSettings />}\n          onClick={() => {\n            props.onCloseDrawerRequest();\n            history.push(routeResolver.getRoute(\"settings\"));\n          }}\n        />\n        <ListItem primaryText=\"Log Out\" leftIcon={<LogoutIcon />} onClick={logoutDo} />\n      </React.Fragment>\n    );\n  }\n\n  return (\n    <div style={{ overflowX: \"hidden\", width: 250 }}>\n      <div className=\"App-drawer-header\">\n        <img alt=\"App logo\" className=\"App-drawer-logo\" src={logo} />\n        <div style={{ color: theme.palette.secondary.contrastText }}>\n          {username}\n        </div>\n      </div>\n      <List>\n        <ListItem\n          primaryText=\"Main\"\n          leftIcon={<ActionHome />}\n          onClick={() => {\n            props.onCloseDrawerRequest();\n            history.push(routeResolver.getRoute(\"home\"));\n          }}\n        />\n        {loggedInItems}\n        <ListDivider />\n        <ListSubheader>External Links</ListSubheader>\n        <ListItem primaryText=\"Website\" leftIcon={<ActionHome />} href={C.homePage} />\n        <ListItem primaryText=\"FAQ\" leftIcon={<ActionQuestionAnswer />} href={C.faq} />\n        <ListItem primaryText=\"Source Code\" leftIcon={<ActionCode />} href={C.sourceCode} />\n        <ListItem primaryText=\"Report Issue\" leftIcon={<ActionBugReport />} href={C.reportIssue} />\n      </List>\n    </div>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nexport interface RouteKeysType {\n  [Identifier: string]: any;\n}\n\nexport class RouteResolver {\n  public routes: {};\n\n  constructor(routes: {}) {\n    this.routes = routes;\n  }\n\n  public getRoute(name: string, _keys?: RouteKeysType): string {\n    let dict = this.routes;\n\n    let path: string[] = [];\n    name.split(\".\").forEach((key) => {\n      const val = (typeof dict[key] === \"string\") ? dict[key] : (dict[key]._base) ? dict[key]._base : key;\n      path.push(val);\n\n      dict = dict[key];\n    });\n\n    if (_keys) {\n      const keys = Object.assign({}, _keys);\n\n      path = path.map((pathComponent) => {\n        return pathComponent.split(\"/\").map((val) => {\n          if (val[0] === \":\") {\n            const ret = keys[val.slice(1)];\n            if (ret === undefined) {\n              throw new Error(\"Missing key: \" + val.slice(1));\n            }\n\n            delete keys[val.slice(1)];\n            return ret;\n          }\n\n          return val;\n        }).join(\"/\");\n      });\n\n      if (Object.keys(keys).length !== 0) {\n        throw new Error(\"Too many keys for route.\");\n      }\n    }\n\n    return \"/\" + path.join(\"/\");\n  }\n}\n","// SPDX-FileCopyrightText: © 2019 EteSync Authors\n// SPDX-License-Identifier: GPL-3.0-only\n\nimport * as Etebase from \"etebase\";\n\nimport { store, StoreState } from \"../store\";\n\nimport { credentialsSelector } from \"../credentials\";\nimport { setSyncCollection, setSyncGeneral, setCacheCollection, unsetCacheCollection, setCacheItemMulti, appendError } from \"../store/actions\";\n\nconst cachedSyncManager = new Map<string, SyncManager>();\nexport class SyncManager {\n  private COLLECTION_TYPES = [\"etebase.vcard\", \"etebase.vevent\", \"etebase.vtodo\"];\n  private BATCH_SIZE = 40;\n\n  public static getManager(etebase: Etebase.Account) {\n    const cached = cachedSyncManager.get(etebase.user.username);\n    if (cached) {\n      return cached;\n    }\n\n    const ret = new SyncManager();\n    cachedSyncManager.set(etebase.user.username, ret);\n    return ret;\n  }\n\n  public static removeManager(etebase: Etebase.Account) {\n    cachedSyncManager.delete(etebase.user.username);\n  }\n\n  protected etebase: Etebase.Account;\n  protected isSyncing: boolean;\n\n  private async fetchCollection(col: Etebase.Collection) {\n    const storeState = store.getState() as unknown as StoreState;\n    const etebase = (await credentialsSelector(storeState))!;\n    const syncCollection = storeState.sync.collections.get(col.uid, undefined);\n\n    const colMgr = etebase.getCollectionManager();\n    const itemMgr = colMgr.getItemManager(col);\n\n    let stoken = syncCollection?.stoken;\n    const limit = this.BATCH_SIZE;\n    let done = false;\n    while (!done) {\n      const items = await itemMgr.list({ stoken, limit });\n      store.dispatch(setCacheItemMulti(col.uid, itemMgr, items.data));\n      done = items.done;\n      stoken = items.stoken;\n    }\n\n    if (syncCollection?.stoken !== stoken) {\n      store.dispatch(setSyncCollection(col.uid, stoken!));\n    }\n  }\n\n  private async fetchAllCollections() {\n    const storeState = store.getState() as unknown as StoreState;\n    const etebase = (await credentialsSelector(storeState))!;\n    const syncGeneral = storeState.sync.general;\n\n    const colMgr = etebase.getCollectionManager();\n    const limit = this.BATCH_SIZE;\n    let stoken = syncGeneral?.stoken;\n    let done = false;\n    while (!done) {\n      const collections = await colMgr.list(this.COLLECTION_TYPES, { stoken, limit });\n      for (const col of collections.data) {\n        const collectionType = col.getCollectionType();\n        if (this.COLLECTION_TYPES.includes(collectionType)) {\n          store.dispatch(setCacheCollection(colMgr, col));\n          await this.fetchCollection(col);\n        }\n      }\n      if (collections.removedMemberships) {\n        for (const removed of collections.removedMemberships) {\n          store.dispatch(unsetCacheCollection(colMgr, removed.uid));\n        }\n      }\n      done = collections.done;\n      stoken = collections.stoken;\n    }\n\n    if (syncGeneral?.stoken !== stoken) {\n      store.dispatch(setSyncGeneral(stoken));\n    }\n    return true;\n  }\n\n  public async sync(alwaysThrowErrors = false) {\n    if (this.isSyncing) {\n      return false;\n    }\n    this.isSyncing = true;\n\n    try {\n      const stoken = await this.fetchAllCollections();\n      return stoken;\n    } catch (e) {\n      if (alwaysThrowErrors) {\n        throw e;\n      }\n\n      if (e instanceof Etebase.NetworkError || e instanceof Etebase.TemporaryServerError) {\n        // Ignore network errors\n        return null;\n      } else if (e instanceof Etebase.PermissionDeniedError) {\n        store.dispatch(appendError(e));\n        return null;\n      } else if (e instanceof Etebase.HttpError) {\n        store.dispatch(appendError(e));\n        return null;\n      }\n      throw e;\n    } finally {\n      this.isSyncing = false;\n    }\n  }\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nexport default (props: any) => {\n  return (\n    <CircularProgress size={60} thickness={7} {...props} />\n  );\n};\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\n\nexport default (props: {title: string, children?: React.ReactNode | React.ReactNode[]}) => {\n  const titleEl = document.querySelector(\"#appbar-title\");\n  const buttonsEl = document.querySelector(\"#appbar-buttons\");\n\n  return (\n    <>\n      {titleEl && ReactDOM.createPortal(\n        <span>{props.title}</span>,\n        titleEl\n      )}\n      {buttonsEl && props.children && ReactDOM.createPortal(\n        props.children,\n        buttonsEl\n      )}\n    </>\n  );\n};\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\n\nimport \"./Container.css\";\n\nexport default (props: {style?: React.CSSProperties, children: any}) => {\n  const display = props.style?.display;\n  const flexDirection = props.style?.flexDirection;\n\n  return (\n    <div className=\"Container\" style={props.style}>\n      <Paper elevation={3} style={{ display, flexDirection, flexGrow: 1 }}>\n        <div className=\"Container-inner\" style={{ display, flexDirection, flexGrow: 1 }}>\n          {props.children}\n        </div>\n      </Paper>\n    </div>\n  );\n};\n","import memoize from \"memoizee\";\n\nimport * as Etebase from \"etebase\";\nimport { useSelector } from \"react-redux\";\n\nimport { StoreState } from \"./store\";\nimport { CacheCollectionsData, CacheItems, CacheItemsData } from \"./store/reducers\";\nimport { usePromiseMemo } from \"./helpers\";\n\nexport const getCollections = memoize(async function (cachedCollections: CacheCollectionsData, etebase: Etebase.Account) {\n  const colMgr = getCollectionManager(etebase);\n  const ret: Etebase.Collection[] = [];\n  for (const cached of cachedCollections.values()) {\n    ret.push(colMgr.cacheLoad(cached));\n  }\n  return ret;\n}, { length: 1 });\n\nexport const getCollectionsByType = memoize(async function (cachedCollections: CacheCollectionsData, colType: string, etebase: Etebase.Account) {\n  const collections = await getCollections(cachedCollections, etebase);\n  const ret: Etebase.Collection[] = [];\n  for (const col of collections) {\n    const collectionType = col.getCollectionType();\n    if (collectionType === colType) {\n      ret.push(col);\n    }\n  }\n  return ret;\n}, { length: 2 });\n\nexport const getItems = memoize(async function (cachedItems: CacheItems, itemMgr: Etebase.ItemManager) {\n  const ret = new Map<string, Etebase.Item>();\n  for (const cached of cachedItems.values()) {\n    const item = itemMgr.cacheLoad(cached);\n    ret.set(item.uid, item);\n  }\n  return ret;\n}, { length: 1 });\n\nexport const getItemsByType = memoize(async function (cachedCollections: CacheCollectionsData, cachedItems: CacheItemsData, colType: string, etebase: Etebase.Account) {\n  const colMgr = getCollectionManager(etebase);\n  const collections = await getCollectionsByType(cachedCollections, colType, etebase);\n  const ret = new Map<string, Map<string, Etebase.Item>>();\n  for (const col of collections) {\n    const itemMgr = colMgr.getItemManager(col);\n    const cachedColItems = cachedItems.get(col.uid);\n    if (cachedColItems) {\n      const items = await getItems(cachedColItems, itemMgr);\n      ret.set(col.uid, items);\n    }\n  }\n  return ret;\n}, { length: 3 });\n\nexport const getCollectionManager = memoize(function (etebase: Etebase.Account) {\n  return etebase.getCollectionManager();\n});\n\n// React specific stuff\nexport function useCollections(etebase: Etebase.Account, colType?: string) {\n  const cachedCollections = useSelector((state: StoreState) => state.cache.collections);\n  return usePromiseMemo(\n    (colType) ?\n      getCollectionsByType(cachedCollections, colType, etebase) :\n      getCollections(cachedCollections, etebase),\n    [etebase, cachedCollections, colType]\n  );\n}\n\nexport function useItems(etebase: Etebase.Account, colType: string) {\n  const cachedCollections = useSelector((state: StoreState) => state.cache.collections);\n  const cachedItems = useSelector((state: StoreState) => state.cache.items);\n  return usePromiseMemo(\n    getItemsByType(cachedCollections, cachedItems, colType, etebase),\n    [etebase, cachedCollections, cachedItems, colType]\n  );\n}\n","import * as React from \"react\";\n\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport LabelIcon from \"@material-ui/icons/LabelOutlined\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport EditIcon from \"@material-ui/icons/EditOutlined\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport { List, ListItem, ListSubheader } from \"../widgets/List\";\nimport { ContactType } from \"../pim-types\";\n\ninterface ListItemPropsType {\n  name: string | undefined;\n  icon?: React.ReactElement;\n  primaryText: string;\n  filterByGroup: string | undefined;\n  setFilterByGroup: (group: string | undefined) => void;\n  editGroup: () => void;\n}\n\nfunction SidebarListItem(props: ListItemPropsType) {\n  const { name, icon, primaryText, filterByGroup, editGroup } = props;\n\n  const handleClick = () => props.setFilterByGroup(name);\n\n  const selected = name === filterByGroup;\n\n  return (\n    <ListItem\n      onClick={handleClick}\n      selected={selected}\n      leftIcon={icon}\n      primaryText={primaryText}\n      secondaryAction={name && selected &&\n        <IconButton onClick={editGroup}>\n          <EditIcon />\n        </IconButton>\n      }\n    />\n  );\n}\n\ninterface PropsType {\n  groups: ContactType[];\n  filterByGroup: string | undefined;\n  setFilterByGroup: (group: string | undefined) => void;\n  newGroup: () => void;\n  editGroup: (group: ContactType) => void;\n}\n\nexport default React.memo(function Sidebar(props: PropsType) {\n  const { groups, filterByGroup, setFilterByGroup, newGroup, editGroup } = props;\n\n  const groupList = [...groups].sort((a, b) => a.fn.localeCompare(b.fn)).map((group) => (\n    <SidebarListItem\n      key={group.uid}\n      name={group.uid}\n      primaryText={group.fn}\n      icon={<LabelIcon />}\n      filterByGroup={filterByGroup}\n      setFilterByGroup={setFilterByGroup}\n      editGroup={() => editGroup(group)}\n    />\n  ));\n\n  return (\n    <List dense>\n      <SidebarListItem\n        name={undefined}\n        primaryText=\"All\"\n        icon={<InboxIcon />}\n        filterByGroup={filterByGroup}\n        setFilterByGroup={setFilterByGroup}\n        editGroup={newGroup}\n      />\n\n      <div style={{ display: \"flex\", justifyContent: \"space-between\" }}>\n        <ListSubheader>\n          Groups\n        </ListSubheader>\n        <IconButton\n          edge=\"end\"\n          onClick={newGroup}\n        >\n          <AddIcon />\n        </IconButton>\n      </div>\n\n      {groupList}\n    </List>\n  );\n});\n","import * as React from \"react\";\n\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Transition } from \"react-transition-group\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nconst transitionTimeout = 300;\n\nconst transitionStyles = {\n  entering: { visibility: \"visible\", width: \"100%\", overflow: \"hidden\" },\n  entered: { visibility: \"visible\", width: \"100%\" },\n  exiting: { visibility: \"visible\", width: \"0%\", overflow: \"hidden\" },\n  exited: { visibility: \"hidden\", width: \"0%\" },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  textField: {\n    transition: `width ${transitionTimeout}ms`,\n    marginRight: theme.spacing(1),\n  },\n}));\n\ninterface PropsType {\n  searchTerm: string;\n  setSearchTerm: (term: string) => void;\n}\n\nexport default function Toolbar(props: PropsType) {\n  const { searchTerm, setSearchTerm } = props;\n\n  const showSearchField = true;\n  const classes = useStyles();\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\n      <Transition in={showSearchField} timeout={transitionTimeout}>\n        {(state) => (\n          <TextField\n            fullWidth\n            placeholder=\"Search\"\n            value={searchTerm}\n            color=\"secondary\"\n            variant=\"standard\"\n            className={classes.textField}\n            style={transitionStyles[state]}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        )}\n      </Transition>\n    </div>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nexport const Avatar = React.memo((props: { children: React.ReactNode[] | React.ReactNode, size?: number, style?: any }) => {\n  const size = (props.size) ? props.size : 40;\n\n  return (\n    <div\n      style={{\n        backgroundColor: \"grey\",\n        color: \"white\",\n        display: \"inline-flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        borderRadius: \"50%\",\n        height: size,\n        width: size,\n        ...props.style,\n      }}\n    >\n      {props.children}\n    </div>\n  );\n});\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport { createSelector } from \"reselect\";\n\nimport * as colors from \"@material-ui/core/colors\";\nimport { AutoSizer, List as VirtualizedList } from \"react-virtualized\";\n\nimport { Avatar } from \"../widgets/Avatar\";\nimport { List, ListItem } from \"../widgets/List\";\n\nimport { ContactType } from \"../pim-types\";\n\nfunction getContactColor(contact: ContactType) {\n  const colorOptions = [\n    colors.red[500],\n    colors.pink[500],\n    colors.purple[500],\n    colors.deepPurple[500],\n    colors.indigo[500],\n    colors.blue[500],\n    colors.lightBlue[500],\n    colors.cyan[500],\n    colors.teal[500],\n    colors.green[500],\n    colors.lightGreen[500],\n    colors.lime[500],\n    colors.yellow[500],\n    colors.amber[500],\n    colors.orange[500],\n    colors.deepOrange[500],\n  ];\n\n  if (!contact.uid) {\n    console.error(`Contact uid is null for contact ${contact.fn}`);\n    console.error(contact.toIcal());\n    return colorOptions[0];\n  }\n\n  let sum = 0;\n  const uid = contact.uid;\n  for (let i = 0 ; i < uid.length ; i++) {\n    sum += uid.charCodeAt(i);\n  }\n\n  return colorOptions[sum % colorOptions.length];\n}\n\nconst AddressBookItem = React.memo((_props: any) => {\n  const {\n    style,\n    entry,\n    onClick,\n  } = _props;\n  const name = entry.fn;\n\n  return (\n    <ListItem\n      style={style}\n      leftIcon={\n        <Avatar style={{ backgroundColor: getContactColor(entry) }}>\n          {name && name[0] && name[0].toUpperCase()}\n        </Avatar>}\n      primaryText={name}\n      onClick={() => onClick(entry)}\n    />\n  );\n});\n\nconst sortSelector = createSelector(\n  (entries: ContactType[]) => entries,\n  (entries) => {\n    return entries.sort((_a, _b) => {\n      const a = _a.fn ?? \"\";\n      const b = _b.fn ?? \"\";\n\n      return a.localeCompare(b, undefined, { sensitivity: \"base\" });\n    });\n  }\n);\n\ninterface PropsType {\n  entries: ContactType[];\n  onItemClick: (contact: ContactType) => void;\n  filter?: (a: ContactType) => boolean;\n}\n\nclass AddressBook extends React.PureComponent<PropsType> {\n  public render() {\n    const sortedEntries = sortSelector(this.props.entries);\n\n    const entries = (this.props.filter) ?\n      sortedEntries.filter(this.props.filter)\n      : sortedEntries;\n\n    return (\n      <List style={{ height: \"calc(100vh - 350px)\" }}>\n        <AutoSizer>\n          {({ height, width }) => (\n            <VirtualizedList\n              width={width}\n              height={height}\n              rowCount={entries.length}\n              rowHeight={56}\n              rowRenderer={({ index, key, style }) => {\n                return (\n                  <AddressBookItem\n                    key={key}\n                    style={style}\n                    entry={entries[index]}\n                    onClick={this.props.onItemClick}\n                  />\n                );\n              }}\n            />\n          )}\n        </AutoSizer>\n      </List>\n    );\n  }\n}\n\nexport default AddressBook;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport { makeStyles, useTheme } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\n\nimport { ContactType } from \"../pim-types\";\n\nimport Sidebar from \"./Sidebar\";\nimport Toolbar from \"./Toolbar\";\nimport AddressBook from \"./AddressBook\";\n\nconst useStyles = makeStyles((theme) => ({\n  topBar: {\n    backgroundColor: theme.palette.primary[500],\n  },\n}));\n\ninterface PropsType {\n  entries: ContactType[];\n  onItemClick: (contact: ContactType) => void;\n  onNewGroupClick: () => void;\n}\n\nexport default function SearchableAddressBook(props: PropsType) {\n  const [searchQuery, setSearchQuery] = React.useState(\"\");\n  const [filterByGroup, setFilterByGroup] = React.useState<string>();\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const groups = React.useMemo(\n    (() => props.entries.filter((x) => x.group)),\n    [props.entries]\n  );\n  const group = React.useMemo(\n    (() => groups.find((x) => x.uid === filterByGroup)),\n    [groups, filterByGroup]\n  );\n\n  function filterFunc(ent: ContactType) {\n    return (\n      (!group || (group.members.includes(ent.uid))) &&\n      ent.fn?.match(reg)\n    );\n  }\n\n  const reg = new RegExp(searchQuery, \"i\");\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={3} className={classes.topBar}>\n        {/* spacer */}\n      </Grid>\n\n      <Grid item xs={9} className={classes.topBar}>\n        <Toolbar\n          searchTerm={searchQuery}\n          setSearchTerm={setSearchQuery}\n        />\n      </Grid>\n\n      <Grid item xs={3} style={{ borderRight: `1px solid ${theme.palette.divider}` }}>\n        <Sidebar\n          groups={groups}\n          filterByGroup={filterByGroup}\n          setFilterByGroup={setFilterByGroup}\n          newGroup={props.onNewGroupClick}\n          editGroup={props.onItemClick}\n        />\n      </Grid>\n\n      <Grid item xs>\n        <Divider style={{ marginTop: \"1em\" }} />\n\n        <AddressBook filter={filterFunc} {...props} />\n      </Grid>\n    </Grid>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport SvgIcon from \"@material-ui/core/SvgIcon\";\n\nexport default function CopyIcon(props: any) {\n  return (\n    <SvgIcon {...props}>\n      <path d=\"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12V1zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2zm0 16H8V7h11v14z\" />\n    </SvgIcon>\n  );\n}\n\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport Color from \"color\";\n\nimport { Theme, withTheme } from \"@material-ui/core/styles\";\n\nexport default withTheme((props: {text: string, backgroundColor?: string, children?: any, rightItem?: React.ReactNode, theme: Theme}) => {\n  const backgroundColor = props.backgroundColor ?? props.theme.palette.secondary.main;\n  const foregroundColor = props.theme.palette.getContrastText(Color(backgroundColor).rgb().string());\n  const style = {\n    header: {\n      backgroundColor,\n      color: foregroundColor,\n      padding: 15,\n      display: \"flex\",\n      justifyContent: \"space-between\",\n    },\n    headerText: {\n      marginTop: 10,\n      marginBottom: 10,\n    },\n  };\n\n  return (\n    <div style={style.header}>\n      <div>\n        <h2 style={style.headerText}>{props.text}</h2>\n        {props.children}\n      </div>\n      {props.rightItem}\n    </div>\n  );\n});\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport moment from \"moment\";\n\nimport { List, ListItem, ListDivider as Divider } from \"../widgets/List\";\nimport IconHome from \"@material-ui/icons/Home\";\nimport IconDate from \"@material-ui/icons/DateRange\";\nimport CommunicationCall from \"@material-ui/icons/Call\";\nimport CommunicationChatBubble from \"@material-ui/icons/ChatBubble\";\nimport CommunicationEmail from \"@material-ui/icons/Email\";\nimport CopyIcon from \"../icons/Copy\";\n\nimport PimItemHeader from \"../components/PimItemHeader\";\n\nimport { ContactType } from \"../pim-types\";\nimport { IconButton, Avatar } from \"@material-ui/core\";\n\nclass Contact extends React.PureComponent {\n  public props: {\n    item?: ContactType;\n  };\n\n  public render() {\n    if (this.props.item === undefined) {\n      throw Error(\"Contact should be defined!\");\n    }\n\n    const contact = this.props.item;\n    const name = contact.fn;\n\n    const revProp = contact.comp.getFirstProperty(\"rev\");\n    const lastModified = (revProp) ?\n      \"Modified: \" + moment(revProp.getFirstValue().toJSDate()).format(\"LLLL\") : undefined;\n\n    const lists = [];\n\n    function getAllType(\n      propName: string,\n      props_: any,\n      valueToHref?: (value: string, type: string) => string,\n      primaryTransform?: (value: string, type: string) => string,\n      secondaryTransform?: (value: string, type: string) => string) {\n\n      return contact.comp.getAllProperties(propName).map((prop, idx) => {\n        const type = prop.toJSON()[1].type;\n        const values = prop.getValues().map((val) => {\n          const primaryText = primaryTransform ? primaryTransform(val, type) : val;\n          const clipboardButton = (\n            <IconButton\n              onClick={(e) => {\n                e.preventDefault();\n                (window as any).navigator.clipboard.writeText(primaryText);\n              }}\n            >\n              <CopyIcon />\n            </IconButton>\n          );\n\n          const { ref, ...props } = props_;\n\n          return (\n            <ListItem\n              key={idx}\n              href={valueToHref ? valueToHref(val, type) : undefined}\n              primaryText={primaryText}\n              rightIcon={clipboardButton}\n              secondaryText={secondaryTransform ? secondaryTransform(val, type) : type}\n              {...props}\n            />\n          );\n        });\n        return values;\n      });\n    }\n\n    lists.push(getAllType(\n      \"tel\",\n      {\n        leftIcon: <CommunicationCall />,\n      },\n      (x) => (\"tel:\" + x)\n    ));\n\n    lists.push(getAllType(\n      \"email\",\n      {\n        leftIcon: <CommunicationEmail />,\n      },\n      (x) => (\"mailto:\" + x)\n    ));\n\n    lists.push(getAllType(\n      \"impp\",\n      {\n        leftIcon: <CommunicationChatBubble />,\n      },\n      (x) => x,\n      (x) => (x.substring(x.indexOf(\":\") + 1)),\n      (x) => (x.substring(0, x.indexOf(\":\")))\n    ));\n\n    lists.push(getAllType(\n      \"adr\",\n      {\n        leftIcon: <IconHome />,\n      }\n    ));\n\n    lists.push(getAllType(\n      \"bday\",\n      {\n        leftIcon: <IconDate />,\n      },\n      undefined,\n      ((x: any) => moment(x.toJSDate()).format(\"dddd, LL\")),\n      () => \"Birthday\"\n    ));\n\n    lists.push(getAllType(\n      \"anniversary\",\n      {\n        leftIcon: <IconDate />,\n      },\n      undefined,\n      ((x: any) => moment(x.toJSDate()).format(\"dddd, LL\")),\n      () => \"Anniversary\"\n    ));\n\n    const skips = [\"tel\", \"email\", \"impp\", \"adr\", \"bday\", \"anniversary\", \"rev\",\n      \"prodid\", \"uid\", \"fn\", \"n\", \"version\", \"photo\", \"note\"];\n    const theRest = contact.comp.getAllProperties().filter((prop) => (\n      skips.indexOf(prop.name) === -1\n    )).map((prop, idx) => {\n      const values = prop.getValues().map((_val) => {\n        const val = (_val instanceof String) ? _val : _val.toString();\n        return (\n          <ListItem\n            key={idx}\n            insetChildren\n            primaryText={val}\n            secondaryText={prop.name}\n          />\n        );\n      });\n      return values;\n    });\n\n    {\n      const note = contact.comp.getFirstPropertyValue(\"note\");\n      const item = (\n        <ListItem\n          key=\"note\"\n          insetChildren\n          secondaryText=\"note\"\n        >\n          <pre style={{ wordWrap: \"break-word\", whiteSpace: \"pre-wrap\", overflowX: \"auto\" }}>{note}</pre>\n        </ListItem>\n      );\n      theRest.push([item]);\n    }\n\n    function listIfNotEmpty(items: JSX.Element[][]) {\n      if (items.length > 0) {\n        return (\n          <React.Fragment>\n            <List>\n              {items}\n            </List>\n            <List>\n              <Divider inset />\n            </List>\n          </React.Fragment>\n        );\n      } else {\n        return undefined;\n      }\n    }\n\n    const contactImageSrc = contact.comp.getFirstProperty(\"photo\")?.getFirstValue();\n\n    return (\n      <div>\n        <PimItemHeader text={name} rightItem={contactImageSrc && (<Avatar style={{ width: \"3em\", height: \"3em\" }} src={contactImageSrc} />)}>\n          {lastModified && (\n            <span style={{ fontSize: \"90%\" }}>{lastModified}</span>\n          )}\n        </PimItemHeader>\n        {lists.map((list, idx) => (\n          <React.Fragment key={idx}>\n            {listIfNotEmpty(list)}\n          </React.Fragment>\n        ))}\n        <List>\n          {theRest}\n        </List>\n      </div>\n    );\n  }\n}\n\nexport default Contact;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport * as colors from \"@material-ui/core/colors\";\n\nimport IconDelete from \"@material-ui/icons/Delete\";\nimport IconAdd from \"@material-ui/icons/Add\";\nimport IconClear from \"@material-ui/icons/Clear\";\nimport IconCancel from \"@material-ui/icons/Clear\";\nimport IconSave from \"@material-ui/icons/Save\";\n\nimport ConfirmationDialog from \"../widgets/ConfirmationDialog\";\n\nimport { CachedCollection } from \"../Pim/helpers\";\n\nimport * as uuid from \"uuid\";\nimport * as ICAL from \"ical.js\";\n\nimport { ContactType } from \"../pim-types\";\n\nimport { History } from \"history\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nconst telTypes = [\n  { type: \"Home\" },\n  { type: \"Work\" },\n  { type: \"Cell\" },\n  { type: \"Other\" },\n];\n\nconst emailTypes = telTypes;\n\nconst addressTypes = [\n  { type: \"Home\" },\n  { type: \"Work\" },\n  { type: \"Other\" },\n];\n\nconst imppTypes = [\n  { type: \"Jabber\" },\n  { type: \"Hangouts\" },\n  { type: \"Other\" },\n];\n\nconst TypeSelector = (props: any) => {\n  const types = props.types as Array<{ type: string }>;\n\n  return (\n    <Select\n      style={props.style}\n      value={props.value}\n      onChange={props.onChange}\n    >\n      {types.map((x) => (\n        <MenuItem key={x.type} value={x.type.toLowerCase()}>{x.type}</MenuItem>\n      ))}\n    </Select>\n  );\n};\n\nclass ValueType {\n  public type: string;\n  public value: string;\n\n  constructor(type?: string, value?: string) {\n    this.type = type ? type : \"home\";\n    this.value = value ? value : \"\";\n  }\n}\n\ninterface ValueTypeComponentProps {\n  type?: string;\n  style?: object;\n  multiline?: boolean;\n\n  types: Array<{ type: string }>;\n  name: string;\n  placeholder: string;\n  value: ValueType;\n  onClearRequest: (name: string) => void;\n  onChange: (name: string, type: string, value: string) => void;\n}\n\nconst ValueTypeComponent = (props: ValueTypeComponentProps) => {\n  return (\n    <React.Fragment>\n      <TextField\n        type={props.type}\n        placeholder={props.placeholder}\n        multiline={props.multiline}\n        style={props.style}\n        value={props.value.value}\n        onChange={(event: React.ChangeEvent<any>) => props.onChange(props.name, props.value.type, event.target.value)}\n      />\n      <IconButton\n        onClick={() => props.onClearRequest(props.name)}\n        title=\"Remove\"\n      >\n        <IconClear />\n      </IconButton>\n      <TypeSelector\n        value={props.value.type}\n        types={props.types}\n        onChange={(event: React.ChangeEvent<HTMLSelectElement>) => (\n          props.onChange(props.name, event.target.value, props.value.value)\n        )}\n      />\n    </React.Fragment>\n  );\n};\n\ninterface PropsType {\n  collections: CachedCollection[];\n  initialCollection?: string;\n  item?: ContactType;\n  onSave: (contact: ContactType, collectionUid: string, originalContact?: ContactType) => Promise<void>;\n  onDelete: (contact: ContactType, collectionUid: string) => void;\n  onCancel: () => void;\n  history: History<any>;\n  allGroups: ContactType[];\n}\n\nclass ContactEdit extends React.PureComponent<PropsType> {\n  public state: {\n    uid: string;\n    fn: string;\n    lastName: string;\n    firstName: string;\n    middleName: string;\n    namePrefix: string;\n    nameSuffix: string;\n    phone: ValueType[];\n    email: ValueType[];\n    address: ValueType[];\n    impp: ValueType[];\n    org: string;\n    note: string;\n    title: string;\n\n    collectionUid: string;\n    showDeleteDialog: boolean;\n    collectionGroups: {};\n    newGroups: string[];\n    originalGroups: {};\n  };\n\n  constructor(props: PropsType) {\n    super(props);\n    this.state = {\n      uid: \"\",\n      fn: \"\",\n      lastName: \"\",\n      firstName: \"\",\n      middleName: \"\",\n      namePrefix: \"\",\n      nameSuffix: \"\",\n      phone: [new ValueType()],\n      email: [new ValueType()],\n      address: [new ValueType()],\n      impp: [new ValueType(\"jabber\")],\n      org: \"\",\n      note: \"\",\n      title: \"\",\n\n      collectionUid: \"\",\n      showDeleteDialog: false,\n      collectionGroups: {},\n      newGroups: [],\n      originalGroups: [],\n    };\n\n    if (this.props.item !== undefined) {\n      const contact = this.props.item;\n\n      this.state.uid = contact.uid;\n      this.state.fn = contact.fn ? contact.fn : \"\";\n      if (contact.n) {\n        this.state.lastName = contact.n[0];\n        this.state.firstName = contact.n[1];\n        this.state.middleName = contact.n[2];\n        this.state.namePrefix = contact.n[3];\n        this.state.nameSuffix = contact.n[4];\n      } else {\n        let name = this.state.fn.trim().split(\",\");\n        if (name.length > 2 && name[0] !== \"\" && name[name.length - 1] !== \"\") {\n          this.state.nameSuffix = name.pop() || \"\";\n        }\n        name = name.join(\",\").split(\" \");\n        if (name.length === 1) {\n          this.state.firstName = name[0];\n        } else if (name.length === 2) {\n          this.state.firstName = name[0];\n          this.state.lastName = name[1];\n        } else if (name.length > 2) {\n          this.state.firstName = name.slice(0, name.length - 2).join(\" \");\n          this.state.middleName = name[name.length - 2];\n          this.state.lastName = name[name.length - 1];\n        }\n      }\n\n      // FIXME: Am I really getting all the values this way?\n      const propToValueType = (comp: ICAL.Component, propName: string) => (\n        comp.getAllProperties(propName).map((prop) => (\n          new ValueType(\n            prop.toJSON()[1].type,\n            prop.getFirstValue()\n          )\n        ))\n      );\n\n      this.state.phone = propToValueType(contact.comp, \"tel\");\n      this.state.email = propToValueType(contact.comp, \"email\");\n      this.state.address = propToValueType(contact.comp, \"adr\");\n      this.state.impp = propToValueType(contact.comp, \"impp\");\n\n      const propToStringType = (comp: ICAL.Component, propName: string) => {\n        const val = comp.getFirstPropertyValue(propName);\n        return val ? val : \"\";\n      };\n\n      this.state.org = propToStringType(contact.comp, \"org\");\n      this.state.title = propToStringType(contact.comp, \"title\");\n      this.state.note = propToStringType(contact.comp, \"note\");\n\n    } else {\n      this.state.uid = uuid.v4();\n    }\n\n    if (props.initialCollection) {\n      this.state.collectionUid = props.initialCollection;\n    } else if (props.collections[0]) {\n      this.state.collectionUid = props.collections[0].collection.uid;\n    }\n\n    this.state.collectionGroups = this.getCollectionGroups(this.state.collectionUid);\n    Object.values(this.state.collectionGroups).forEach((group: ContactType) => {\n      if (group.members.includes(this.state.uid)) {\n        this.state.newGroups.push(group.fn);\n        this.state.originalGroups[group.fn] = undefined;\n      }\n    });\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.addMetadata = this.addMetadata.bind(this);\n    this.getCollectionGroups = this.getCollectionGroups.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleCollectionChange = this.handleCollectionChange.bind(this);\n    this.reloadGroupSuggestions = this.reloadGroupSuggestions.bind(this);\n    this.handleValueTypeChange = this.handleValueTypeChange.bind(this);\n    this.addValueType = this.addValueType.bind(this);\n    this.removeValueType = this.removeValueType.bind(this);\n    this.onDeleteRequest = this.onDeleteRequest.bind(this);\n  }\n\n  public addValueType(name: string, _type?: string) {\n    const type = _type ? _type : \"home\";\n    this.setState((prevState) => {\n      const newArray = prevState[name].slice(0);\n      newArray.push(new ValueType(type));\n      return {\n        ...prevState,\n        [name]: newArray,\n      };\n    });\n  }\n\n  public removeValueType(name: string, idx: number) {\n    this.setState((prevState) => {\n      const newArray = prevState[name].slice(0);\n      newArray.splice(idx, 1);\n      return {\n        ...prevState,\n        [name]: newArray,\n      };\n    });\n  }\n\n  public handleValueTypeChange(name: string, idx: number, value: ValueType) {\n    this.setState((prevState) => {\n      const newArray = prevState[name].slice(0);\n      newArray[idx] = value;\n      return {\n        ...prevState,\n        [name]: newArray,\n      };\n    });\n  }\n\n  public handleChange(name: string, value: string | string[]) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  public getCollectionGroups(collectionUid: string) {\n    const groups = {};\n    this.props.allGroups.forEach((group) => {\n      if (collectionUid === group.collectionUid) {\n        groups[group.fn] = group;\n      }\n    });\n    return groups;\n  }\n\n  public reloadGroupSuggestions(collectionUid: string) {\n    this.setState({\n      collectionGroups: this.getCollectionGroups(collectionUid),\n      newGroups: [],\n    });\n  }\n\n  public handleCollectionChange(contact: any) {\n    const name = contact.target.name;\n    const value = contact.target.value;\n    this.reloadGroupSuggestions(value);\n    this.handleChange(name, value);\n  }\n\n  public handleInputChange(contact: any) {\n    const name = contact.target.name;\n    const value = contact.target.value;\n    this.handleChange(name, value);\n  }\n\n  public addMetadata(item: ContactType, uid: string, isGroup: boolean) {\n    const comp = item.comp;\n    comp.updatePropertyWithValue(\"prodid\", \"-//iCal.js EteSync Web\");\n    comp.updatePropertyWithValue(\"version\", \"4.0\");\n    comp.updatePropertyWithValue(\"uid\", uid);\n    comp.updatePropertyWithValue(\"rev\", ICAL.Time.now());\n    if (isGroup) {\n      comp.updatePropertyWithValue(\"kind\", \"group\");\n    }\n  }\n\n  public onSubmit(e: React.FormEvent<any>) {\n    e.preventDefault();\n\n    const contact = (this.props.item) ?\n      this.props.item.clone()\n      :\n      new ContactType(new ICAL.Component([\"vcard\", [], []]))\n      ;\n\n    const comp = contact.comp;\n    this.addMetadata(contact, this.state.uid, false);\n\n    // Add new groups\n    this.state.newGroups.forEach((group) => {\n      if (!this.state.collectionGroups[group]) {\n        const newGroup = new ContactType(new ICAL.Component([\"vcard\", [], []]));\n        this.addMetadata(newGroup, uuid.v4(), true);\n        newGroup.comp.updatePropertyWithValue(\"fn\", group.trim());\n        newGroup.comp.updatePropertyWithValue(\"member\", `urn:uuid:${this.state.uid}`);\n        this.props.onSave(newGroup, this.state.collectionUid, undefined);\n      } else if (!(group in this.state.originalGroups)) {\n        const oldGroup = this.state.collectionGroups[group];\n        const updatedGroup = oldGroup.clone();\n        updatedGroup.comp.addPropertyWithValue(\"member\", `urn:uuid:${this.state.uid}`);\n        this.props.onSave(updatedGroup, this.state.collectionUid, oldGroup);\n      }\n    });\n\n    // Remove deleted groups\n    Object.keys(this.state.originalGroups).filter((x) => !this.state.newGroups.includes(x)).forEach((removed) => {\n      const deletedGroup = this.state.collectionGroups[removed];\n      const updatedGroup = deletedGroup.clone();\n      const members = updatedGroup.members.filter((uid: string) => uid !== this.state.uid);\n      updatedGroup.comp.removeAllProperties(\"member\");\n      members.forEach((m: string) => updatedGroup.comp.addPropertyWithValue(\"member\", `urn:uuid:${m}`));\n      this.props.onSave(updatedGroup, this.state.collectionUid, deletedGroup);\n    });\n\n    const lastName = this.state.lastName.trim();\n    const firstName = this.state.firstName.trim();\n    const middleName = this.state.middleName.trim();\n    const namePrefix = this.state.namePrefix.trim();\n    const nameSuffix = this.state.nameSuffix.trim();\n    \n    let fn = `${namePrefix} ${firstName} ${middleName} ${lastName}`.trim();\n\n    if (fn === \"\") { \n      fn = nameSuffix;\n    } else if (nameSuffix !== \"\") { \n      fn = `${fn}, ${nameSuffix}`;\n    }\n\n    comp.updatePropertyWithValue(\"fn\", fn);\n\n    const name = [lastName,\n      firstName,\n      middleName,\n      namePrefix,\n      nameSuffix,\n    ];\n\n    comp.updatePropertyWithValue(\"n\", name);\n\n    function setProperties(name: string, source: ValueType[]) {\n      comp.removeAllProperties(name);\n      source.forEach((x) => {\n        if (x.value === \"\") {\n          return;\n        }\n\n        const prop = new ICAL.Property(name, comp);\n        prop.setParameter(\"type\", x.type);\n        prop.setValue(x.value);\n        comp.addProperty(prop);\n      });\n    }\n\n    setProperties(\"tel\", this.state.phone);\n    setProperties(\"email\", this.state.email);\n    setProperties(\"adr\", this.state.address);\n    setProperties(\"impp\", this.state.impp.map((x) => (\n      { type: x.type, value: x.type + \":\" + x.value }\n    )));\n\n    function setProperty(name: string, value: string) {\n      comp.removeAllProperties(name);\n      if (value !== \"\") {\n        comp.updatePropertyWithValue(name, value);\n      }\n    }\n\n    setProperty(\"org\", this.state.org);\n    setProperty(\"title\", this.state.title);\n    setProperty(\"note\", this.state.note);\n\n    this.props.onSave(contact, this.state.collectionUid, this.props.item)\n      .then(() => {\n        this.props.history.goBack();\n      });\n  }\n\n  public onDeleteRequest() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    const styles = {\n      form: {\n      },\n      fullWidth: {\n        width: \"100%\",\n        boxSizing: \"border-box\" as any,\n      },\n      submit: {\n        marginTop: 40,\n        marginBottom: 20,\n        textAlign: \"right\" as any,\n      },\n    };\n\n    return (\n      <React.Fragment>\n        <h2>\n          {this.props.item ? \"Edit Contact\" : \"New Contact\"}\n        </h2>\n        <form style={styles.form} onSubmit={this.onSubmit}>\n          <FormControl disabled={this.props.item !== undefined} style={styles.fullWidth}>\n            <InputLabel>\n              Saving to\n            </InputLabel>\n            <Select\n              name=\"collectionUid\"\n              value={this.state.collectionUid}\n              onChange={this.handleCollectionChange}\n            >\n              {this.props.collections.map((x) => (\n                <MenuItem key={x.collection.uid} value={x.collection.uid}>{x.metadata.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <TextField\n            name=\"namePrefix\"\n            placeholder=\"Prefix\"\n            style={{ marginTop: \"2rem\", ...styles.fullWidth }}\n            value={this.state.namePrefix}\n            onChange={this.handleInputChange}\n          />\n\n          <TextField\n            name=\"firstName\"\n            placeholder=\"First name\"\n            style={{ marginTop: \"2rem\", ...styles.fullWidth }}\n            value={this.state.firstName}\n            onChange={this.handleInputChange}\n          />\n\n          <TextField\n            name=\"middleName\"\n            placeholder=\"Middle name\"\n            style={{ marginTop: \"2rem\", ...styles.fullWidth }}\n            value={this.state.middleName}\n            onChange={this.handleInputChange}\n          />\n\n          <TextField\n            name=\"lastName\"\n            placeholder=\"Last name\"\n            style={{ marginTop: \"2rem\", ...styles.fullWidth }}\n            value={this.state.lastName}\n            onChange={this.handleInputChange}\n          />\n\n          <TextField\n            name=\"nameSuffix\"\n            placeholder=\"Suffix\"\n            style={{ marginTop: \"2rem\", ...styles.fullWidth }}\n            value={this.state.nameSuffix}\n            onChange={this.handleInputChange}\n          />\n\n          <div>\n            Phone numbers\n            <IconButton\n              onClick={() => this.addValueType(\"phone\")}\n              title=\"Add phone number\"\n            >\n              <IconAdd />\n            </IconButton>\n          </div>\n          {this.state.phone.map((x, idx) => (\n            <ValueTypeComponent\n              key={idx}\n              name=\"phone\"\n              placeholder=\"Phone\"\n              types={telTypes}\n              value={x}\n              onClearRequest={(name: string) => this.removeValueType(name, idx)}\n              onChange={(name: string, type: string, value: string) => (\n                this.handleValueTypeChange(name, idx, { type, value })\n              )}\n            />\n          ))}\n\n          <div>\n            Emails\n            <IconButton\n              onClick={() => this.addValueType(\"email\")}\n              title=\"Add email address\"\n            >\n              <IconAdd />\n            </IconButton>\n          </div>\n          {this.state.email.map((x, idx) => (\n            <ValueTypeComponent\n              key={idx}\n              name=\"email\"\n              placeholder=\"Email\"\n              types={emailTypes}\n              value={x}\n              onClearRequest={(name: string) => this.removeValueType(name, idx)}\n              onChange={(name: string, type: string, value: string) => (\n                this.handleValueTypeChange(name, idx, { type, value })\n              )}\n            />\n          ))}\n\n          <div>\n            IMPP\n            <IconButton\n              onClick={() => this.addValueType(\"impp\", \"jabber\")}\n              title=\"Add impp address\"\n            >\n              <IconAdd />\n            </IconButton>\n          </div>\n          {this.state.impp.map((x, idx) => (\n            <ValueTypeComponent\n              key={idx}\n              name=\"impp\"\n              placeholder=\"IMPP\"\n              types={imppTypes}\n              value={x}\n              onClearRequest={(name: string) => this.removeValueType(name, idx)}\n              onChange={(name: string, type: string, value: string) => (\n                this.handleValueTypeChange(name, idx, { type, value })\n              )}\n            />\n          ))}\n\n          <div>\n            Addresses\n            <IconButton\n              onClick={() => this.addValueType(\"address\")}\n              title=\"Add address\"\n            >\n              <IconAdd />\n            </IconButton>\n          </div>\n          {this.state.address.map((x, idx) => (\n            <ValueTypeComponent\n              key={idx}\n              name=\"address\"\n              placeholder=\"Address\"\n              types={addressTypes}\n              multiline\n              value={x}\n              onClearRequest={(name: string) => this.removeValueType(name, idx)}\n              onChange={(name: string, type: string, value: string) => (\n                this.handleValueTypeChange(name, idx, { type, value })\n              )}\n            />\n          ))}\n\n          <TextField\n            name=\"org\"\n            placeholder=\"Organization\"\n            style={styles.fullWidth}\n            value={this.state.org}\n            onChange={this.handleInputChange}\n          />\n\n          <TextField\n            name=\"title\"\n            placeholder=\"Title\"\n            style={styles.fullWidth}\n            value={this.state.title}\n            onChange={this.handleInputChange}\n          />\n\n          <TextField\n            name=\"note\"\n            multiline\n            placeholder=\"Note\"\n            style={styles.fullWidth}\n            value={this.state.note}\n            onChange={this.handleInputChange}\n          />\n          <Autocomplete\n            style={styles.fullWidth}\n            freeSolo\n            multiple\n            clearOnBlur\n            selectOnFocus\n            options={Object.keys(this.state.collectionGroups)}\n            value={this.state.newGroups}\n            onChange={(_e, value) => this.handleChange(\"newGroups\", value)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                label=\"Groups\"\n                fullWidth\n              />\n            )}\n          />\n\n          <div style={styles.submit}>\n            <Button\n              variant=\"contained\"\n              onClick={this.props.onCancel}\n            >\n              <IconCancel style={{ marginRight: 8 }} />\n              Cancel\n            </Button>\n\n            {this.props.item &&\n              <Button\n                variant=\"contained\"\n                style={{ marginLeft: 15, backgroundColor: colors.red[500], color: \"white\" }}\n                onClick={this.onDeleteRequest}\n              >\n                <IconDelete style={{ marginRight: 8 }} />\n                Delete\n              </Button>\n            }\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ marginLeft: 15 }}\n            >\n              <IconSave style={{ marginRight: 8 }} />\n              Save\n            </Button>\n          </div>\n        </form>\n\n        <ConfirmationDialog\n          title=\"Delete Confirmation\"\n          labelOk=\"Delete\"\n          open={this.state.showDeleteDialog}\n          onOk={() => this.props.onDelete(this.props.item!, this.props.initialCollection!)}\n          onCancel={() => this.setState({ showDeleteDialog: false })}\n        >\n          Are you sure you would like to delete this contact?\n        </ConfirmationDialog>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default ContactEdit;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport * as colors from \"@material-ui/core/colors\";\n\nimport IconDelete from \"@material-ui/icons/Delete\";\nimport IconCancel from \"@material-ui/icons/Clear\";\nimport IconSave from \"@material-ui/icons/Save\";\n\nimport ConfirmationDialog from \"../widgets/ConfirmationDialog\";\n\nimport { CachedCollection } from \"../Pim/helpers\";\n\nimport * as uuid from \"uuid\";\nimport * as ICAL from \"ical.js\";\n\nimport { ContactType } from \"../pim-types\";\n\nimport { History } from \"history\";\n\nclass ValueType {\n  public type: string;\n  public value: string;\n\n  constructor(type?: string, value?: string) {\n    this.type = type ? type : \"home\";\n    this.value = value ? value : \"\";\n  }\n}\n\ninterface PropsType {\n  collections: CachedCollection[];\n  initialCollection?: string;\n  item?: ContactType;\n  onSave: (contact: ContactType, collectionUid: string, originalContact?: ContactType) => Promise<void>;\n  onDelete: (contact: ContactType, collectionUid: string) => void;\n  onCancel: () => void;\n  history: History<any>;\n  allGroups: ContactType[];\n}\n\nclass GroupEdit extends React.PureComponent<PropsType> {\n  public state: {\n    uid: string;\n    fn: string;\n    collectionUid: string;\n    showDeleteDialog: boolean;\n    collectionGroups: {};\n    showError: boolean;\n  };\n\n  constructor(props: PropsType) {\n    super(props);\n    this.state = {\n      uid: \"\",\n      fn: \"\",\n      collectionUid: \"\",\n      showDeleteDialog: false,\n      collectionGroups: {},\n      showError: false,\n    };\n\n    if (this.props.item !== undefined) {\n      const group = this.props.item;\n      this.state.uid = group.uid;\n      this.state.fn = group.fn;\n    } else {\n      this.state.uid = uuid.v4();\n    }\n\n    if (props.initialCollection) {\n      this.state.collectionUid = props.initialCollection;\n    } else if (props.collections[0]) {\n      this.state.collectionUid = props.collections[0].collection.uid;\n    }\n\n    this.state.collectionGroups = this.getCollectionGroups(this.state.collectionUid);\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.getCollectionGroups = this.getCollectionGroups.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleCollectionChange = this.handleCollectionChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleValueTypeChange = this.handleValueTypeChange.bind(this);\n    this.addValueType = this.addValueType.bind(this);\n    this.removeValueType = this.removeValueType.bind(this);\n    this.onDeleteRequest = this.onDeleteRequest.bind(this);\n  }\n\n  public addValueType(name: string, _type?: string) {\n    const type = _type ? _type : \"home\";\n    this.setState((prevState) => {\n      const newArray = prevState[name].slice(0);\n      newArray.push(new ValueType(type));\n      return {\n        ...prevState,\n        [name]: newArray,\n      };\n    });\n  }\n\n  public removeValueType(name: string, idx: number) {\n    this.setState((prevState) => {\n      const newArray = prevState[name].slice(0);\n      newArray.splice(idx, 1);\n      return {\n        ...prevState,\n        [name]: newArray,\n      };\n    });\n  }\n\n  public handleValueTypeChange(name: string, idx: number, value: ValueType) {\n    this.setState((prevState) => {\n      const newArray = prevState[name].slice(0);\n      newArray[idx] = value;\n      return {\n        ...prevState,\n        [name]: newArray,\n      };\n    });\n  }\n\n  public handleChange(name: string, value: string) {\n    this.setState({\n      [name]: value,\n    });\n  }\n\n  public getCollectionGroups(collectionUid: string) {\n    const groups = {};\n    this.props.allGroups.forEach((group) => {\n      if (collectionUid === group.collectionUid) {\n        groups[group.fn] = null;\n      }\n    });\n    return groups;\n  }\n\n  public handleCollectionChange(contact: any) {\n    const name = contact.target.name;\n    const collectionUid: string = contact.target.value;\n    this.handleChange(name, collectionUid);\n    this.setState({ \"collectionGroups\": this.getCollectionGroups(collectionUid) });\n  }\n\n  public handleInputChange(contact: any) {\n    const name = contact.target.name;\n    const value = contact.target.value;\n    this.handleChange(name, value);\n  }\n\n  public onSubmit(e: React.FormEvent<any>) {\n    e.preventDefault();\n\n    const nameUsed = this.state.fn in this.state.collectionGroups;\n    if ((this.props.item && this.state.fn !== this.props.item.fn && nameUsed) || (!this.props.item && nameUsed)) {\n      this.setState({ showError: true });\n      return;\n    }\n\n    const group = (this.props.item) ?\n      this.props.item.clone()\n      :\n      new ContactType(new ICAL.Component([\"vcard\", [], []]))\n      ;\n\n    const comp = group.comp;\n    comp.updatePropertyWithValue(\"prodid\", \"-//iCal.js EteSync Web\");\n    comp.updatePropertyWithValue(\"version\", \"4.0\");\n    comp.updatePropertyWithValue(\"uid\", this.state.uid);\n    comp.updatePropertyWithValue(\"rev\", ICAL.Time.now());\n    comp.updatePropertyWithValue(\"kind\", \"group\");\n    comp.updatePropertyWithValue(\"fn\", this.state.fn.trim());\n\n    this.props.onSave(group, this.state.collectionUid, this.props.item)\n      .then(() => {\n        this.props.history.goBack();\n      });\n  }\n\n  public onDeleteRequest() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    const styles = {\n      form: {\n      },\n      fullWidth: {\n        width: \"100%\",\n        boxSizing: \"border-box\" as any,\n      },\n      submit: {\n        marginTop: 40,\n        marginBottom: 20,\n        textAlign: \"right\" as any,\n      },\n    };\n\n    return (\n      <React.Fragment>\n        <h2>\n          {this.props.item ? \"Edit Group\" : \"New Group\"}\n        </h2>\n        <form style={styles.form} onSubmit={this.onSubmit}>\n          <FormControl disabled={this.props.item !== undefined} style={styles.fullWidth}>\n            <InputLabel>\n              Saving to\n            </InputLabel>\n            <Select\n              name=\"collectionUid\"\n              value={this.state.collectionUid}\n              onChange={this.handleCollectionChange}\n            >\n              {this.props.collections.map((x) => (\n                <MenuItem key={x.collection.uid} value={x.collection.uid}>{x.metadata.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <TextField\n            name=\"fn\"\n            placeholder=\"Name\"\n            error={this.state.showError}\n            helperText=\"Group names must be unique\"\n            style={{ marginTop: \"2rem\", ...styles.fullWidth }}\n            value={this.state.fn}\n            onChange={this.handleInputChange}\n          />\n\n          <div style={styles.submit}>\n            <Button\n              variant=\"contained\"\n              onClick={this.props.onCancel}\n            >\n              <IconCancel style={{ marginRight: 8 }} />\n              Cancel\n            </Button>\n\n            {this.props.item &&\n              <Button\n                variant=\"contained\"\n                style={{ marginLeft: 15, backgroundColor: colors.red[500], color: \"white\" }}\n                onClick={this.onDeleteRequest}\n              >\n                <IconDelete style={{ marginRight: 8 }} />\n                Delete\n              </Button>\n            }\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ marginLeft: 15 }}\n              disabled={this.state.fn.length === 0}\n            >\n              <IconSave style={{ marginRight: 8 }} />\n              Save\n            </Button>\n          </div>\n        </form>\n\n        <ConfirmationDialog\n          title=\"Delete Confirmation\"\n          labelOk=\"Delete\"\n          open={this.state.showDeleteDialog}\n          onOk={() => this.props.onDelete(this.props.item!, this.props.initialCollection!)}\n          onCancel={() => this.setState({ showDeleteDialog: false })}\n        >\n          Are you sure you would like to delete this group?\n        </ConfirmationDialog>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default GroupEdit;\n","// SPDX-FileCopyrightText: © 2020 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Route } from \"react-router\";\n\nimport Container from \"./widgets/Container\";\n\nexport function PageNotFoundRoute(props: { container?: boolean }) {\n  return (\n    <Route path=\"*\">\n      {props.container ? (\n        <Container>\n          <PageNotFound />\n        </Container>\n      ) : (\n        <PageNotFound />\n      )}\n    </Route>\n  );\n}\n\nexport default function PageNotFound() {\n  return (\n    <h1>404 Page Not Found</h1>\n  );\n}\n","// SPDX-FileCopyrightText: © 2020 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Fab } from \"@material-ui/core\";\nimport ContentAdd from \"@material-ui/icons/Add\";\n\nimport memoize from \"memoizee\";\n\nimport * as Etebase from \"etebase\";\n\nimport { PimType } from \"../pim-types\";\nimport { getCollectionManager } from \"../etebase-helpers\";\nimport { asyncDispatch, store } from \"../store\";\nimport { itemBatch, appendError } from \"../store/actions\";\n\nexport const defaultColor = \"#8BC34A\";\n\nexport interface CachedCollection {\n  collection: Etebase.Collection;\n  metadata: Etebase.ItemMetadata;\n  collectionType: string;\n}\n\nexport function getRawItemNavigationUid(collectionUid: string, itemUid: string) {\n  // Both collectionUid and itemUid are url safe\n  return `${collectionUid}|${itemUid}`;\n}\n\nexport function getItemNavigationUid(item: PimType) {\n  return getRawItemNavigationUid(item.collectionUid!, item.itemUid!);\n}\n\nexport function getDecryptCollectionsFunction(_colType?: string) {\n  return memoize(\n    async function (collections: Etebase.Collection[]) {\n      const entries: CachedCollection[] = [];\n      if (collections) {\n        for (const collection of collections) {\n          try {\n            entries.push({\n              collection,\n              metadata: collection.getMeta(),\n              collectionType: collection.getCollectionType(),\n            });\n          } catch (e) {\n            store.dispatch(appendError(e));\n          }\n        }\n      }\n\n      return entries;\n    },\n    { max: 1 }\n  );\n}\n\nexport function getDecryptItemsFunction<T extends PimType>(_colType: string, parseFunc: (str: string) => T) {\n  return memoize(\n    async function (items: Map<string, Map<string, Etebase.Item>>) {\n      const entries: Map<string, Map<string, T>> = new Map();\n      if (items) {\n        for (const [colUid, col] of items.entries()) {\n          const cur = new Map();\n          entries.set(colUid, cur);\n          for (const item of col.values()) {\n            if (item.isDeleted) {\n              continue;\n            }\n            try {\n              const contact = parseFunc(await item.getContent(Etebase.OutputFormat.String));\n              contact.collectionUid = colUid;\n              contact.itemUid = item.uid;\n              cur.set(item.uid, contact);\n            } catch (e) {\n              store.dispatch(appendError(e));\n            }\n          }\n        }\n      }\n\n      return entries;\n    },\n    { max: 1 }\n  );\n}\n\nexport async function itemSave(etebase: Etebase.Account, collection: Etebase.Collection, items: Map<string, Map<string, Etebase.Item>>, item: PimType, collectionUid: string, originalItem?: PimType): Promise<void> {\n  const itemUid = originalItem?.itemUid;\n  const colMgr = getCollectionManager(etebase);\n  const itemMgr = colMgr.getItemManager(collection);\n\n  const mtime = (new Date()).getTime();\n  const content = item.toIcal();\n\n  let eteItem;\n  if (itemUid) {\n    // Existing item\n    eteItem = items!.get(collectionUid)?.get(itemUid)!;\n    await eteItem.setContent(content);\n    const meta = eteItem.getMeta();\n    meta.mtime = mtime;\n    eteItem.setMeta(meta);\n  } else {\n    // New\n    const meta: Etebase.ItemMetadata = {\n      mtime,\n      name: item.uid,\n    };\n    eteItem = await itemMgr.create(meta, content);\n  }\n\n  await asyncDispatch(itemBatch(collection, itemMgr, [eteItem]));\n}\n\nexport async function itemDelete(etebase: Etebase.Account, collection: Etebase.Collection, items: Map<string, Map<string, Etebase.Item>>, item: PimType, collectionUid: string) {\n  const itemUid = item.itemUid!;\n  const colMgr = getCollectionManager(etebase);\n  const itemMgr = colMgr.getItemManager(collection);\n\n  const eteItem = items!.get(collectionUid)?.get(itemUid)!;\n  const mtime = (new Date()).getTime();\n  const meta = eteItem.getMeta();\n  meta.mtime = mtime;\n  eteItem.setMeta(meta);\n  eteItem.delete(true);\n\n  await asyncDispatch(itemBatch(collection, itemMgr, [eteItem]));\n}\n\ninterface PimFabPropsType {\n  onClick: () => void;\n}\n\nexport function PimFab(props: PimFabPropsType) {\n  const style = {\n    floatingButton: {\n      margin: 0,\n      top: \"auto\",\n      right: 20,\n      bottom: 20,\n      left: \"auto\",\n      position: \"fixed\",\n    },\n  };\n\n  return (\n    <Fab\n      color=\"primary\"\n      style={style.floatingButton as any}\n      onClick={props.onClick}\n    >\n      <ContentAdd />\n    </Fab>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport moment from \"moment\";\n\nimport * as Etebase from \"etebase\";\n\nimport { AutoSizer, List as VirtualizedList } from \"react-virtualized\";\n\nimport { List, ListItem } from \"../widgets/List\";\nimport IconEdit from \"@material-ui/icons/Edit\";\nimport IconDelete from \"@material-ui/icons/Delete\";\nimport IconError from \"@material-ui/icons/Error\";\n\nimport { TaskType, EventType, ContactType, parseString } from \"../pim-types\";\n\nexport interface CachedItem {\n  item: Etebase.Item;\n  metadata: Etebase.ItemMetadata;\n  content: string;\n}\n\ninterface PropsType {\n  items: CachedItem[];\n  onItemClick: (item: CachedItem) => void;\n\n}\n\nexport default function GenericChangeHistory(props: PropsType) {\n  const entriesList = props.items.sort((a_, b_) => {\n    const a = a_.metadata.mtime ?? 0;\n    const b = b_.metadata.mtime ?? 0;\n    return a - b;\n  });\n\n  const onItemClick = props.onItemClick;\n\n  const rowRenderer = (params: { index: number, key: string, style: React.CSSProperties }) => {\n    const { key, index, style } = params;\n    const cacheItem = entriesList[entriesList.length - index - 1]!;\n    let comp;\n    try {\n      comp = parseString(cacheItem.content);\n    } catch (e) {\n      const icon = (<IconError style={{ color: \"red\" }} />);\n      return (\n        <ListItem\n          key={key}\n          style={style}\n          leftIcon={icon}\n          primaryText=\"Failed parsing item\"\n          secondaryText=\"Unknown\"\n          onClick={() => onItemClick(cacheItem)}\n        />\n      );\n    }\n\n    let icon;\n    if (!cacheItem.item.isDeleted) {\n      icon = (<IconEdit style={{ color: \"#16B14B\" }} />);\n    } else {\n      icon = (<IconDelete style={{ color: \"#F20C0C\" }} />);\n    }\n\n    let name;\n    if (comp.name === \"vcalendar\") {\n      if (EventType.isEvent(comp)) {\n        const vevent = EventType.fromVCalendar(comp);\n        name = vevent.summary;\n      } else {\n        const vtodo = TaskType.fromVCalendar(comp);\n        name = vtodo.summary;\n      }\n    } else if (comp.name === \"vcard\") {\n      const vcard = new ContactType(comp);\n      name = vcard.fn;\n    } else {\n      name = \"Error processing entry\";\n    }\n\n    const mtime = (cacheItem.metadata.mtime) ? moment(cacheItem.metadata.mtime) : undefined;\n\n    return (\n      <ListItem\n        key={key}\n        style={style}\n        leftIcon={icon}\n        primaryText={name}\n        secondaryText={mtime && mtime.format(\"llll\")}\n        onClick={() => onItemClick(cacheItem)}\n      />\n    );\n  };\n\n  return (\n    <List style={{ height: \"100%\" }}>\n      {(entriesList.length > 0) ? (\n        <AutoSizer>\n          {({ height, width }) => (\n            <VirtualizedList\n              width={width}\n              height={height}\n              rowCount={entriesList.length}\n              rowHeight={56}\n              rowRenderer={rowRenderer}\n            />\n          )}\n        </AutoSizer>\n      ) : (\n        <ListItem\n          primaryText=\"No entries found\"\n        />\n      )}\n    </List>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport * as Etebase from \"etebase\";\n\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport Button from \"@material-ui/core/Button\";\n\nimport { useCredentials } from \"../credentials\";\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\nimport GenericChangeHistory from \"../components/GenericChangeHistory\";\nimport { useItems } from \"../etebase-helpers\";\nimport { CachedCollection } from \"./helpers\";\nimport PageNotFound from \"../PageNotFound\";\n\nexport interface CachedItem {\n  item: Etebase.Item;\n  metadata: Etebase.ItemMetadata;\n  content: string;\n}\n\nasync function loadRevisions(etebase: Etebase.Account, col: Etebase.Collection, item: Etebase.Item) {\n  const ret: CachedItem[] = [];\n  const colMgr = etebase.getCollectionManager();\n  const itemManager = colMgr.getItemManager(col);\n\n  let iterator: string | null = null;\n  let done = false;\n  while (!done) {\n    const revisions = await itemManager.itemRevisions(item, { iterator, limit: 30 });\n    iterator = revisions.iterator as string;\n    done = revisions.done;\n\n    for (const item of revisions.data) {\n      ret.push({\n        item,\n        metadata: item.getMeta(),\n        content: await item.getContent(Etebase.OutputFormat.String),\n      });\n    }\n  }\n\n  return ret;\n}\n\ninterface PropsType {\n  collection: CachedCollection;\n  itemUid: string;\n}\n\nexport default function ItemChangeHistory(props: PropsType) {\n  const [entries, setEntries] = React.useState<CachedItem[]>();\n  const [dialog, setDialog] = React.useState<CachedItem>();\n  const etebase = useCredentials()!;\n  const { collection, collectionType } = props.collection;\n  const items = useItems(etebase, collectionType);\n\n  const item = items?.get(collection.uid)?.get(props.itemUid);\n\n  React.useEffect(() => {\n    if (item) {\n      loadRevisions(etebase, collection, item)\n        .then((entries) => setEntries(entries));\n    }\n  }, [etebase, collection, item]);\n\n  if (!item) {\n    return (<PageNotFound />);\n  }\n\n  if (!entries) {\n    return (\n      <LoadingIndicator />\n    );\n  }\n\n  return (\n    <div style={{ height: \"calc(100vh - 300px)\" }}>\n      <Dialog\n        open={dialog !== undefined}\n        onClose={() => setDialog(undefined)}\n      >\n        <DialogTitle>\n          Raw Content\n        </DialogTitle>\n        <DialogContent>\n          <div>Revision UID: <pre className=\"d-inline-block\">{dialog?.item.etag}</pre></div>\n          <div>Content:\n            <pre>{dialog?.content}</pre>\n          </div>\n        </DialogContent>\n        <DialogActions>\n          <Button\n            color=\"primary\"\n            onClick={() => setDialog(undefined)}\n          >\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <GenericChangeHistory\n        items={entries}\n        onItemClick={setDialog}\n      />\n    </div>\n  );\n}\n\n","// SPDX-FileCopyrightText: © 2020 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router\";\n\nimport * as Etebase from \"etebase\";\n\nimport { Button, useTheme } from \"@material-ui/core\";\nimport IconEdit from \"@material-ui/icons/Edit\";\nimport IconChangeHistory from \"@material-ui/icons/ChangeHistory\";\n\nimport { ContactType, PimType } from \"../pim-types\";\nimport { useCredentials } from \"../credentials\";\nimport { useItems, useCollections } from \"../etebase-helpers\";\nimport { routeResolver } from \"../App\";\nimport SearchableAddressBook from \"./SearchableAddressBook\";\nimport Contact from \"./Contact\";\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\nimport ContactEdit from \"./ContactEdit\";\nimport GroupEdit from \"./GroupEdit\";\nimport PageNotFound, { PageNotFoundRoute } from \"../PageNotFound\";\n\nimport { CachedCollection, getItemNavigationUid, getDecryptCollectionsFunction, getDecryptItemsFunction, PimFab, itemSave, itemDelete } from \"../Pim/helpers\";\nimport ItemChangeHistory from \"../Pim/ItemChangeHistory\";\n\nconst colType = \"etebase.vcard\";\n\nconst decryptCollections = getDecryptCollectionsFunction(colType);\nconst decryptItems = getDecryptItemsFunction(colType, ContactType.parse);\n\nexport default function ContactsMain() {\n  const [entries, setEntries] = React.useState<Map<string, Map<string, ContactType>>>();\n  const [cachedCollections, setCachedCollections] = React.useState<CachedCollection[]>();\n  const theme = useTheme();\n  const history = useHistory();\n  const etebase = useCredentials()!;\n  const collections = useCollections(etebase, colType);\n  const items = useItems(etebase, colType);\n\n  React.useEffect(() => {\n    if (!collections || !items) {\n      return;\n    }\n    (async () => {\n      const colEntries = await decryptCollections(collections);\n      const entries = await decryptItems(items);\n\n      setCachedCollections(colEntries);\n      setEntries(entries);\n    })();\n  }, [items, collections]);\n\n  if (!entries || !cachedCollections) {\n    return (\n      <LoadingIndicator />\n    );\n  }\n\n  async function onItemSave(item: PimType, collectionUid: string, originalItem?: PimType): Promise<void> {\n    const collection = collections!.find((x) => x.uid === collectionUid)!;\n    await itemSave(etebase, collection, items!, item, collectionUid, originalItem);\n  }\n\n  async function onItemDelete(item: PimType, collectionUid: string) {\n    const collection = collections!.find((x) => x.uid === collectionUid)!;\n    await itemDelete(etebase, collection, items!, item, collectionUid);\n\n    history.push(routeResolver.getRoute(\"pim.contacts\"));\n  }\n\n  function onCancel() {\n    history.goBack();\n  }\n\n  const flatEntries = [];\n  for (const col of entries.values()) {\n    for (const item of col.values()) {\n      flatEntries.push(item);\n    }\n  }\n\n  const allGroups = flatEntries.filter((x) => x.group);\n\n  const styles = {\n    button: {\n      marginLeft: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n  };\n\n  return (\n    <Switch>\n      <Route\n        path={routeResolver.getRoute(\"pim.contacts\")}\n        exact\n      >\n        <SearchableAddressBook\n          entries={flatEntries}\n          onItemClick={(item) => history.push(\n            routeResolver.getRoute(\"pim.contacts._id\", { itemUid: getItemNavigationUid(item) })\n          )}\n          onNewGroupClick={() => history.push(\n            routeResolver.getRoute(\"pim.contacts.new.group\")\n          )}\n        />\n        <PimFab\n          onClick={() => history.push(\n            routeResolver.getRoute(\"pim.contacts.new.contact\")\n          )}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"pim.contacts.new.group\")}\n        exact\n      >\n        <GroupEdit\n          collections={cachedCollections}\n          onSave={onItemSave}\n          onDelete={onItemDelete}\n          onCancel={onCancel}\n          history={history}\n          allGroups={allGroups}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"pim.contacts.new.contact\")}\n        exact\n      >\n        <ContactEdit\n          collections={cachedCollections}\n          onSave={onItemSave}\n          onDelete={onItemDelete}\n          onCancel={onCancel}\n          history={history}\n          allGroups={allGroups}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"pim.contacts._id.log\")}\n        render={({ match }) => {\n          // We have this path outside because we don't want the item existing check\n          const [colUid, itemUid] = match.params.itemUid.split(\"|\");\n          const cachedCollection = cachedCollections!.find((x) => x.collection.uid === colUid)!;\n          if (!cachedCollection) {\n            return (<PageNotFound />);\n          }\n\n          return (\n            <ItemChangeHistory collection={cachedCollection} itemUid={itemUid} />\n          );\n        }}\n      />\n      <Route\n        path={routeResolver.getRoute(\"pim.contacts._id\")}\n        render={({ match }) => {\n          const [colUid, itemUid] = match.params.itemUid.split(\"|\");\n          const item = entries.get(colUid)?.get(itemUid);\n          if (!item) {\n            return (<PageNotFound />);\n          }\n\n          const collection = collections!.find((x) => x.uid === colUid)!;\n          const readOnly = collection.accessLevel === Etebase.CollectionAccessLevel.ReadOnly;\n          const path = `pim.contacts._id.edit.${item.group ? \"group\" : \"contact\"}`;\n\n          return (\n            <Switch>\n              <Route\n                path={routeResolver.getRoute(path)}\n                exact\n              >\n                {item.group ?\n                  <GroupEdit\n                    key={itemUid}\n                    initialCollection={item.collectionUid}\n                    item={item}\n                    collections={cachedCollections}\n                    onSave={onItemSave}\n                    onDelete={onItemDelete}\n                    onCancel={onCancel}\n                    history={history}\n                    allGroups={allGroups}\n                  />\n                  :\n                  <ContactEdit\n                    key={itemUid}\n                    initialCollection={item.collectionUid}\n                    item={item}\n                    collections={cachedCollections}\n                    onSave={onItemSave}\n                    onDelete={onItemDelete}\n                    onCancel={onCancel}\n                    history={history}\n                    allGroups={allGroups}\n                  />\n                }\n              </Route>\n              <Route\n                path={routeResolver.getRoute(\"pim.contacts._id\")}\n                exact\n              >\n                <div style={{ textAlign: \"right\", marginBottom: 15 }}>\n                  <Button\n                    variant=\"contained\"\n                    style={styles.button}\n                    onClick={() =>\n                      history.push(routeResolver.getRoute(\"pim.contacts._id.log\", { itemUid: getItemNavigationUid(item) }))\n                    }\n                  >\n                    <IconChangeHistory style={styles.leftIcon} />\n                    Change History\n                  </Button>\n\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    disabled={readOnly}\n                    style={{ ...styles.button, marginLeft: 15 }}\n                    onClick={() =>\n                      history.push(routeResolver.getRoute(path, { itemUid: getItemNavigationUid(item) }))\n                    }\n                  >\n                    <IconEdit style={styles.leftIcon} />\n                    Edit\n                  </Button>\n\n                </div>\n                <Contact item={item} />\n              </Route>\n              <PageNotFoundRoute />\n            </Switch>\n          );\n        }}\n      />\n      <PageNotFoundRoute />\n    </Switch>\n  );\n}\n\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Calendar as BigCalendar, momentLocalizer, View } from \"react-big-calendar\";\nimport \"react-big-calendar/lib/css/react-big-calendar.css\";\nimport moment from \"moment\";\nimport * as ICAL from \"ical.js\";\nimport { store } from \"../store\";\nimport { appendError } from \"../store/actions\";\n\nimport { EventType } from \"../pim-types\";\n\nimport \"./Calendar.css\";\n\nconst calendarLocalizer = momentLocalizer(moment);\n\nconst MAX_RECURRENCE_DATE = ICAL.Time.now();\nMAX_RECURRENCE_DATE.adjust(800, 0, 0, 0);\n\nfunction eventPropGetter(event: EventType) {\n  return {\n    style: {\n      backgroundColor: event.color,\n    },\n  };\n}\n\nfunction agendaHeaderFormat(date: {start: Date, end: Date}, _culture: string, localizer: any) {\n  const format = \"ll\";\n  return localizer.format(date.start, format) + \" - \" + localizer.format(date.end, format);\n}\n\ninterface PropsType {\n  entries: EventType[];\n  onItemClick: (contact: EventType) => void;\n  onSlotClick?: (start: Date, end: Date) => void;\n}\n\nclass Calendar extends React.PureComponent<PropsType> {\n  public state: {\n    currentDate?: Date;\n    view?: View;\n  };\n\n  constructor(props: any) {\n    super(props);\n    this.state = {};\n\n    this.onNavigate = this.onNavigate.bind(this);\n    this.onView = this.onView.bind(this);\n    this.slotClicked = this.slotClicked.bind(this);\n  }\n\n  public render() {\n    const entries = [] as EventType[];\n    this.props.entries.forEach((event) => {\n      entries.push(event);\n\n      try {\n        if (event.isRecurring()) {\n          const recur = event.iterator();\n\n          let next = recur.next(); // Skip the first one\n          while ((next = recur.next())) {\n            if (next.compare(MAX_RECURRENCE_DATE) > 0) {\n              break;\n            }\n\n            const shift = next.subtractDateTz(event.startDate);\n            const ev = event.clone();\n            ev.startDate.addDuration(shift);\n            ev.endDate.addDuration(shift);\n            entries.push(ev);\n          }\n        }\n      } catch (e) {\n        store.dispatch(appendError(e));\n      }\n    });\n\n    return (\n      <div style={{ width: \"100%\", height: \"calc(100vh - 230px)\", minHeight: 500 }}>\n        <BigCalendar\n          defaultDate={new Date()}\n          scrollToTime={new Date(1970, 1, 1, 8)}\n          localizer={calendarLocalizer}\n          events={entries}\n          selectable\n          onSelectEvent={this.props.onItemClick as any}\n          onSelectSlot={this.slotClicked as any}\n          formats={{ agendaHeaderFormat: agendaHeaderFormat as any }}\n          eventPropGetter={eventPropGetter}\n          date={this.state.currentDate}\n          onNavigate={this.onNavigate}\n          view={this.state.view}\n          onView={this.onView}\n        />\n      </div>\n    );\n  }\n\n  private onNavigate(currentDate: Date) {\n    this.setState({ currentDate });\n  }\n\n  private onView(view: string) {\n    this.setState({ view });\n  }\n\n  private slotClicked(slotInfo: {start: Date, end: Date}) {\n    if (this.props.onSlotClick) {\n      this.props.onSlotClick(slotInfo.start, slotInfo.end);\n    }\n  }\n}\n\nexport default Calendar;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { TextField, Select, MenuItem, InputLabel, FormControl } from \"@material-ui/core\";\nimport DateTimePicker from \"../widgets/DateTimePicker\";\nimport * as ICAL from \"ical.js\";\n\nexport type RRuleOptions = ICAL.RecurData;\n\nenum Ends {\n  Forever,\n  Until,\n  After,\n}\n\nenum Months {\n  Jan = 1,\n  Feb,\n  Mar,\n  Apr,\n  May,\n  Jun,\n  Jul,\n  Aug,\n  Sep,\n  Oct,\n  Nov,\n  Dec,\n}\n\nenum MonthRepeat {\n  Bysetpos,\n  Bymonthday,\n}\n\nenum WeekDay {\n  Su = 1,\n  Mo,\n  Tu,\n  We,\n  Th,\n  Fr,\n  Sa,\n}\n\nconst disableComplex = true;\n\nconst weekdays: WeekDay[] = Array.from(Array(7)).map((_, i) => i + 1);\nconst months: Months[] = Array.from(Array(12)).map((_, i) => i + 1);\n\nconst menuItemsEnds = [Ends.Forever, Ends.Until, Ends.After].map((key) => {\n  let displayhName;\n  switch (key) {\n    case Ends.Forever:\n      displayhName = \"Forever\";\n      break;\n    case Ends.Until:\n      displayhName = \"Until\";\n      break;\n    case Ends.After:\n      displayhName = \"For\";\n      break;\n  }\n\n  return (\n    <MenuItem key={key} value={key}>{displayhName}</MenuItem>\n  );\n});\nconst menuItemsFrequency = [\"YEARLY\", \"MONTHLY\", \"WEEKLY\", \"DAILY\"].map((value) => {\n  return (\n    <MenuItem key={value} value={value}>{value.toLowerCase()}</MenuItem>\n  );\n});\nconst menuItemMonths = months.map((month) => {\n  return (\n    <MenuItem key={month} value={month}>{Months[month]}</MenuItem>\n  );\n});\nconst menuItemsWeekDays = weekdays.map((day) => {\n  return (\n    <MenuItem key={day} value={WeekDay[day].toUpperCase()}>{WeekDay[day]}</MenuItem>\n  );\n});\n\nfunction makeArray<T>(item: T) {\n  if (item === undefined) {\n    return [];\n  } else if (Array.isArray(item)) {\n    return item;\n  } else {\n    return [item];\n  }\n}\n\nfunction sanitizeByDay(item: string | string[] | undefined) {\n  const ret = makeArray(item);\n  return (ret as string[]).map((value) => {\n    if (parseInt(value) === 1) {\n      return value.substr(1);\n    }\n    return value;\n  });\n}\n\nconst styles = {\n  multiSelect: { minWidth: 120, maxWidth: \"100%\" },\n  width: { width: 120 },\n};\n\ninterface PropsType {\n  onChange: (rrule: RRuleOptions) => void;\n  rrule: RRuleOptions;\n}\n\nexport default function RRule(props: PropsType) {\n  const options = props.rrule;\n  function updateRule(newOptions: Partial<RRuleOptions>, reset = false): void {\n    const updatedOptions: RRuleOptions = { ...options, ...newOptions };\n\n    if (reset) {\n      props.onChange(updatedOptions);\n      return;\n    }\n\n    for (const key of Object.keys(updatedOptions)) {\n      const value = updatedOptions[key];\n      if ((value === undefined) || (value?.length === 0)) {\n        delete updatedOptions[key];\n        continue;\n      }\n    }\n    props.onChange(updatedOptions);\n  }\n  function getEnds(): Ends {\n    if (options.until && !options.count) {\n      return Ends.Until;\n    } else if (!options.until && options.count) {\n      return Ends.After;\n    } else {\n      return Ends.Forever;\n    }\n  }\n  return (\n    <div style={{ paddingLeft: \"2em\" }}>\n      <div style={{ display: \"flex\", alignItems: \"center\" }}>\n        <span>Repeat</span>\n        <Select\n          value={options.freq}\n          style={{ marginLeft: \"0.5em\" }}\n          onChange={(event: React.FormEvent<{ value: unknown }>) => {\n            const freq = (event.target as HTMLSelectElement).value as ICAL.FrequencyValues;\n            updateRule({ freq: freq }, true);\n          }}\n        >\n          {menuItemsFrequency}\n        </Select>\n        <span style={{ marginLeft: \"0.5em\" }}>every</span>\n        <TextField\n          style={{ marginLeft: \"0.5em\", width: \"2.2em\" }}\n          type=\"number\"\n          inputProps={{ min: 1, max: 99 }}\n          value={options.interval ?? 1}\n          onChange={(event: React.FormEvent<{ value: unknown }>) => {\n            event.preventDefault();\n            const inputNode = event.currentTarget as HTMLInputElement;\n            if (inputNode.value === \"\") {\n              updateRule({ interval: 1 });\n            } else if (inputNode.valueAsNumber) {\n              updateRule({ interval: inputNode.valueAsNumber });\n            }\n          }}\n        />\n      </div>\n      {(options.freq && options.freq !== \"DAILY\") &&\n        <div>\n          <FormControl>\n            <InputLabel>Weekdays</InputLabel>\n            <Select\n              value={sanitizeByDay(options.byday)}\n              multiple\n              style={styles.multiSelect}\n              onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                const value = event.target.value as string[];\n                updateRule({ byday: value });\n              }}>\n              {menuItemsWeekDays}\n            </Select>\n          </FormControl>\n        </div>\n      }\n      {!disableComplex && (\n        <div style={{ display: \"flex\" }}>\n          {(options.freq === \"MONTHLY\") &&\n            <Select value={options.bysetpos ? MonthRepeat.Bysetpos : MonthRepeat.Bymonthday}\n              onChange={(event: React.FormEvent<{ value: unknown }>) => {\n                const value = Number((event.target as HTMLInputElement).value);\n                if (value === MonthRepeat.Bymonthday) {\n                  updateRule({ bymonthday: [1], bysetpos: undefined, bymonth: [Months.Jan] });\n                } else if (value === MonthRepeat.Bysetpos) {\n                  updateRule({ bysetpos: [1], bymonthday: undefined, bymonth: undefined });\n                }\n              }}>\n              <MenuItem value={MonthRepeat.Bymonthday}>On</MenuItem>\n              <MenuItem value={MonthRepeat.Bysetpos}>On the</MenuItem>\n            </Select>\n          }\n          {options.bysetpos &&\n            <Select value={options.bysetpos[0]}\n              onChange={(event: React.FormEvent<{ value: unknown }>) => {\n                updateRule({ bysetpos: [Number((event.target as HTMLInputElement).value)] });\n              }}>\n              <MenuItem value={1}>First</MenuItem>\n              <MenuItem value={2}>Second</MenuItem>\n              <MenuItem value={3}>Third</MenuItem>\n              <MenuItem value={4}>Fourth</MenuItem>\n              <MenuItem value={-1}>Last</MenuItem>\n            </Select>\n          }\n        </div>\n      )}\n\n      <div>\n        {options.freq === \"MONTHLY\" &&\n          <TextField\n            type=\"number\"\n            value={options.bymonthday ? options.bymonthday[0] : undefined}\n            label=\"Month day\"\n            style={styles.width}\n            inputProps={{ min: 1, step: 1, max: 31 }}\n            onChange={(event: React.FormEvent<{ value: unknown }>) => {\n              event.preventDefault();\n              const value = (event.currentTarget as HTMLInputElement).value;\n              const numberValue = Number(value);\n              if (value === \"\") {\n                updateRule({ bymonthday: undefined });\n              } else if (numberValue < 32 && numberValue > 0) {\n                updateRule({ bymonthday: [numberValue] });\n              }\n            }}\n          />\n        }\n        {options.freq === \"YEARLY\" &&\n          <div>\n            <FormControl>\n              <InputLabel>Months</InputLabel>\n              <Select\n                style={styles.multiSelect}\n                value={makeArray(options.bymonth) ?? []}\n                multiple\n                onChange={(event: React.ChangeEvent<{ value: unknown }>) => {\n                  const value = event.target.value as string[];\n                  updateRule({ bymonth: value.map((month) => Number(month)) });\n                }}>\n                {menuItemMonths}\n              </Select>\n            </FormControl>\n          </div>\n        }\n      </div>\n      <div style={{ display: \"inline-flex\", alignItems: \"center\" }}>\n        <Select\n          value={getEnds()}\n          style={{ marginRight: \"0.5em\" }}\n          onChange={(event: React.FormEvent<{ value: unknown }>) => {\n            const value = Number((event.target as HTMLSelectElement).value);\n            let updateOptions;\n            if (value === Ends.Until) {\n              updateOptions = { count: undefined, until: ICAL.Time.now() };\n            } else if (value === Ends.After) {\n              updateOptions = { until: undefined, count: 1 };\n            } else {\n              updateOptions = { count: undefined, until: undefined };\n            }\n            updateRule(updateOptions);\n          }}>\n          {menuItemsEnds}\n        </Select>\n        {options.until &&\n          <DateTimePicker\n            dateOnly\n            value={options.until?.toJSDate() || undefined}\n            placeholder=\"Ends\"\n            onChange={(date?: Date) => {\n              const value = date ? date : null;\n              updateRule({ until: ICAL.Time.fromJSDate(value, true) });\n            }}\n          />\n        }\n        {options.count &&\n          <>\n            <TextField\n              type=\"number\"\n              value={options.count}\n              style={{ width: \"4em\" }}\n              inputProps={{ min: 1, step: 1 }}\n              onChange={(event: React.FormEvent<{ value: unknown }>) => {\n                event.preventDefault();\n                const inputNode = event.currentTarget as HTMLInputElement;\n                if (inputNode.value === \"\") {\n                  updateRule({ count: 1 });\n                } else if (inputNode.valueAsNumber) {\n                  updateRule({ count: inputNode.valueAsNumber });\n                }\n              }}\n            />\n            <span style={{ marginLeft: \"0.5em\" }}>events</span>\n          </>\n        }\n      </div>\n\n    </div>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport PimItemHeader from \"../components/PimItemHeader\";\n\nimport { formatDateRange, formatOurTimezoneOffset } from \"../helpers\";\n\nimport { EventType } from \"../pim-types\";\n\nclass Event extends React.PureComponent {\n  public props: {\n    item?: EventType;\n  };\n\n  public render() {\n    if (this.props.item === undefined) {\n      throw Error(\"Event should be defined!\");\n    }\n\n    const style = {\n      content: {\n        padding: 15,\n      },\n    };\n\n    const timezone = this.props.item.timezone;\n\n    return (\n      <React.Fragment>\n        <PimItemHeader text={this.props.item.summary} backgroundColor={this.props.item.color}>\n          <div>{formatDateRange(this.props.item.startDate, this.props.item.endDate)} {timezone && <small>({formatOurTimezoneOffset()})</small>}</div>\n          <br />\n          <div><u>{this.props.item.location}</u></div>\n        </PimItemHeader>\n        <div style={style.content}>\n          <p style={{ wordWrap: \"break-word\" }}>{this.props.item.description}</p>\n          {(this.props.item.attendees.length > 0) && (\n            <div>Attendees: {this.props.item.attendees.map((x) => (x.getFirstValue())).join(\", \")}</div>)}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Event;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport MomentUtils from \"@date-io/moment\";\nimport { MuiPickersUtilsProvider, KeyboardDatePicker, KeyboardDateTimePicker } from \"@material-ui/pickers\";\n\nimport moment from \"moment\";\n\ninterface PropsType {\n  placeholder: string;\n  value?: Date;\n  dateOnly?: boolean;\n  onChange: (date?: Date) => void;\n}\n\nclass DateTimePicker extends React.PureComponent<PropsType> {\n  constructor(props: any) {\n    super(props);\n    this.handleInputChange = this.handleInputChange.bind(this);\n  }\n\n  public render() {\n    const Picker = (this.props.dateOnly) ? KeyboardDatePicker : KeyboardDateTimePicker;\n    const dateFormat = (this.props.dateOnly) ? \"L\" : \"L LT\";\n    return (\n      <MuiPickersUtilsProvider utils={MomentUtils}>\n        <Picker\n          value={this.props.value || null}\n          onChange={this.handleInputChange}\n          format={dateFormat}\n          ampm={false}\n          showTodayButton\n          KeyboardButtonProps={{\n            \"aria-label\": \"change date\",\n          }}\n        />\n      </MuiPickersUtilsProvider>\n    );\n  }\n\n  private handleInputChange(date: moment.Moment) {\n    if (moment.isMoment(date)) {\n      this.props.onChange(date.toDate());\n    } else {\n      this.props.onChange(undefined);\n    }\n  }\n}\n\nexport default DateTimePicker;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport * as zones from \"../data/zones.json\";\nconst zonelist = Object.keys(zones.zones).sort();\n\ninterface PropsType {\n  value: string | null;\n  onChange: (value: string) => void;\n  style?: React.CSSProperties;\n}\n\nexport default React.memo(function TimezonePicker(props: PropsType) {\n  return (\n    <Autocomplete\n      options={zonelist}\n      value={props.value}\n      onChange={(_e: any, value: string) => props.onChange(value)}\n      getOptionLabel={(option) => option.replace(\"_\", \" \")}\n      style={props.style}\n      renderInput={(params) => (\n        <TextField {...params} label=\"Timezone\" fullWidth />\n      )}\n    />\n  );\n});\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport Snackbar from \"@material-ui/core/Snackbar\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nexport interface PropsType {\n  open: boolean;\n  children: React.ReactNode;\n  onClose?: (event?: React.SyntheticEvent, reason?: string) => void;\n  severity?: \"error\" | \"info\" | \"success\" | \"warning\";\n  autoHideDuration?: number;\n}\n\nexport default function Toast(props: PropsType) {\n  const { open, children, onClose, severity, autoHideDuration } = props;\n\n  return (\n    <Snackbar open={open} onClose={onClose} autoHideDuration={autoHideDuration}>\n      <Alert severity={severity} variant=\"filled\" elevation={6} onClose={onClose}>\n        {children}\n      </Alert>\n    </Snackbar>\n  );\n}","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport * as colors from \"@material-ui/core/colors\";\n\nimport IconDelete from \"@material-ui/icons/Delete\";\nimport IconCancel from \"@material-ui/icons/Clear\";\nimport IconSave from \"@material-ui/icons/Save\";\n\nimport DateTimePicker from \"../widgets/DateTimePicker\";\n\nimport ConfirmationDialog from \"../widgets/ConfirmationDialog\";\nimport TimezonePicker from \"../widgets/TimezonePicker\";\nimport Toast from \"../widgets/Toast\";\n\nimport * as uuid from \"uuid\";\nimport * as ICAL from \"ical.js\";\n\nimport { getCurrentTimezone } from \"../helpers\";\n\nimport { EventType, timezoneLoadFromName } from \"../pim-types\";\nimport RRule, { RRuleOptions } from \"../widgets/RRule\";\n\nimport { History } from \"history\";\nimport { CachedCollection } from \"../Pim/helpers\";\n\ninterface PropsType {\n  collections: CachedCollection[];\n  initialCollection?: string;\n  item?: EventType;\n  onSave: (event: EventType, collectionUid: string, originalEvent?: EventType) => Promise<void>;\n  onDelete: (event: EventType, collectionUid: string) => void;\n  onCancel: () => void;\n  history: History;\n  duplicate?: boolean;\n}\n\nexport default class EventEdit extends React.PureComponent<PropsType> {\n  public state: {\n    uid: string;\n    title: string;\n    description: string;\n    allDay: boolean;\n    start?: Date;\n    end?: Date;\n    timezone: string | null;\n    rrule?: RRuleOptions;\n    location: string;\n    collectionUid: string;\n\n    error?: string;\n    showDeleteDialog: boolean;\n  };\n\n  constructor(props: PropsType) {\n    super(props);\n    this.state = {\n      uid: \"\",\n      title: \"\",\n      allDay: false,\n      location: \"\",\n      description: \"\",\n      timezone: null,\n\n      collectionUid: \"\",\n      showDeleteDialog: false,\n    };\n\n    const locState = this.props.history.location.state as EventType;\n    if (locState) {\n      // FIXME: Hack to determine if all day. Should be passed as a proper state.\n      this.state.allDay = (locState.start &&\n        (locState.start.getHours() === 0) &&\n        (locState.start.getMinutes() === 0) &&\n        (locState.start.getHours() === locState.end.getHours()) &&\n        (locState.start.getMinutes() === locState.end.getMinutes()));\n      this.state.start = (locState.start) ? locState.start : undefined;\n      this.state.end = (locState.end) ? locState.end : undefined;\n    }\n\n    if (this.props.item !== undefined) {\n      const event = this.props.item;\n\n      const allDay = event.startDate.isDate;\n      const endDate = event.endDate.clone();\n\n      if (allDay) {\n        endDate.adjust(-1, 0, 0, 0);\n      }\n\n      if (this.props.duplicate) {\n        this.state.title = event.title ? `Copy of ${event.title}` : \"\";\n      } else {\n        this.state.uid = event.uid;\n        this.state.title = event.title ? event.title : \"\";\n      }\n      this.state.allDay = allDay;\n      this.state.start = event.startDate.convertToZone(ICAL.Timezone.localTimezone).toJSDate();\n      this.state.end = endDate.convertToZone(ICAL.Timezone.localTimezone).toJSDate();\n      this.state.location = event.location ? event.location : \"\";\n      this.state.description = event.description ? event.description : \"\";\n      this.state.timezone = event.timezone;\n      const rruleProp = this.props.item?.component.getFirstPropertyValue<ICAL.Recur>(\"rrule\");\n      if (rruleProp) {\n        this.state.rrule = rruleProp.toJSON() as any;\n        if (this.state.rrule && rruleProp.until) {\n          this.state.rrule.until = rruleProp.until;\n        }\n      }\n    }\n    if (this.props.duplicate || this.props.item === undefined) {\n      this.state.uid = uuid.v4();\n    }\n\n    this.state.timezone = this.state.timezone || getCurrentTimezone();\n\n    if (props.initialCollection) {\n      this.state.collectionUid = props.initialCollection;\n    } else if (props.collections[0]) {\n      this.state.collectionUid = props.collections[0].collection.uid;\n    }\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.toggleAllDay = this.toggleAllDay.bind(this);\n    this.onDeleteRequest = this.onDeleteRequest.bind(this);\n    this.toggleRecurring = this.toggleRecurring.bind(this);\n    this.handleRRuleChange = this.handleRRuleChange.bind(this);\n    this.handleCloseToast = this.handleCloseToast.bind(this);\n  }\n\n  public handleChange(name: string, value: string) {\n    this.setState({\n      [name]: value,\n    });\n\n  }\n\n  public handleInputChange(event: React.ChangeEvent<any>) {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.handleChange(name, value);\n  }\n\n  public toggleAllDay() {\n    this.setState({ allDay: !this.state.allDay });\n  }\n  public toggleRecurring() {\n    const value = this.state.rrule ? undefined : { freq: \"WEEKLY\", interval: 1 };\n    this.setState({ rrule: value });\n  }\n\n\n  public handleRRuleChange(rrule: RRuleOptions): void {\n    this.setState({ rrule: rrule });\n  }\n\n  public handleCloseToast(_event?: React.SyntheticEvent, reason?: string) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ error: \"\" });\n  }\n\n  public onSubmit(e: React.FormEvent<any>) {\n    e.preventDefault();\n\n    if ((!this.state.start) || (!this.state.end)) {\n      this.setState({ error: \"Both start and end time must be set!\" });\n      return;\n    }\n\n    function fromDate(date: Date, allDay: boolean) {\n      const ret = ICAL.Time.fromJSDate(date, false);\n      if (!allDay) {\n        return ret;\n      } else {\n        const data = ret.toJSON();\n        data.isDate = allDay;\n        return ICAL.Time.fromData(data);\n      }\n    }\n\n    const startDate = fromDate(this.state.start, this.state.allDay);\n    const endDate = fromDate(this.state.end, this.state.allDay);\n\n    if (this.state.allDay) {\n      endDate.adjust(1, 0, 0, 0);\n    }\n\n    if (startDate.compare(endDate) >= 0) {\n      this.setState({ error: \"End time must be later than start time!\" });\n      return;\n    }\n\n    const event = (this.props.item && !this.props.duplicate) ?\n      this.props.item.clone()\n      :\n      new EventType()\n      ;\n\n    event.uid = this.state.uid;\n    event.summary = this.state.title;\n    event.startDate = startDate;\n    event.endDate = endDate;\n    event.location = this.state.location;\n    event.description = this.state.description;\n    if (this.state.timezone) {\n      const timezone = timezoneLoadFromName(this.state.timezone);\n      if (timezone) {\n        event.startDate = event.startDate?.convertToZone(timezone);\n        event.endDate = event.endDate?.convertToZone(timezone);\n      }\n    }\n    if (this.state.rrule) {\n      event.component.updatePropertyWithValue(\"rrule\", new ICAL.Recur(this.state.rrule!));\n    }\n\n    event.component.updatePropertyWithValue(\"last-modified\", ICAL.Time.now());\n\n    this.props.onSave(event, this.state.collectionUid, this.props.item)\n      .then(() => {\n        this.props.history.goBack();\n      });\n  }\n\n  public onDeleteRequest() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    const styles = {\n      form: {\n      },\n      fullWidth: {\n        width: \"100%\",\n        boxSizing: \"border-box\" as any,\n        marginTop: 16,\n      },\n      submit: {\n        marginTop: 40,\n        marginBottom: 20,\n        textAlign: \"right\" as any,\n      },\n    };\n\n    const recurring = this.props.item && this.props.item.isRecurring();\n    const differentTimezone = this.state.timezone && (this.state.timezone !== getCurrentTimezone()) && timezoneLoadFromName(this.state.timezone);\n\n    return (\n      <>\n        <h2>\n          {(this.props.item && !this.props.duplicate) ? \"Edit Event\" : \"New Event\"}\n        </h2>\n        {recurring && (\n          <div>\n            <span style={{ color: \"red\" }}>IMPORTANT: </span>\n            This is a recurring event, for now, only editing the whole series\n            (by editing the first instance) is supported.\n          </div>\n        )}\n        <Toast open={!!this.state.error} onClose={this.handleCloseToast}>\n          ERROR! {this.state.error}\n        </Toast>\n        <form style={styles.form} onSubmit={this.onSubmit}>\n          <TextField\n            name=\"title\"\n            placeholder=\"Enter title\"\n            style={styles.fullWidth}\n            value={this.state.title}\n            onChange={this.handleInputChange}\n          />\n\n          <FormControl disabled={this.props.item !== undefined} style={styles.fullWidth}>\n            <InputLabel>\n              Saving to\n            </InputLabel>\n            <Select\n              name=\"collectionUid\"\n              value={this.state.collectionUid}\n              disabled={this.props.item !== undefined && !this.props.duplicate}\n              onChange={this.handleInputChange}\n            >\n              {this.props.collections.map((x) => (\n                <MenuItem key={x.collection.uid} value={x.collection.uid}>{x.metadata.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl>\n            <FormHelperText>FROM</FormHelperText>\n            <DateTimePicker\n              dateOnly={this.state.allDay}\n              placeholder=\"Start\"\n              value={this.state.start}\n              onChange={(date?: Date) => {\n                // If end is unset, set it to start + 30 minutes\n                const end = this.state.end ?? (\n                  new Date(date!.getTime() + 30 * 60 * 1000)\n                );\n                this.setState({ start: date, end });\n              }}\n            />\n            {differentTimezone && this.state.start && (\n              <FormHelperText>{ICAL.Time.fromJSDate(this.state.start, false).convertToZone(differentTimezone!).toJSDate().toString()}</FormHelperText>\n            )}\n          </FormControl>\n\n          <FormControl>\n            <FormHelperText>TO</FormHelperText>\n            <DateTimePicker\n              dateOnly={this.state.allDay}\n              placeholder=\"End\"\n              value={this.state.end}\n              onChange={(date?: Date) => this.setState({ end: date })}\n            />\n            {differentTimezone && this.state.end && (\n              <FormHelperText>{ICAL.Time.fromJSDate(this.state.end, false).convertToZone(differentTimezone!).toJSDate().toString()}</FormHelperText>\n            )}\n          </FormControl>\n\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"allDay\"\n                  checked={this.state.allDay}\n                  onChange={this.toggleAllDay}\n                  color=\"primary\"\n                />\n              }\n              label=\"All Day\"\n            />\n          </FormGroup>\n\n          {(!this.state.allDay) && (\n            <TimezonePicker value={this.state.timezone} onChange={(zone) => this.setState({ timezone: zone })} />\n          )}\n\n          <TextField\n            name=\"location\"\n            placeholder=\"Add location\"\n            style={styles.fullWidth}\n            value={this.state.location}\n            onChange={this.handleInputChange}\n          />\n\n          <TextField\n            name=\"description\"\n            placeholder=\"Add description\"\n            multiline\n            style={styles.fullWidth}\n            value={this.state.description}\n            onChange={this.handleInputChange}\n          />\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"recurring\"\n                  checked={!!this.state.rrule}\n                  onChange={this.toggleRecurring}\n                  color=\"primary\"\n                />\n              }\n              label=\"Recurring\"\n            />\n          </FormGroup>\n          {this.state.rrule &&\n            <RRule\n              onChange={this.handleRRuleChange}\n              rrule={this.state.rrule ? this.state.rrule : { freq: \"DAILY\", interval: 1 }}\n            />\n          }\n          <div style={styles.submit}>\n            <Button\n              variant=\"contained\"\n              onClick={this.props.onCancel}\n            >\n              <IconCancel style={{ marginRight: 8 }} />\n              Cancel\n            </Button>\n\n            {this.props.item &&\n              <Button\n                variant=\"contained\"\n                style={{ marginLeft: 15, backgroundColor: colors.red[500], color: \"white\" }}\n                onClick={this.onDeleteRequest}\n              >\n                <IconDelete style={{ marginRight: 8 }} />\n                Delete\n              </Button>\n            }\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ marginLeft: 15 }}\n            >\n              <IconSave style={{ marginRight: 8 }} />\n              Save\n            </Button>\n          </div>\n        </form>\n\n        <ConfirmationDialog\n          title=\"Delete Confirmation\"\n          labelOk=\"Delete\"\n          open={this.state.showDeleteDialog}\n          onOk={() => this.props.onDelete(this.props.item!, this.props.initialCollection!)}\n          onCancel={() => this.setState({ showDeleteDialog: false })}\n        >\n          Are you sure you would like to delete this event?\n        </ConfirmationDialog>\n      </>\n    );\n  }\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { withRouter } from \"react-router\";\n\n// FIXME: Should probably tie this to the history object, or at least based on the depth of the history\nconst stateCache = {};\n\ntype Constructor<T> = new(...args: any[]) => T;\n\nexport function historyPersistor(tag: string) {\n  return <T extends Constructor<React.Component>>(Base: T) => {\n    return withRouter(class extends Base {\n      constructor(...rest: any[]) {\n        const props = rest[0];\n        super(...rest);\n        const tagName = this.getKeyForTag(props, tag);\n        if (tagName in stateCache) {\n          this.state = stateCache[tagName];\n        }\n      }\n\n      public componentWillUnmount() {\n        if (super.componentWillUnmount) {\n          super.componentWillUnmount();\n        }\n        stateCache[this.getKeyForTag(this.props, tag)] = this.state;\n      }\n\n      public getKeyForTag(props: any, tagName: string) {\n        return props.location.pathname + \":\" + tagName;\n      }\n    });\n  };\n}\n","// SPDX-FileCopyrightText: © 2020 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router\";\n\nimport * as Etebase from \"etebase\";\n\nimport { Button, useTheme } from \"@material-ui/core\";\nimport IconEdit from \"@material-ui/icons/Edit\";\nimport IconDuplicate from \"@material-ui/icons/FileCopy\";\nimport IconChangeHistory from \"@material-ui/icons/ChangeHistory\";\n\nimport { EventType, PimType } from \"../pim-types\";\nimport { useCredentials } from \"../credentials\";\nimport { useItems, useCollections } from \"../etebase-helpers\";\nimport { routeResolver } from \"../App\";\nimport Calendar from \"./Calendar\";\nimport Event from \"./Event\";\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\nimport EventEdit from \"./EventEdit\";\nimport PageNotFound, { PageNotFoundRoute } from \"../PageNotFound\";\n\nimport { CachedCollection, getItemNavigationUid, getDecryptCollectionsFunction, getDecryptItemsFunction, PimFab, itemDelete, itemSave, defaultColor } from \"../Pim/helpers\";\nimport { historyPersistor } from \"../persist-state-history\";\nimport ItemChangeHistory from \"../Pim/ItemChangeHistory\";\n\nconst PersistCalendar = historyPersistor(\"Calendar\")(Calendar);\n\nconst colType = \"etebase.vevent\";\n\nconst decryptCollections = getDecryptCollectionsFunction(colType);\nconst decryptItems = getDecryptItemsFunction(colType, EventType.parse);\n\nexport default function CalendarsMain() {\n  const [entries, setEntries] = React.useState<Map<string, Map<string, EventType>>>();\n  const [cachedCollections, setCachedCollections] = React.useState<CachedCollection[]>();\n  const theme = useTheme();\n  const history = useHistory();\n  const etebase = useCredentials()!;\n  const collections = useCollections(etebase, colType);\n  const items = useItems(etebase, colType);\n\n  React.useEffect(() => {\n    if (!collections || !items) {\n      return;\n    }\n    (async () => {\n      const colEntries = await decryptCollections(collections);\n\n      const entries = await decryptItems(items);\n\n      for (const collection of colEntries) {\n        const items = entries.get(collection.collection.uid)!;\n        for (const item of items.values()) {\n          item.color = collection.metadata.color || defaultColor;\n        }\n      }\n\n      setCachedCollections(colEntries);\n      setEntries(entries);\n    })();\n  }, [items, collections]);\n\n  if (!entries || !cachedCollections) {\n    return (\n      <LoadingIndicator />\n    );\n  }\n\n  async function onItemSave(item: PimType, collectionUid: string, originalItem?: PimType): Promise<void> {\n    const collection = collections!.find((x) => x.uid === collectionUid)!;\n    await itemSave(etebase, collection, items!, item, collectionUid, originalItem);\n  }\n\n  async function onItemDelete(item: PimType, collectionUid: string) {\n    const collection = collections!.find((x) => x.uid === collectionUid)!;\n    await itemDelete(etebase, collection, items!, item, collectionUid);\n\n    history.push(routeResolver.getRoute(\"pim.events\"));\n  }\n\n  function onCancel() {\n    history.goBack();\n  }\n\n  const flatEntries = [];\n  for (const col of entries.values()) {\n    for (const item of col.values()) {\n      flatEntries.push(item);\n    }\n  }\n\n  const styles = {\n    button: {\n      marginLeft: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n  };\n\n  return (\n    <Switch>\n      <Route\n        path={routeResolver.getRoute(\"pim.events\")}\n        exact\n      >\n        <PersistCalendar\n          entries={flatEntries}\n          onItemClick={(item: EventType) => history.push(\n            routeResolver.getRoute(\"pim.events._id\", { itemUid: getItemNavigationUid(item) })\n          )}\n          onSlotClick={(start?: Date, end?: Date) => history.push(\n            routeResolver.getRoute(\"pim.events.new\"),\n            { start, end }\n          )}\n        />\n        <PimFab\n          onClick={() => history.push(\n            routeResolver.getRoute(\"pim.events.new\")\n          )}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"pim.events.new\")}\n        exact\n      >\n        <EventEdit\n          collections={cachedCollections}\n          onSave={onItemSave}\n          onDelete={onItemDelete}\n          onCancel={onCancel}\n          history={history}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"pim.events._id.log\")}\n        render={({ match }) => {\n          // We have this path outside because we don't want the item existing check\n          const [colUid, itemUid] = match.params.itemUid.split(\"|\");\n          const cachedCollection = cachedCollections!.find((x) => x.collection.uid === colUid)!;\n          if (!cachedCollection) {\n            return (<PageNotFound />);\n          }\n\n          return (\n            <ItemChangeHistory collection={cachedCollection} itemUid={itemUid} />\n          );\n        }}\n      />\n      <Route\n        path={routeResolver.getRoute(\"pim.events._id\")}\n        render={({ match }) => {\n          const [colUid, itemUid] = match.params.itemUid.split(\"|\");\n          const item = entries.get(colUid)?.get(itemUid);\n          if (!item) {\n            return (<PageNotFound />);\n          }\n\n          const collection = collections!.find((x) => x.uid === colUid)!;\n          const readOnly = collection.accessLevel === Etebase.CollectionAccessLevel.ReadOnly;\n\n          return (\n            <Switch>\n              <Route\n                path={routeResolver.getRoute(\"pim.events._id.edit\")}\n                exact\n              >\n                <EventEdit\n                  key={itemUid}\n                  initialCollection={item.collectionUid}\n                  item={item}\n                  collections={cachedCollections}\n                  onSave={onItemSave}\n                  onDelete={onItemDelete}\n                  onCancel={onCancel}\n                  history={history}\n                />\n              </Route>\n              <Route\n                path={routeResolver.getRoute(\"pim.events._id.duplicate\")}\n                exact\n              >\n                <EventEdit\n                  key={itemUid}\n                  initialCollection={item.collectionUid}\n                  item={item}\n                  collections={cachedCollections}\n                  onSave={onItemSave}\n                  onDelete={onItemDelete}\n                  onCancel={onCancel}\n                  history={history}\n                  duplicate\n                />\n              </Route>\n              <Route\n                path={routeResolver.getRoute(\"pim.events._id\")}\n                exact\n              >\n                <div style={{ textAlign: \"right\", marginBottom: 15 }}>\n                  <Button\n                    variant=\"contained\"\n                    style={styles.button}\n                    onClick={() =>\n                      history.push(routeResolver.getRoute(\"pim.events._id.log\", { itemUid: getItemNavigationUid(item) }))\n                    }\n                  >\n                    <IconChangeHistory style={styles.leftIcon} />\n                    Change History\n                  </Button>\n\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    disabled={readOnly}\n                    style={{ ...styles.button, marginLeft: 15 }}\n                    onClick={() =>\n                      history.push(routeResolver.getRoute(\"pim.events._id.edit\", { itemUid: getItemNavigationUid(item) }))\n                    }\n                  >\n                    <IconEdit style={styles.leftIcon} />\n                    Edit\n                  </Button>\n\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    disabled={readOnly}\n                    style={{ ...styles.button, marginLeft: 15 }}\n                    onClick={() =>\n                      history.push(routeResolver.getRoute(\"pim.events._id.duplicate\", { itemUid: getItemNavigationUid(item) }))\n                    }\n                  >\n                    <IconDuplicate style={styles.leftIcon} />\n                    Duplicate\n                  </Button>\n\n                </div>\n                <Event item={item} />\n              </Route>\n              <PageNotFoundRoute />\n            </Switch>\n          );\n        }}\n      />\n      <PageNotFoundRoute />\n    </Switch>\n  );\n}\n\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport { TaskType, TaskPriorityType } from \"../pim-types\";\nimport { ListItem } from \"../widgets/List\";\n\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport CheckBoxOutlineBlankIcon from \"@material-ui/icons/CheckBoxOutlineBlank\";\nimport * as colors from \"@material-ui/core/colors\";\nimport Chip from \"@material-ui/core/Chip\";\n\nimport { mapPriority, formatDate } from \"../helpers\";\n\nconst checkboxColor = {\n  [TaskPriorityType.Undefined]: colors.grey[600],\n  [TaskPriorityType.Low]: colors.blue[600],\n  [TaskPriorityType.Medium]: colors.orange[600],\n  [TaskPriorityType.High]: colors.red[600],\n};\n\nconst TagsList = React.memo((props: { tags: string[] }) => (\n  <ul>\n    {props.tags.map((tag, i) => tag && <Chip\n      key={i}\n      color=\"secondary\"\n      size=\"small\"\n      label={tag}\n      style={{ marginRight: \"0.75em\" }}\n      component=\"li\"\n    />)}\n  </ul>));\n\ninterface PropsType {\n  entry: TaskType;\n  nestedItems?: React.ReactNode[];\n  onClick: (task: TaskType) => void;\n  onToggleComplete: (task: TaskType, completed: boolean) => void;\n}\n\nexport default React.memo(function TaskListItem(props: PropsType) {\n  const {\n    entry: task,\n    nestedItems,\n    onClick,\n    onToggleComplete,\n  } = props;\n  const title = task.title;\n\n  const dueDateText = task.dueDate ? `Due ${formatDate(task.dueDate)}` : \"\";\n  const freqText = task.rrule ? `(repeats ${task.rrule.freq.toLowerCase()})` : \"\";\n  const secondaryText = `${dueDateText} ${freqText}`;\n\n  return (\n    <ListItem\n      primaryText={title}\n      secondaryText={secondaryText}\n      secondaryTextColor={task.overdue ? \"error\" : \"textSecondary\"}\n      nestedItems={nestedItems}\n      onClick={() => onClick(task)}\n      leftIcon={\n        <Checkbox\n          onClick={(e) => e.stopPropagation()}\n          onChange={(_e, checked) => onToggleComplete(task, checked)}\n          checked={task.finished}\n          icon={<CheckBoxOutlineBlankIcon style={{ color: checkboxColor[mapPriority(task.priority)] }} />}\n        />\n      }\n      rightIcon={<TagsList tags={task.tags} />}\n    />\n  );\n});\n","import * as React from \"react\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport InboxIcon from \"@material-ui/icons/Inbox\";\nimport LabelIcon from \"@material-ui/icons/LabelOutlined\";\nimport TodayIcon from \"@material-ui/icons/Today\";\n\nimport { setSettings } from \"../store/actions\";\nimport { StoreState } from \"../store\";\n\nimport { List, ListItem, ListSubheader } from \"../widgets/List\";\nimport { TaskType, setTaskTags } from \"../pim-types\";\n\ninterface ListItemPropsType {\n  name: string | null;\n  icon?: React.ReactElement;\n  primaryText: string;\n  amount: number;\n}\n\nfunction SidebarListItem(props: ListItemPropsType) {\n  const { name, icon, primaryText, amount } = props;\n  const dispatch = useDispatch();\n  const taskSettings = useSelector((state: StoreState) => state.settings.taskSettings);\n  const { filterBy } = taskSettings;\n\n  const handleClick = () => {\n    dispatch(setSettings({ taskSettings: { ...taskSettings, filterBy: name } }));\n  };\n\n  return (\n    <ListItem\n      onClick={handleClick}\n      selected={name === filterBy}\n      leftIcon={icon}\n      rightIcon={<span style={{ width: \"100%\", textAlign: \"right\" }}>{(amount > 0) && amount}</span>}\n      primaryText={primaryText}\n    />\n  );\n}\n\nexport default React.memo(function Sidebar(props: { tasks: TaskType[] }) {\n  const { tasks } = props;\n\n  const amountDueToday = tasks.filter((x) => x.dueToday).length;\n\n  const tags = new Map<string, number>();\n  tasks.forEach((task) => task.tags.forEach((tag) => {\n    tags.set(tag, (tags.get(tag) ?? 0) + 1);\n  }));\n  // FIXME: ugly hack to support potential tags. Will be fixed very soon.\n  setTaskTags(Array.from(tags.keys()));\n\n  const tagsList = [...tags].sort(([a], [b]) => a.localeCompare(b)).map(([tag, amount]) => (\n    <SidebarListItem\n      key={tag}\n      name={`tag:${tag}`}\n      primaryText={tag}\n      icon={<LabelIcon />}\n      amount={amount}\n    />\n  ));\n\n  return (\n    <List dense>\n      <SidebarListItem name={null} primaryText=\"All\" icon={<InboxIcon />} amount={tasks.length} />\n      <SidebarListItem name=\"today\" primaryText=\"Due today\" icon={<TodayIcon />} amount={amountDueToday} />\n\n      <ListSubheader>Tags</ListSubheader>\n      {tagsList}\n    </List>\n  );\n});\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport MuiMenu, { MenuProps } from \"@material-ui/core/Menu\";\nimport { PopoverOrigin } from \"@material-ui/core/Popover\";\n\nconst anchorOrigin: PopoverOrigin = {\n  vertical: \"bottom\",\n  horizontal: \"right\",\n};\n\nconst transferOrigin: PopoverOrigin = {\n  vertical: \"top\",\n  horizontal: \"right\",\n};\n\nexport default function Menu(props: MenuProps) {\n  return (\n    <MuiMenu\n      getContentAnchorEl={null}\n      anchorOrigin={anchorOrigin}\n      transformOrigin={transferOrigin}\n      {...props}\n    />\n  );\n}","import * as React from \"react\";\n\nimport Switch from \"@material-ui/core/Switch\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport SortIcon from \"@material-ui/icons/Sort\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Transition } from \"react-transition-group\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\n\nimport { PimType } from \"../pim-types\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { setSettings } from \"../store/actions\";\nimport { StoreState } from \"../store\";\n\nimport Menu from \"../widgets/Menu\";\nimport { ListItemText, ListItemSecondaryAction } from \"@material-ui/core\";\nimport { CachedCollection } from \"../Pim/helpers\";\n\nconst transitionTimeout = 300;\n\nconst transitionStyles = {\n  entering: { visibility: \"visible\", width: \"100%\", overflow: \"hidden\" },\n  entered: { visibility: \"visible\", width: \"100%\" },\n  exiting: { visibility: \"visible\", width: \"0%\", overflow: \"hidden\" },\n  exited: { visibility: \"hidden\", width: \"0%\" },\n};\n\nconst useStyles = makeStyles((theme) => ({\n  button: {\n    marginRight: theme.spacing(1),\n  },\n  textField: {\n    transition: `width ${transitionTimeout}ms`,\n    marginRight: theme.spacing(1),\n  },\n}));\n\ninterface PropsType {\n  defaultCollection: CachedCollection;\n  onItemSave: (item: PimType, journalUid: string, originalItem?: PimType) => Promise<void>;\n  showCompleted: boolean;\n  showHidden: boolean;\n  setShowCompleted: (completed: boolean) => void;\n  setShowHidden: (hidden: boolean) => void;\n  searchTerm: string;\n  setSearchTerm: (term: string) => void;\n}\n\nexport default function Toolbar(props: PropsType) {\n  const { showCompleted, setShowCompleted, searchTerm, setSearchTerm, showHidden, setShowHidden } = props;\n\n  const [sortAnchorEl, setSortAnchorEl] = React.useState<null | HTMLElement>(null);\n  const [optionsAnchorEl, setOptionsAnchorEl] = React.useState<null | HTMLElement>(null);\n\n  const showSearchField = true;\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const taskSettings = useSelector((state: StoreState) => state.settings.taskSettings);\n  const { sortBy } = taskSettings;\n\n  const handleSortChange = (sort: string) => {\n    dispatch(setSettings({ taskSettings: { ...taskSettings, sortBy: sort } }));\n    setSortAnchorEl(null);\n  };\n\n  const SortMenuItem = React.forwardRef(function SortMenuItem(props: { name: string, label: string }, ref) {\n    return (\n      <MenuItem innerRef={ref} selected={sortBy === props.name} onClick={() => handleSortChange(props.name)}>{props.label}</MenuItem>\n    );\n  });\n\n  return (\n    <div style={{ display: \"flex\", justifyContent: \"flex-end\", alignItems: \"center\" }}>\n      <Transition in={showSearchField} timeout={transitionTimeout}>\n        {(state) => (\n          <TextField\n            fullWidth\n            placeholder=\"Search\"\n            value={searchTerm}\n            color=\"secondary\"\n            variant=\"standard\"\n            className={classes.textField}\n            style={transitionStyles[state]}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            InputProps={{\n              startAdornment: (\n                <InputAdornment position=\"start\">\n                  <SearchIcon />\n                </InputAdornment>\n              ),\n            }}\n          />\n        )}\n      </Transition>\n\n      <div className={classes.button}>\n        <IconButton\n          size=\"small\"\n          title=\"Sort\"\n          aria-label=\"Sort\"\n          aria-controls=\"sort-menu\"\n          aria-haspopup=\"true\"\n          onClick={(e) => setSortAnchorEl(e.currentTarget)}\n        >\n          <SortIcon />\n        </IconButton>\n        <Menu\n          id=\"sort-menu\"\n          anchorEl={sortAnchorEl}\n          keepMounted\n          open={!!sortAnchorEl}\n          onClose={() => setSortAnchorEl(null)}\n        >\n          <SortMenuItem name=\"smart\" label=\"Smart\" />\n          <SortMenuItem name=\"dueDate\" label=\"Due Date\" />\n          <SortMenuItem name=\"priority\" label=\"Priority\" />\n          <SortMenuItem name=\"title\" label=\"Title\" />\n          <SortMenuItem name=\"lastModifiedDate\" label=\"Last Modified\" />\n        </Menu>\n      </div>\n\n      <div className={classes.button}>\n        <IconButton\n          size=\"small\"\n          title=\"Options\"\n          aria-label=\"Options\"\n          aria-controls=\"options-menu\"\n          aria-haspopup=\"true\"\n          onClick={(e) => setOptionsAnchorEl(e.currentTarget)}\n        >\n          <MoreVertIcon />\n        </IconButton>\n        <Menu\n          id=\"options-menu\"\n          anchorEl={optionsAnchorEl}\n          keepMounted\n          open={!!optionsAnchorEl}\n          onClose={() => setOptionsAnchorEl(null)}\n        >\n          <MenuItem>\n            <ListItemText style={{ marginRight: \"1.5em\" }}>Show completed</ListItemText>\n            <ListItemSecondaryAction>\n              <Switch checked={showCompleted} onChange={(_e, checked) => setShowCompleted(checked)} edge=\"end\" />\n            </ListItemSecondaryAction>\n          </MenuItem>\n          <MenuItem>\n            <ListItemText style={{ marginRight: \"1.5em\" }}>Show hidden</ListItemText>\n            <ListItemSecondaryAction>\n              <Switch checked={showHidden} onChange={(_e, checked) => setShowHidden(checked)} edge=\"end\" />\n            </ListItemSecondaryAction>\n          </MenuItem>\n        </Menu>\n\n      </div>\n    </div>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport ICAL from \"ical.js\";\n\nimport uuid from \"uuid\";\n\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { TaskType, PimType, TaskStatusType } from \"../pim-types\";\nimport { CachedCollection } from \"../Pim/helpers\";\n\ninterface PropsType {\n  style: React.CSSProperties;\n  onSubmit: (item: PimType, journalUid: string, originalItem?: PimType) => void;\n  defaultCollection: CachedCollection;\n}\n\nfunction QuickAdd(props: PropsType) {\n  const [title, setTitle] = React.useState(\"\");\n  const { style, onSubmit: save, defaultCollection } = props;\n\n\n  function handleChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setTitle(e.target.value);\n  }\n\n  function handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    e.preventDefault();\n\n    const task = new TaskType(null);\n    task.uid = uuid.v4();\n    task.title = title;\n    task.status = TaskStatusType.NeedsAction;\n    task.lastModified = ICAL.Time.now();\n\n    save(task, defaultCollection.collection.uid, undefined);\n\n    setTitle(\"\");\n  }\n\n\n  return (\n    <form onSubmit={handleSubmit} style={style}>\n      <TextField\n        label=\"Add a new task\"\n        variant=\"outlined\"\n        fullWidth\n        value={title}\n        onChange={handleChange}\n      />\n    </form>\n  );\n}\n\nexport default QuickAdd;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport { List } from \"../widgets/List\";\n\nimport { TaskType, PimType, TaskStatusType } from \"../pim-types\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { useTheme, makeStyles } from \"@material-ui/core/styles\";\n\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Fuse from \"fuse.js\";\n\nimport TaskListItem from \"./TaskListItem\";\nimport Sidebar from \"./Sidebar\";\nimport Toolbar from \"./Toolbar\";\nimport QuickAdd from \"./QuickAdd\";\n\nimport { StoreState } from \"../store\";\nimport { formatDate } from \"../helpers\";\nimport { CachedCollection } from \"../Pim/helpers\";\nimport { pushMessage } from \"../store/actions\";\n\nfunction sortCompleted(a: TaskType, b: TaskType) {\n  return (!!a.finished === !!b.finished) ? 0 : (a.finished) ? 1 : -1;\n}\n\nfunction sortLastModifiedDate(aIn: TaskType, bIn: TaskType) {\n  const a = aIn.lastModified?.toJSDate() ?? new Date(0);\n  const b = bIn.lastModified?.toJSDate() ?? new Date(0);\n  return (a > b) ? -1 : (a < b) ? 1 : 0;\n}\n\nfunction sortDueDate(aIn: TaskType, bIn: TaskType) {\n  const impossiblyLargeDate = 8640000000000000;\n  const a = aIn.dueDate?.toJSDate() ?? new Date(impossiblyLargeDate);\n  const b = bIn.dueDate?.toJSDate() ?? new Date(impossiblyLargeDate);\n  return (a < b) ? -1 : (a > b) ? 1 : 0;\n}\n\nfunction sortPriority(aIn: TaskType, bIn: TaskType) {\n  // Intentionally converts 0/undefined to 10 (1 more than lowest priority) to sort to back of the list\n  const a = aIn.priority || 10;\n  const b = bIn.priority || 10;\n  return a - b;\n}\n\nfunction sortTitle(aIn: TaskType, bIn: TaskType) {\n  const a = aIn.title ?? \"\";\n  const b = bIn.title ?? \"\";\n  return a.localeCompare(b);\n}\n\nfunction getSortFunction(sortOrder: string) {\n  const sortFunctions: (typeof sortTitle)[] = [sortCompleted];\n\n  switch (sortOrder) {\n    case \"smart\":\n      sortFunctions.push(sortPriority);\n      sortFunctions.push(sortDueDate);\n      sortFunctions.push(sortTitle);\n      break;\n    case \"dueDate\":\n      sortFunctions.push(sortDueDate);\n      break;\n    case \"priority\":\n      sortFunctions.push(sortPriority);\n      sortFunctions.push(sortDueDate);\n      break;\n    case \"title\":\n      sortFunctions.push(sortTitle);\n      break;\n    case \"lastModifiedDate\":\n      // Do nothing because it's the last sort function anyway\n      break;\n  }\n\n  sortFunctions.push(sortLastModifiedDate);\n\n  return (a: TaskType, b: TaskType) => {\n    for (const sortFunction of sortFunctions) {\n      const ret = sortFunction(a, b);\n      if (ret !== 0) {\n        return ret;\n      }\n    }\n\n    return 0;\n  };\n}\n\nconst useStyles = makeStyles((theme) => ({\n  topBar: {\n    backgroundColor: theme.palette.primary[500],\n  },\n}));\n\ninterface PropsType {\n  entries: TaskType[];\n  collections: CachedCollection[];\n  onItemClick: (entry: TaskType) => void;\n  onItemSave: (item: PimType, journalUid: string, originalItem?: PimType) => Promise<void>;\n}\n\nexport default function TaskList(props: PropsType) {\n  const [showCompleted, setShowCompleted] = React.useState(false);\n  const [showHidden, setShowHidden] = React.useState(false);\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const settings = useSelector((state: StoreState) => state.settings.taskSettings);\n  const { filterBy, sortBy } = settings;\n  const dispatch = useDispatch();\n  const theme = useTheme();\n  const classes = useStyles();\n\n  const { onItemClick } = props;\n\n  const handleToggleComplete = async (task: TaskType, completed: boolean) => {\n    const clonedTask = task.clone();\n    clonedTask.status = completed ? TaskStatusType.Completed : TaskStatusType.NeedsAction;\n\n    const nextTask = completed ? task.getNextOccurence() : null;\n\n    try {\n      await props.onItemSave(clonedTask, task.collectionUid!, task);\n      if (nextTask) {\n        dispatch(pushMessage({ message: `${nextTask.title} rescheduled for ${formatDate(nextTask.startDate ?? nextTask.dueDate)}`, severity: \"success\" }));\n      }\n    } catch (_e) {\n      dispatch(pushMessage({ message: \"Failed to save changes. This may be due to a network error.\", severity: \"error\" }));\n    }\n  };\n\n  const potentialEntries = React.useMemo(\n    () => {\n      if (searchTerm) {\n        const result = new Fuse(props.entries, {\n          shouldSort: true,\n          threshold: 0.6,\n          maxPatternLength: 32,\n          minMatchCharLength: 2,\n          keys: [\n            \"title\",\n            \"desc\",\n          ],\n        }).search(searchTerm);\n        return result.map((x) => x.item);\n      } else {\n        return props.entries.filter((x) => (showCompleted || !x.finished) && (showHidden || !x.hidden));\n      }\n    },\n    [showCompleted, props.entries, searchTerm, showHidden]\n  );\n\n  let entries;\n\n  const tagPrefix = \"tag:\";\n  if (filterBy?.startsWith(tagPrefix)) {\n    const tag = filterBy.slice(tagPrefix.length);\n    entries = potentialEntries.filter((x) => x.tags.includes(tag));\n  } else if (filterBy === \"today\") {\n    entries = potentialEntries.filter((x) => x.dueToday);\n  } else {\n    entries = potentialEntries;\n  }\n\n  const subEntriesMap = new Map<string, TaskType[]>();\n\n  entries = entries.filter((x) => {\n    const relatedTo = x.relatedTo;\n    if (relatedTo) {\n      const cur = subEntriesMap.get(relatedTo) ?? [];\n      cur.push(x);\n      subEntriesMap.set(relatedTo, cur);\n      return false;\n    }\n    return true;\n  });\n\n  function taskListItemFromTask(entry: TaskType) {\n    const uid = entry.uid;\n\n    return (\n      <TaskListItem\n        key={uid}\n        entry={entry}\n        nestedItems={subEntriesMap.get(uid)?.map(taskListItemFromTask)}\n        onClick={onItemClick}\n        onToggleComplete={handleToggleComplete}\n      />\n    );\n  }\n\n  const sortedEntries = entries.sort(getSortFunction(sortBy));\n\n  const itemList = sortedEntries.map(taskListItemFromTask);\n\n  return (\n    <Grid container spacing={4}>\n      <Grid item xs={3} className={classes.topBar}>\n        {/* spacer */}\n      </Grid>\n\n      <Grid item xs={9} className={classes.topBar}>\n        <Toolbar\n          defaultCollection={props.collections?.[0]}\n          onItemSave={props.onItemSave}\n          showCompleted={showCompleted}\n          setShowCompleted={setShowCompleted}\n          searchTerm={searchTerm}\n          setSearchTerm={setSearchTerm}\n          showHidden={showHidden}\n          setShowHidden={setShowHidden}\n        />\n      </Grid>\n\n      <Grid item xs={3} style={{ borderRight: `1px solid ${theme.palette.divider}` }}>\n        <Sidebar tasks={potentialEntries} />\n      </Grid>\n\n      <Grid item xs>\n\n        {props.collections?.[0] && <QuickAdd style={{ flexGrow: 1, marginRight: \"0.75em\" }} onSubmit={props.onItemSave} defaultCollection={props.collections?.[0]} />}\n\n        <Divider style={{ marginTop: \"1em\" }} />\n\n        <List>\n          {itemList}\n        </List>\n      </Grid>\n    </Grid>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport PimItemHeader from \"../components/PimItemHeader\";\n\nimport { formatDate, formatOurTimezoneOffset } from \"../helpers\";\n\nimport { TaskType } from \"../pim-types\";\n\nclass Task extends React.PureComponent {\n  public props: {\n    item?: TaskType;\n  };\n\n  public render() {\n    if (this.props.item === undefined) {\n      throw Error(\"Task should be defined!\");\n    }\n\n    const { item } = this.props;\n\n    const style = {\n      content: {\n        padding: 15,\n      },\n    };\n\n    const timezone = this.props.item.timezone;\n\n    return (\n      <React.Fragment>\n        <PimItemHeader text={this.props.item.summary} backgroundColor={this.props.item.color}>\n          {item.startDate &&\n            <div>Start: {formatDate(item.startDate)} {timezone && <small>({formatOurTimezoneOffset()})</small>}</div>\n          }\n          {item.dueDate &&\n            <div>Due: {formatDate(item.dueDate)} {timezone && <small>({formatOurTimezoneOffset()})</small>}</div>\n          }\n          <br />\n          <div><u>{this.props.item.location}</u></div>\n        </PimItemHeader>\n        <div style={style.content}>\n          <p style={{ wordWrap: \"break-word\" }}>{this.props.item.description}</p>\n          {(this.props.item.attendees.length > 0) && (\n            <div>Attendees: {this.props.item.attendees.map((x) => (x.getFirstValue())).join(\", \")}</div>)}\n        </div>\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Task;\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport { Omit } from \"@material-ui/types\";\nimport FormControlLabel, { FormControlLabelProps } from \"@material-ui/core/FormControlLabel\";\n\ninterface Props {\n  color: string;\n  label: string;\n}\n\nconst useStyles = makeStyles({\n  root: {\n    color: (props: Props) => props.color,\n  },\n});\n\nexport default function ColoredRadio(props: Props & Omit<FormControlLabelProps, keyof Props | \"control\">) {\n  const { color, label, value, ...other } = props;\n  const { root } = useStyles(props);\n\n  return <FormControlLabel\n    className={root}\n    label={label}\n    control={<Radio color=\"default\" className={root} value={value} />}\n    {...other}\n  />;\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport * as colors from \"@material-ui/core/colors\";\nimport FormLabel from \"@material-ui/core/FormLabel\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\n\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\n\nimport IconDelete from \"@material-ui/icons/Delete\";\nimport IconCancel from \"@material-ui/icons/Clear\";\nimport IconSave from \"@material-ui/icons/Save\";\n\nimport DateTimePicker from \"../widgets/DateTimePicker\";\n\nimport ConfirmationDialog from \"../widgets/ConfirmationDialog\";\nimport TimezonePicker from \"../widgets/TimezonePicker\";\nimport Toast from \"../widgets/Toast\";\n\nimport * as uuid from \"uuid\";\nimport * as ICAL from \"ical.js\";\n\nimport { getCurrentTimezone, mapPriority } from \"../helpers\";\n\nimport { TaskType, TaskStatusType, timezoneLoadFromName, TaskPriorityType, TaskTags } from \"../pim-types\";\n\nimport { History } from \"history\";\n\nimport ColoredRadio from \"../widgets/ColoredRadio\";\nimport RRule, { RRuleOptions } from \"../widgets/RRule\";\nimport { CachedCollection } from \"../Pim/helpers\";\n\ninterface PropsType {\n  collections: CachedCollection[];\n  initialCollection?: string;\n  item?: TaskType;\n  onSave: (item: TaskType, collectionUid: string, originalItem?: TaskType) => Promise<void>;\n  onDelete: (item: TaskType, collectionUid: string) => void;\n  onCancel: () => void;\n  history: History<any>;\n}\n\nexport default class TaskEdit extends React.PureComponent<PropsType> {\n  public state: {\n    uid: string;\n    title: string;\n    status: TaskStatusType;\n    priority: TaskPriorityType;\n    includeTime: boolean;\n    start?: Date;\n    due?: Date;\n    timezone: string | null;\n    rrule?: RRuleOptions;\n    location: string;\n    description: string;\n    tags: string[];\n    collectionUid: string;\n\n    error?: string;\n    showDeleteDialog: boolean;\n  };\n\n  constructor(props: PropsType) {\n    super(props);\n    this.state = {\n      uid: \"\",\n      title: \"\",\n      status: TaskStatusType.NeedsAction,\n      priority: TaskPriorityType.Undefined,\n      includeTime: false,\n      location: \"\",\n      description: \"\",\n      tags: [],\n      timezone: null,\n\n      collectionUid: \"\",\n      showDeleteDialog: false,\n    };\n\n    if (this.props.item !== undefined) {\n      const task = this.props.item;\n\n      this.state.uid = task.uid;\n      this.state.title = task.title ? task.title : \"\";\n      this.state.status = task.status ?? TaskStatusType.NeedsAction;\n      this.state.priority = task.priority ?? TaskPriorityType.Undefined;\n      if (task.startDate) {\n        this.state.includeTime = !task.startDate.isDate;\n        this.state.start = task.startDate.convertToZone(ICAL.Timezone.localTimezone).toJSDate();\n      }\n      if (task.dueDate) {\n        this.state.due = task.dueDate.convertToZone(ICAL.Timezone.localTimezone).toJSDate();\n      }\n      const rrule = task.rrule;\n      if (rrule) {\n        this.state.rrule = rrule.toJSON() as any;\n        if (this.state.rrule && rrule.until) {\n          this.state.rrule.until = rrule.until;\n        }\n      }\n      this.state.location = task.location ? task.location : \"\";\n      this.state.description = task.description ? task.description : \"\";\n      this.state.timezone = task.timezone;\n      this.state.tags = task.tags;\n    } else {\n      this.state.uid = uuid.v4();\n    }\n\n    this.state.timezone = this.state.timezone || getCurrentTimezone();\n\n    if (props.initialCollection) {\n      this.state.collectionUid = props.initialCollection;\n    } else if (props.collections[0]) {\n      this.state.collectionUid = props.collections[0].collection.uid;\n    }\n\n    this.onSubmit = this.onSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.toggleTime = this.toggleTime.bind(this);\n    this.toggleRecurring = this.toggleRecurring.bind(this);\n    this.handleRRuleChange = this.handleRRuleChange.bind(this);\n    this.onDeleteRequest = this.onDeleteRequest.bind(this);\n    this.handleCloseToast = this.handleCloseToast.bind(this);\n  }\n\n  public handleChange(name: string, value: string | number | string[]) {\n    this.setState({\n      [name]: value,\n    });\n\n  }\n\n  public handleInputChange(event: React.ChangeEvent<any>) {\n    const name = event.target.name;\n    const value = event.target.value;\n    this.handleChange(name, value);\n  }\n\n  public toggleTime() {\n    this.setState({ includeTime: !this.state.includeTime });\n  }\n\n  public handleCloseToast(_event?: React.SyntheticEvent, reason?: string) {\n    if (reason === \"clickaway\") {\n      return;\n    }\n\n    this.setState({ error: \"\" });\n  }\n\n  public toggleRecurring() {\n    const value = this.state.rrule ? undefined : { freq: \"WEEKLY\", interval: 1 };\n    this.setState({ rrule: value });\n  }\n\n  public handleRRuleChange(rrule: RRuleOptions): void {\n    this.setState({ rrule: rrule });\n  }\n\n  public onSubmit(e: React.FormEvent<any>) {\n    e.preventDefault();\n\n    if (this.state.rrule && !(this.state.start || this.state.due)) {\n      this.setState({ error: \"A recurring task must have either Hide Until or Due Date set!\" });\n      return;\n    }\n\n    function fromDate(date: Date | undefined, includeTime: boolean) {\n      if (!date) {\n        return undefined;\n      }\n      const ret = ICAL.Time.fromJSDate(date, false);\n      if (includeTime) {\n        return ret;\n      } else {\n        const data = ret.toJSON();\n        data.isDate = true;\n        return ICAL.Time.fromData(data);\n      }\n    }\n\n    const startDate = fromDate(this.state.start, this.state.includeTime);\n    const dueDate = fromDate(this.state.due, this.state.includeTime);\n\n    if (startDate && dueDate) {\n      if (startDate.compare(dueDate) >= 0) {\n        this.setState({ error: \"End time must be later than start time!\" });\n        return;\n      }\n    }\n\n    const task = (this.props.item) ?\n      this.props.item.clone()\n      :\n      new TaskType(null)\n      ;\n\n    task.uid = this.state.uid;\n    task.summary = this.state.title;\n    task.status = this.state.status;\n    task.priority = this.state.priority;\n    task.tags = this.state.tags;\n    if (startDate) {\n      task.startDate = startDate;\n    }\n    task.dueDate = dueDate;\n    if (this.state.rrule) {\n      task.rrule = new ICAL.Recur(this.state.rrule);\n    }\n    task.location = this.state.location;\n    task.description = this.state.description;\n    if (this.state.timezone) {\n      const timezone = timezoneLoadFromName(this.state.timezone);\n      if (timezone) {\n        if (task.startDate) {\n          task.startDate = task.startDate.convertToZone(timezone);\n        }\n        if (task.dueDate) {\n          task.dueDate = task.dueDate.convertToZone(timezone);\n        }\n        if (task.completionDate) {\n          task.completionDate = task.completionDate.convertToZone(timezone);\n        }\n      }\n    }\n\n    task.component.updatePropertyWithValue(\"last-modified\", ICAL.Time.now());\n\n    this.props.onSave(task, this.state.collectionUid, this.props.item)\n      .then(() => {\n        const nextTask = task.finished && task.getNextOccurence();\n        if (nextTask) {\n          return this.props.onSave(nextTask, this.state.collectionUid);\n        } else {\n          return Promise.resolve();\n        }\n      })\n      .then(() => {\n        this.props.history.goBack();\n      })\n      .catch(() => {\n        this.setState({ error: \"Could not save task\" });\n      });\n  }\n\n  public onDeleteRequest() {\n    this.setState({\n      showDeleteDialog: true,\n    });\n  }\n\n  public render() {\n    const styles = {\n      form: {\n      },\n      fullWidth: {\n        width: \"100%\",\n        boxSizing: \"border-box\" as any,\n        marginTop: 16,\n      },\n      submit: {\n        marginTop: 40,\n        marginBottom: 20,\n        textAlign: \"right\" as any,\n      },\n    };\n\n    const recurring = this.props.item && this.props.item.isRecurring();\n    const differentTimezone = this.state.timezone && (this.state.timezone !== getCurrentTimezone()) && timezoneLoadFromName(this.state.timezone);\n\n    return (\n      <React.Fragment>\n        <h2>\n          {this.props.item ? \"Edit Task\" : \"New Task\"}\n        </h2>\n        {recurring && (\n          <div>\n            <span style={{ color: \"red\" }}>IMPORTANT: </span>\n            This is a recurring task, for now, only editing the whole series\n            (by editing the first instance) is supported.\n          </div>\n        )}\n        <Toast open={!!this.state.error} severity=\"error\" onClose={this.handleCloseToast}>\n          ERROR! {this.state.error}\n        </Toast>\n        <form style={styles.form} onSubmit={this.onSubmit}>\n          <TextField\n            name=\"title\"\n            placeholder=\"Enter title\"\n            style={styles.fullWidth}\n            value={this.state.title}\n            onChange={this.handleInputChange}\n          />\n\n          <FormControl disabled={this.props.item !== undefined} style={styles.fullWidth}>\n            <InputLabel>\n              Saving to\n            </InputLabel>\n            <Select\n              name=\"collectionUid\"\n              value={this.state.collectionUid}\n              disabled={this.props.item !== undefined}\n              onChange={this.handleInputChange}\n            >\n              {this.props.collections.map((x) => (\n                <MenuItem key={x.collection.uid} value={x.collection.uid}>{x.metadata.name}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n\n          <FormControl style={styles.fullWidth}>\n            <InputLabel>\n              Status\n            </InputLabel>\n            <Select\n              name=\"status\"\n              value={this.state.status}\n              onChange={this.handleInputChange}\n            >\n              <MenuItem value={TaskStatusType.NeedsAction}>Needs action</MenuItem>\n              <MenuItem value={TaskStatusType.InProcess}>In progress</MenuItem>\n              <MenuItem value={TaskStatusType.Completed}>Completed</MenuItem>\n              <MenuItem value={TaskStatusType.Cancelled}>Cancelled</MenuItem>\n            </Select>\n          </FormControl>\n\n          <FormControl style={styles.fullWidth}>\n            <FormLabel>Priority</FormLabel>\n\n            <RadioGroup\n              row\n              value={mapPriority(this.state.priority)}\n              onChange={(e) => this.handleChange(\"priority\", Number(e.target.value))}\n            >\n              <ColoredRadio value={TaskPriorityType.Undefined} label=\"None\" color={colors.grey[600]} />\n              <ColoredRadio value={TaskPriorityType.Low} label=\"Low\" color={colors.blue[600]} />\n              <ColoredRadio value={TaskPriorityType.Medium} label=\"Medium\" color={colors.orange[600]} />\n              <ColoredRadio value={TaskPriorityType.High} label=\"High\" color={colors.red[600]} />\n            </RadioGroup>\n          </FormControl>\n\n          <FormControl style={styles.fullWidth}>\n            <FormHelperText>Hide until</FormHelperText>\n            <DateTimePicker\n              dateOnly={!this.state.includeTime}\n              placeholder=\"Hide until\"\n              value={this.state.start}\n              onChange={(date?: Date) => this.setState({ start: date })}\n            />\n            {differentTimezone && this.state.start && (\n              <FormHelperText>{ICAL.Time.fromJSDate(this.state.start, false).convertToZone(differentTimezone!).toJSDate().toString()}</FormHelperText>\n            )}\n          </FormControl>\n\n          <FormControl style={styles.fullWidth}>\n            <FormHelperText>Due</FormHelperText>\n            <DateTimePicker\n              dateOnly={!this.state.includeTime}\n              placeholder=\"Due\"\n              value={this.state.due}\n              onChange={(date?: Date) => this.setState({ due: date })}\n            />\n            {differentTimezone && this.state.due && (\n              <FormHelperText>{ICAL.Time.fromJSDate(this.state.due, false).convertToZone(differentTimezone!).toJSDate().toString()}</FormHelperText>\n            )}\n          </FormControl>\n\n          <FormGroup style={styles.fullWidth}>\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"includeTime\"\n                  checked={this.state.includeTime}\n                  onChange={this.toggleTime}\n                  color=\"primary\"\n                />\n              }\n              label=\"Include time\"\n            />\n          </FormGroup>\n\n          {(this.state.includeTime) && (\n            <TimezonePicker style={styles.fullWidth} value={this.state.timezone} onChange={(zone) => this.setState({ timezone: zone })} />\n          )}\n\n          <FormGroup>\n            <FormControlLabel\n              control={\n                <Switch\n                  name=\"recurring\"\n                  checked={!!this.state.rrule}\n                  onChange={this.toggleRecurring}\n                  color=\"primary\"\n                />\n              }\n              label=\"Recurring\"\n            />\n          </FormGroup>\n          {this.state.rrule &&\n            <RRule\n              onChange={this.handleRRuleChange}\n              rrule={this.state.rrule ? this.state.rrule : { freq: \"DAILY\", interval: 1 }}\n            />\n          }\n\n          <TextField\n            name=\"location\"\n            placeholder=\"Add location\"\n            style={styles.fullWidth}\n            value={this.state.location}\n            onChange={this.handleInputChange}\n          />\n\n          <TextField\n            name=\"description\"\n            placeholder=\"Add description\"\n            multiline\n            style={styles.fullWidth}\n            value={this.state.description}\n            onChange={this.handleInputChange}\n          />\n\n          <Autocomplete\n            style={styles.fullWidth}\n            freeSolo\n            multiple\n            options={TaskTags}\n            value={this.state.tags}\n            onChange={(_e, value) => this.handleChange(\"tags\", value)}\n            renderInput={(params) => (\n              <TextField\n                {...params}\n                variant=\"standard\"\n                label=\"Tags\"\n                fullWidth\n              />\n            )}\n          />\n\n          <div style={styles.submit}>\n            <Button\n              variant=\"contained\"\n              onClick={this.props.onCancel}\n            >\n              <IconCancel style={{ marginRight: 8 }} />\n              Cancel\n            </Button>\n\n            {this.props.item &&\n              <Button\n                variant=\"contained\"\n                style={{ marginLeft: 15, backgroundColor: colors.red[500], color: \"white\" }}\n                onClick={this.onDeleteRequest}\n              >\n                <IconDelete style={{ marginRight: 8 }} />\n                Delete\n              </Button>\n            }\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ marginLeft: 15 }}\n            >\n              <IconSave style={{ marginRight: 8 }} />\n              Save\n            </Button>\n          </div>\n        </form>\n\n        <ConfirmationDialog\n          title=\"Delete Confirmation\"\n          labelOk=\"Delete\"\n          open={this.state.showDeleteDialog}\n          onOk={() => this.props.onDelete(this.props.item!, this.props.initialCollection!)}\n          onCancel={() => this.setState({ showDeleteDialog: false })}\n        >\n          Are you sure you would like to delete this task?\n        </ConfirmationDialog>\n      </React.Fragment>\n    );\n  }\n}\n","// SPDX-FileCopyrightText: © 2020 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router\";\n\nimport * as Etebase from \"etebase\";\n\nimport { Button, useTheme } from \"@material-ui/core\";\nimport IconEdit from \"@material-ui/icons/Edit\";\nimport IconChangeHistory from \"@material-ui/icons/ChangeHistory\";\n\nimport { TaskType, PimType } from \"../pim-types\";\nimport { useCredentials } from \"../credentials\";\nimport { useItems, useCollections } from \"../etebase-helpers\";\nimport { routeResolver } from \"../App\";\nimport TaskList from \"./TaskList\";\nimport Task from \"./Task\";\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\nimport TaskEdit from \"./TaskEdit\";\nimport PageNotFound, { PageNotFoundRoute } from \"../PageNotFound\";\n\nimport { CachedCollection, getItemNavigationUid, getDecryptCollectionsFunction, getDecryptItemsFunction, PimFab, itemSave, itemDelete } from \"../Pim/helpers\";\nimport ItemChangeHistory from \"../Pim/ItemChangeHistory\";\n\nconst colType = \"etebase.vtodo\";\n\nconst decryptCollections = getDecryptCollectionsFunction(colType);\nconst decryptItems = getDecryptItemsFunction(colType, TaskType.parse);\n\nexport default function TasksMain() {\n  const [entries, setEntries] = React.useState<Map<string, Map<string, TaskType>>>();\n  const [cachedCollections, setCachedCollections] = React.useState<CachedCollection[]>();\n  const theme = useTheme();\n  const history = useHistory();\n  const etebase = useCredentials()!;\n  const collections = useCollections(etebase, colType);\n  const items = useItems(etebase, colType);\n\n  React.useEffect(() => {\n    if (!collections || !items) {\n      return;\n    }\n    (async () => {\n      const colEntries = await decryptCollections(collections);\n      const entries = await decryptItems(items);\n\n      setCachedCollections(colEntries);\n      setEntries(entries);\n    })();\n  }, [items, collections]);\n\n  if (!entries || !cachedCollections) {\n    return (\n      <LoadingIndicator />\n    );\n  }\n\n  async function onItemSave(item: PimType, collectionUid: string, originalItem?: PimType): Promise<void> {\n    const collection = collections!.find((x) => x.uid === collectionUid)!;\n    await itemSave(etebase, collection, items!, item, collectionUid, originalItem);\n  }\n\n  async function onItemDelete(item: PimType, collectionUid: string) {\n    const collection = collections!.find((x) => x.uid === collectionUid)!;\n    await itemDelete(etebase, collection, items!, item, collectionUid);\n\n    history.push(routeResolver.getRoute(\"pim.tasks\"));\n  }\n\n  function onCancel() {\n    history.goBack();\n  }\n\n  const flatEntries = [];\n  for (const col of entries.values()) {\n    for (const item of col.values()) {\n      flatEntries.push(item);\n    }\n  }\n\n  const styles = {\n    button: {\n      marginLeft: theme.spacing(1),\n    },\n    leftIcon: {\n      marginRight: theme.spacing(1),\n    },\n  };\n\n  return (\n    <Switch>\n      <Route\n        path={routeResolver.getRoute(\"pim.tasks\")}\n        exact\n      >\n        <TaskList\n          entries={flatEntries}\n          collections={cachedCollections}\n          onItemClick={(item: TaskType) => history.push(\n            routeResolver.getRoute(\"pim.tasks._id\", { itemUid: getItemNavigationUid(item) })\n          )}\n          onItemSave={onItemSave}\n        />\n        <PimFab\n          onClick={() => history.push(\n            routeResolver.getRoute(\"pim.tasks.new\")\n          )}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"pim.tasks.new\")}\n        exact\n      >\n        <TaskEdit\n          collections={cachedCollections}\n          onSave={onItemSave}\n          onDelete={onItemDelete}\n          onCancel={onCancel}\n          history={history}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"pim.tasks._id.log\")}\n        render={({ match }) => {\n          // We have this path outside because we don't want the item existing check\n          const [colUid, itemUid] = match.params.itemUid.split(\"|\");\n          const cachedCollection = cachedCollections!.find((x) => x.collection.uid === colUid)!;\n          if (!cachedCollection) {\n            return (<PageNotFound />);\n          }\n\n          return (\n            <ItemChangeHistory collection={cachedCollection} itemUid={itemUid} />\n          );\n        }}\n      />\n      <Route\n        path={routeResolver.getRoute(\"pim.tasks._id\")}\n        render={({ match }) => {\n          const [colUid, itemUid] = match.params.itemUid.split(\"|\");\n          const item = entries.get(colUid)?.get(itemUid);\n          if (!item) {\n            return (<PageNotFound />);\n          }\n\n          const collection = collections!.find((x) => x.uid === colUid)!;\n          const readOnly = collection.accessLevel === Etebase.CollectionAccessLevel.ReadOnly;\n\n          return (\n            <Switch>\n              <Route\n                path={routeResolver.getRoute(\"pim.tasks._id.edit\")}\n                exact\n              >\n                <TaskEdit\n                  key={itemUid}\n                  initialCollection={item.collectionUid}\n                  item={item}\n                  collections={cachedCollections}\n                  onSave={onItemSave}\n                  onDelete={onItemDelete}\n                  onCancel={onCancel}\n                  history={history}\n                />\n              </Route>\n              <Route\n                path={routeResolver.getRoute(\"pim.tasks._id\")}\n                exact\n              >\n                <div style={{ textAlign: \"right\", marginBottom: 15 }}>\n                  <Button\n                    variant=\"contained\"\n                    style={styles.button}\n                    onClick={() =>\n                      history.push(routeResolver.getRoute(\"pim.tasks._id.log\", { itemUid: getItemNavigationUid(item) }))\n                    }\n                  >\n                    <IconChangeHistory style={styles.leftIcon} />\n                    Change History\n                  </Button>\n\n                  <Button\n                    color=\"secondary\"\n                    variant=\"contained\"\n                    disabled={readOnly}\n                    style={{ ...styles.button, marginLeft: 15 }}\n                    onClick={() =>\n                      history.push(routeResolver.getRoute(\"pim.tasks._id.edit\", { itemUid: getItemNavigationUid(item) }))\n                    }\n                  >\n                    <IconEdit style={styles.leftIcon} />\n                    Edit\n                  </Button>\n\n                </div>\n                <Task item={item} />\n              </Route>\n              <PageNotFoundRoute />\n            </Switch>\n          );\n        }}\n      />\n      <PageNotFoundRoute />\n    </Switch>\n  );\n}\n\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\ninterface PropsType {\n  color: string;\n  size?: number | string;\n  style?: React.CSSProperties;\n}\n\nexport default function ColorBox(props: PropsType) {\n  const size = props.size ?? 64;\n  const style = { ...props.style, backgroundColor: props.color, width: size, height: size };\n  return (\n    <div style={style} />\n  );\n}","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport { Link, useHistory } from \"react-router-dom\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport IconAdd from \"@material-ui/icons/Add\";\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\n\nimport { List, ListItem } from \"../widgets/List\";\n\nimport AppBarOverride from \"../widgets/AppBarOverride\";\nimport Container from \"../widgets/Container\";\n\nimport { routeResolver } from \"../App\";\nimport { CachedCollection, defaultColor } from \"../Pim/helpers\";\nimport ColorBox from \"../widgets/ColorBox\";\n\ninterface PropsType {\n  collections: CachedCollection[];\n}\n\nexport default function CollectionList(props: PropsType) {\n  const history = useHistory();\n\n  const collectionMap = {\n    \"etebase.vcard\": [],\n    \"etebase.vevent\": [],\n    \"etebase.vtodo\": [],\n  };\n\n  function colClicked(colUid: string) {\n    history.push(routeResolver.getRoute(\"collections._id\", { colUid }));\n  }\n\n  for (const col of props.collections) {\n    const colType = col.collectionType;\n    if (collectionMap[colType]) {\n      const supportsColor = ([\"etebase.vevent\", \"etebase.vtodo\"].includes(colType));\n      const colorBox = (supportsColor) ? (\n        <ColorBox size={24} color={col.metadata.color || defaultColor} />\n      ) : undefined;\n\n      collectionMap[colType].push((\n        <ListItem key={col.collection.uid} rightIcon={colorBox} insetChildren\n          onClick={() => colClicked(col.collection.uid)}>\n          {col.metadata.name}\n        </ListItem>\n      ));\n    }\n  }\n\n  return (\n    <Container>\n      <AppBarOverride title=\"Collections\">\n        <IconButton\n          component={Link}\n          title=\"New\"\n          {...{ to: routeResolver.getRoute(\"collections.new\") }}\n        >\n          <IconAdd />\n        </IconButton>\n      </AppBarOverride>\n      <List>\n        <ListItem\n          primaryText=\"Address Books\"\n          leftIcon={<ContactsIcon />}\n          nestedItems={collectionMap[\"etebase.vcard\"]}\n        />\n\n        <ListItem\n          primaryText=\"Calendars\"\n          leftIcon={<CalendarTodayIcon />}\n          nestedItems={collectionMap[\"etebase.vevent\"]}\n        />\n\n        <ListItem\n          primaryText=\"Tasks\"\n          leftIcon={<FormatListBulletedIcon />}\n          nestedItems={collectionMap[\"etebase.vtodo\"]}\n        />\n      </List>\n    </Container>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nimport Dropzone from \"react-dropzone\";\n\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\n\nimport { arrayToChunkIterator } from \"../helpers\";\n\nimport * as uuid from \"uuid\";\nimport * as ICAL from \"ical.js\";\nimport { ContactType, EventType, TaskType, PimType } from \"../pim-types\";\nimport { useCredentials } from \"../credentials\";\nimport { CachedCollection } from \"../Pim/helpers\";\nimport { getCollectionManager } from \"../etebase-helpers\";\nimport { useAsyncDispatch } from \"../store\";\nimport { itemBatch } from \"../store/actions\";\n\nconst CHUNK_SIZE = 40;\n\ninterface PropsType {\n  collection: CachedCollection;\n  open: boolean;\n  onClose?: () => void;\n}\n\nexport default function ImportDialog(props: PropsType) {\n  const etebase = useCredentials()!;\n  const dispatch = useAsyncDispatch();\n  const [loading, setLoading] = React.useState(false);\n  const [itemsProcessed, setItemsProccessed] = React.useState<number>();\n\n  function onFileDropCommon(itemsCreator: (fileText: string) => PimType[], acceptedFiles: File[], rejectedFiles: File[]) {\n    // XXX: implement handling of rejectedFiles\n    const reader = new FileReader();\n\n    reader.onabort = () => {\n      setLoading(false);\n      console.error(\"Import Aborted\");\n      alert(\"file reading was aborted\");\n    };\n    reader.onerror = (e) => {\n      setLoading(false);\n      console.error(e);\n      alert(\"file reading has failed\");\n    };\n    reader.onload = async () => {\n      try {\n        const fileText = reader.result as string;\n        const items = itemsCreator(fileText);\n\n        const { collection } = props.collection;\n        const colMgr = getCollectionManager(etebase);\n        const itemMgr = colMgr.getItemManager(collection);\n\n        const eteItems = [];\n        for (const item of items) {\n          const mtime = (new Date()).getTime();\n          const meta = {\n            mtime,\n            name: item.uid,\n          };\n          const content = item.toIcal();\n\n          const eteItem = await itemMgr.create(meta, content);\n          eteItems.push(eteItem);\n        }\n\n        const chunks = arrayToChunkIterator(eteItems, CHUNK_SIZE);\n        for (const chunk of chunks) {\n          await dispatch(itemBatch(collection, itemMgr, chunk));\n        }\n\n        setItemsProccessed(items.length);\n      } catch (e) {\n        console.error(e);\n        alert(\"An error has occurred, please contact developers.\");\n        throw e;\n      } finally {\n        if (props.onClose) {\n          setLoading(false);\n        }\n      }\n    };\n\n    if (acceptedFiles.length > 0) {\n      setLoading(true);\n      acceptedFiles.forEach((file) => {\n        reader.readAsText(file);\n      });\n    } else {\n      alert(\"Failed importing file. Is the file type supported?\");\n      console.log(\"Failed importing files. Rejected:\", rejectedFiles);\n    }\n  }\n\n  function onFileDropContact(acceptedFiles: File[], rejectedFiles: File[]) {\n    const itemsCreator = (fileText: string) => {\n      const mainComp = ICAL.parse(fileText);\n      return mainComp.map((comp) => {\n        const ret = new ContactType(new ICAL.Component(comp));\n        if (!ret.uid) {\n          ret.uid = uuid.v4();\n        }\n        return ret;\n      });\n    };\n\n    onFileDropCommon(itemsCreator, acceptedFiles, rejectedFiles);\n  }\n\n  function onFileDropEvent(acceptedFiles: File[], rejectedFiles: File[]) {\n    const itemsCreator = (fileText: string) => {\n      const calendarComp = new ICAL.Component(ICAL.parse(fileText));\n      return calendarComp.getAllSubcomponents(\"vevent\").map((comp) => {\n        const ret = new EventType(comp);\n        if (!ret.uid) {\n          ret.uid = uuid.v4();\n        }\n        return ret;\n      });\n    };\n\n    onFileDropCommon(itemsCreator, acceptedFiles, rejectedFiles);\n  }\n\n  function onFileDropTask(acceptedFiles: File[], rejectedFiles: File[]) {\n    const itemsCreator = (fileText: string) => {\n      const calendarComp = new ICAL.Component(ICAL.parse(fileText));\n      return calendarComp.getAllSubcomponents(\"vtodo\").map((comp) => {\n        const ret = new TaskType(comp);\n        if (!ret.uid) {\n          ret.uid = uuid.v4();\n        }\n        return ret;\n      });\n    };\n\n    onFileDropCommon(itemsCreator, acceptedFiles, rejectedFiles);\n  }\n\n  function onClose() {\n    if (loading) {\n      return;\n    }\n\n    if (props.onClose) {\n      props.onClose();\n    }\n  }\n\n  const { collectionType } = props.collection;\n  let acceptTypes;\n  let dropFunction;\n\n  if (collectionType === \"etebase.vcard\") {\n    acceptTypes = [\"text/vcard\", \"text/directory\", \"text/x-vcard\", \".vcf\"];\n    dropFunction = onFileDropContact;\n  } else if (collectionType === \"etebase.vevent\") {\n    acceptTypes = [\"text/calendar\", \".ics\", \".ical\"];\n    dropFunction = onFileDropEvent;\n  } else if (collectionType === \"etebase.vtodo\") {\n    acceptTypes = [\"text/calendar\", \".ics\", \".ical\"];\n    dropFunction = onFileDropTask;\n  }\n\n  return (\n    <React.Fragment>\n      <Dialog\n        open={props.open}\n        onClose={onClose}\n      >\n        <DialogTitle>Import entries from file?</DialogTitle>\n        <DialogContent>\n          {(itemsProcessed !== undefined) ? (\n            <p>Imported {itemsProcessed} items.</p>\n          ) : (loading ?\n            <LoadingIndicator style={{ display: \"block\", margin: \"auto\" }} />\n            :\n            <Dropzone\n              onDrop={dropFunction}\n              multiple={false}\n              accept={acceptTypes}\n            >\n              {({ getRootProps, getInputProps }) => (\n                <section>\n                  <div {...getRootProps()}>\n                    <input {...getInputProps()} />\n                    <DialogContentText id=\"alert-dialog-description\">\n                      To import entries from a file, drag 'n' drop it here, or click to open the file selector.\n                    </DialogContentText>\n                  </div>\n                </section>\n              )}\n            </Dropzone>\n          )}\n        </DialogContent>\n        <DialogActions>\n          <Button disabled={loading} onClick={onClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </React.Fragment>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport ContactsIcon from \"@material-ui/icons/Contacts\";\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\nimport FormatListBulletedIcon from \"@material-ui/icons/FormatListBulleted\";\n\nimport { List, ListItem } from \"../widgets/List\";\n\nimport AppBarOverride from \"../widgets/AppBarOverride\";\nimport Container from \"../widgets/Container\";\n\nimport { CachedCollection, defaultColor } from \"../Pim/helpers\";\nimport ColorBox from \"../widgets/ColorBox\";\nimport ImportDialog from \"./ImportDialog\";\n\ninterface PropsType {\n  collections: CachedCollection[];\n}\n\nexport default function CollectionImport(props: PropsType) {\n  const [selectedCollection, setSelectedCollection] = React.useState<CachedCollection>();\n\n  const collectionMap = {\n    \"etebase.vcard\": [],\n    \"etebase.vevent\": [],\n    \"etebase.vtodo\": [],\n  };\n\n  function colClicked(colUid: string) {\n    const collection = props.collections.find((x) => x.collection.uid === colUid);\n    setSelectedCollection(collection);\n  }\n\n  for (const col of props.collections) {\n    const colType = col.collectionType;\n    if (collectionMap[colType]) {\n      const supportsColor = ([\"etebase.vevent\", \"etebase.vtodo\"].includes(colType));\n      const colorBox = (supportsColor) ? (\n        <ColorBox size={24} color={col.metadata.color || defaultColor} />\n      ) : undefined;\n\n      collectionMap[colType].push((\n        <ListItem key={col.collection.uid} rightIcon={colorBox} insetChildren\n          onClick={() => colClicked(col.collection.uid)}>\n          {col.metadata.name}\n        </ListItem>\n      ));\n    }\n  }\n\n  return (\n    <Container>\n      <AppBarOverride title=\"Import\" />\n      <List>\n        <ListItem\n          primaryText=\"Address Books\"\n          leftIcon={<ContactsIcon />}\n          nestedItems={collectionMap[\"etebase.vcard\"]}\n        />\n\n        <ListItem\n          primaryText=\"Calendars\"\n          leftIcon={<CalendarTodayIcon />}\n          nestedItems={collectionMap[\"etebase.vevent\"]}\n        />\n\n        <ListItem\n          primaryText=\"Tasks\"\n          leftIcon={<FormatListBulletedIcon />}\n          nestedItems={collectionMap[\"etebase.vtodo\"]}\n        />\n      </List>\n      {selectedCollection && (\n        <ImportDialog\n          key={(!selectedCollection).toString()}\n          collection={selectedCollection}\n          open\n          onClose={() => setSelectedCollection(undefined)}\n        />\n      )}\n    </Container>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport ColorBox from \"./ColorBox\";\nimport { TextField, ButtonBase } from \"@material-ui/core\";\n\ninterface PropsType {\n  color: string;\n  defaultColor: string;\n  label?: string;\n  placeholder?: string;\n  error?: string;\n  onChange: (color: string) => void;\n}\n\n\nexport default function ColorPicker(props: PropsType) {\n  const colors = [\n    [\n      \"#F44336\",\n      \"#E91E63\",\n      \"#673AB7\",\n      \"#3F51B5\",\n      \"#2196F3\",\n    ],\n    [\n      \"#03A9F4\",\n      \"#4CAF50\",\n      \"#8BC34A\",\n      \"#FFEB3B\",\n      \"#FF9800\",\n    ],\n  ];\n  const color = props.color;\n\n  return (\n    <div>\n      {colors.map((colorGroup, idx) => (\n        <div key={idx} style={{ flex: 1, flexDirection: \"row\", justifyContent: \"space-between\" }}>\n          {colorGroup.map((colorOption) => (\n            <ButtonBase\n              style={{ margin: 5, borderRadius: 36 / 2 }}\n              key={colorOption}\n              onClick={() => props.onChange(colorOption)}\n            >\n              <ColorBox size={36} style={{ borderRadius: 36 / 2 }} color={colorOption} />\n            </ButtonBase>\n          ))}\n        </div>\n      ))}\n      <div style={{ flex: 1, alignItems: \"center\", flexDirection: \"row\", margin: 5 }}>\n        <ColorBox\n          style={{ display: \"inline-block\" }}\n          size={36}\n          color={color}\n        />\n        <TextField\n          style={{ marginLeft: 10, flex: 1 }}\n          error={!!props.error}\n          onChange={(event: React.FormEvent<{ value: string }>) => props.onChange(event.currentTarget.value)}\n          placeholder={props.placeholder ?? \"E.g. #aabbcc\"}\n          label={props.label ?? \"Color\"}\n          value={color}\n          helperText={props.error}\n        />\n      </div>\n    </div>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport IconDelete from \"@material-ui/icons/Delete\";\nimport IconCancel from \"@material-ui/icons/Clear\";\nimport IconSave from \"@material-ui/icons/Save\";\nimport * as colors from \"@material-ui/core/colors\";\n\nimport AppBarOverride from \"../widgets/AppBarOverride\";\nimport Container from \"../widgets/Container\";\nimport ConfirmationDialog from \"../widgets/ConfirmationDialog\";\n\nimport * as Etebase from \"etebase\";\n\nimport ColorPicker from \"../widgets/ColorPicker\";\nimport { defaultColor } from \"../Pim/helpers\";\nimport { CachedCollection } from \"../Pim/helpers\";\nimport { useCredentials } from \"../credentials\";\nimport { getCollectionManager } from \"../etebase-helpers\";\n\ninterface PropsType {\n  collection?: CachedCollection;\n  onSave: (collection: Etebase.Collection) => void;\n  onDelete: (collection: Etebase.Collection) => void;\n  onCancel: () => void;\n}\n\ninterface FormErrors {\n  name?: string;\n  color?: string;\n}\n\nexport default function CollectionEdit(props: PropsType) {\n  const [errors, setErrors] = React.useState<FormErrors>({});\n  const [showDeleteDialog, setShowDeleteDialog] = React.useState(false);\n  const [colType, setColType] = React.useState(\"\");\n  const [info, setInfo] = React.useState<Etebase.ItemMetadata>();\n  const [selectedColor, setSelectedColor] = React.useState(\"\");\n  const etebase = useCredentials()!;\n\n  React.useEffect(() => {\n    if (props.collection !== undefined) {\n      setColType(props.collection.collectionType);\n      setInfo(props.collection.metadata);\n      if (props.collection.metadata.color) {\n        setSelectedColor(props.collection.metadata.color);\n      }\n    } else {\n      setColType(\"etebase.vcard\");\n      setInfo({\n        name: \"\",\n        description: \"\",\n      });\n    }\n  }, [props.collection]);\n\n  if (info === undefined) {\n    return <React.Fragment />;\n  }\n\n  async function onSubmit(e: React.FormEvent<any>) {\n    e.preventDefault();\n    const saveErrors: FormErrors = {};\n    const fieldRequired = \"This field is required!\";\n\n    const { onSave } = props;\n\n    if (!info) {\n      throw new Error(\"Got undefined info. Should never happen.\");\n    }\n\n    const name = info.name;\n    const color = selectedColor;\n\n    if (!name) {\n      saveErrors.name = fieldRequired;\n    }\n\n    if (color && !/^#[0-9a-f]{6}([0-9a-f]{2})?$/i.test(color)) {\n      saveErrors.color = \"Must be of the form #RRGGBB or #RRGGBBAA or empty\";\n    }\n\n    setErrors(saveErrors);\n    if (Object.keys(saveErrors).length > 0) {\n      return;\n    }\n\n    const colMgr = getCollectionManager(etebase);\n    const mtime = (new Date()).getTime();\n    const meta = { ...info, color, mtime };\n    let collection;\n    if (props.collection) {\n      collection = props.collection.collection;\n      collection.setMeta(meta);\n    } else {\n      collection = await colMgr.create(colType, meta, \"\");\n    }\n\n    onSave(collection);\n  }\n\n  function onDeleteRequest() {\n    setShowDeleteDialog(true);\n  }\n\n  const { collection, onDelete, onCancel } = props;\n  const item = collection?.metadata;\n\n  const pageTitle = (item !== undefined) ? item.name! : \"New Collection\";\n\n  const styles = {\n    fullWidth: {\n      width: \"100%\",\n    },\n    submit: {\n      marginTop: 40,\n      marginBottom: 20,\n      textAlign: \"right\" as any,\n    },\n  };\n\n  const colTypes = {\n    \"etebase.vcard\": \"Address Book\",\n    \"etebase.vevent\": \"Calendar\",\n    \"etebase.vtodo\": \"Task List\",\n  };\n  let collectionColorBox: React.ReactNode;\n  switch (colType) {\n    case \"etebase.vevent\":\n    case \"etebase.vtodo\":\n      collectionColorBox = (\n        <ColorPicker\n          defaultColor={defaultColor}\n          color={selectedColor}\n          onChange={(color: string) => setSelectedColor(color)}\n          error={errors.color}\n        />\n      );\n      break;\n  }\n\n  return (\n    <>\n      <AppBarOverride title={pageTitle} />\n      <Container style={{ maxWidth: \"30rem\" }}>\n        <form onSubmit={onSubmit}>\n          <FormControl disabled={props.collection !== undefined} style={styles.fullWidth}>\n            <InputLabel>\n              Collection type\n            </InputLabel>\n            <Select\n              name=\"type\"\n              required\n              value={colType}\n              onChange={(event: React.ChangeEvent<{ value: string }>) => setColType(event.target.value)}\n            >\n              {Object.keys(colTypes).map((x) => (\n                <MenuItem key={x} value={x}>{colTypes[x]}</MenuItem>\n              ))}\n            </Select>\n          </FormControl>\n          <TextField\n            name=\"name\"\n            required\n            label=\"Name of this collection\"\n            value={info.name}\n            onChange={(event: React.ChangeEvent<{ value: string }>) => setInfo({ ...info, name: event.target.value })}\n            style={styles.fullWidth}\n            margin=\"normal\"\n            error={!!errors.name}\n            helperText={errors.name}\n          />\n          <TextField\n            name=\"description\"\n            label=\"Description (optional)\"\n            value={info.description}\n            onChange={(event: React.ChangeEvent<{ value: string }>) => setInfo({ ...info, description: event.target.value })}\n            style={styles.fullWidth}\n            margin=\"normal\"\n          />\n          {collectionColorBox}\n\n          <div style={styles.submit}>\n            <Button\n              variant=\"contained\"\n              onClick={onCancel}\n            >\n              <IconCancel style={{ marginRight: 8 }} />\n              Cancel\n            </Button>\n\n            {props.collection &&\n              <Button\n                variant=\"contained\"\n                style={{ marginLeft: 15, backgroundColor: colors.red[500], color: \"white\" }}\n                onClick={onDeleteRequest}\n              >\n                <IconDelete style={{ marginRight: 8 }} />\n                Delete\n              </Button>\n            }\n\n            <Button\n              type=\"submit\"\n              variant=\"contained\"\n              color=\"secondary\"\n              style={{ marginLeft: 15 }}\n            >\n              <IconSave style={{ marginRight: 8 }} />\n              Save\n            </Button>\n          </div>\n        </form>\n      </Container>\n      <ConfirmationDialog\n        title=\"Delete Confirmation\"\n        labelOk=\"Delete\"\n        open={showDeleteDialog}\n        onOk={() => onDelete(props.collection?.collection!)}\n        onCancel={() => setShowDeleteDialog(false)}\n      >\n        Are you sure you would like to delete this collection?\n      </ConfirmationDialog>\n    </>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport * as Etebase from \"etebase\";\n\ninterface PropsType {\n  publicKey: Uint8Array;\n}\n\nexport default function PrettyFingerprint(props: PropsType) {\n  const prettyFingerprint = Etebase.getPrettyFingerprint(props.publicKey);\n\n  return (\n    <pre>{prettyFingerprint}</pre>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport * as Etebase from \"etebase\";\n\nimport TextField from \"@material-ui/core/TextField\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\n\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\nimport ConfirmationDialog from \"../widgets/ConfirmationDialog\";\nimport PrettyFingerprint from \"../widgets/PrettyFingerprint\";\nimport { CachedCollection } from \"../Pim/helpers\";\nimport { useCredentials } from \"../credentials\";\n\ninterface PropsType {\n  collection: CachedCollection;\n  onOk: (username: string, publicKey: Uint8Array, accessLevel: Etebase.CollectionAccessLevel) => void;\n  onClose: () => void;\n}\n\nexport default function CollectionMemberAddDialog(props: PropsType) {\n  const etebase = useCredentials()!;\n  const [addUser, setAddUser] = React.useState(\"\");\n  const [publicKey, setPublicKey] = React.useState<Uint8Array>();\n  const [readOnly, setReadOnly] = React.useState(false);\n  const [userChosen, setUserChosen] = React.useState(false);\n  const [error, setError] = React.useState<Error>();\n\n  async function onAddRequest(_user: string) {\n    setUserChosen(true);\n    const inviteMgr = etebase.getInvitationManager();\n    try {\n      const userProfile = await inviteMgr.fetchUserProfile(addUser);\n      setPublicKey(userProfile.pubkey);\n    } catch (e) {\n      setError(e);\n    }\n  }\n\n  function onOk() {\n    props.onOk(addUser, publicKey!, readOnly ? Etebase.CollectionAccessLevel.ReadOnly : Etebase.CollectionAccessLevel.ReadWrite);\n  }\n\n  const { onClose } = props;\n\n  if (error) {\n    return (\n      <>\n        <ConfirmationDialog\n          title=\"Error adding member\"\n          labelOk=\"OK\"\n          open\n          onOk={onClose}\n          onCancel={onClose}\n        >\n          User ({addUser}) not found.\n        </ConfirmationDialog>\n      </>\n    );\n  }\n\n  if (publicKey) {\n    return (\n      <>\n        <ConfirmationDialog\n          title=\"Verify security fingerprint\"\n          labelOk=\"OK\"\n          open\n          onOk={onOk}\n          onCancel={onClose}\n        >\n          <p>\n            Verify {addUser}'s security fingerprint to ensure the encryption is secure.\n          </p>\n          <div style={{ textAlign: \"center\" }}>\n            <PrettyFingerprint publicKey={publicKey} />\n          </div>\n        </ConfirmationDialog>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <ConfirmationDialog\n          title=\"Invite user\"\n          labelOk=\"OK\"\n          open={!userChosen}\n          onOk={onAddRequest}\n          onCancel={onClose}\n        >\n          {userChosen ?\n            <LoadingIndicator />\n            :\n            <>\n              <TextField\n                name=\"addUser\"\n                placeholder=\"Username\"\n                style={{ width: \"100%\" }}\n                value={addUser}\n                onChange={(ev) => setAddUser(ev.target.value)}\n              />\n              <FormControlLabel\n                control={\n                  <Checkbox\n                    checked={readOnly}\n                    onChange={(event) => setReadOnly(event.target.checked)}\n                  />\n                }\n                label=\"Read only?\"\n              />\n            </>\n          }\n        </ConfirmationDialog>\n      </>\n    );\n  }\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport * as Etebase from \"etebase\";\n\nimport { List, ListItem } from \"../widgets/List\";\n\nimport IconMemberAdd from \"@material-ui/icons/PersonAdd\";\nimport VisibilityIcon from \"@material-ui/icons/Visibility\";\nimport AdminIcon from \"@material-ui/icons/SupervisedUserCircle\";\n\nimport AppBarOverride from \"../widgets/AppBarOverride\";\nimport Container from \"../widgets/Container\";\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\nimport ConfirmationDialog from \"../widgets/ConfirmationDialog\";\n\nimport { useCredentials } from \"../credentials\";\nimport { getCollectionManager } from \"../etebase-helpers\";\nimport { CachedCollection } from \"../Pim/helpers\";\n\nimport CollectionMemberAddDialog from \"./CollectionMemberAddDialog\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { pushMessage } from \"../store/actions\";\nimport { useDispatch } from \"react-redux\";\n\ninterface PropsType {\n  collection: CachedCollection;\n}\n\nexport default function CollectionMembers(props: PropsType) {\n  const etebase = useCredentials()!;\n  const dispatch = useDispatch();\n  const [members, setMembers] = React.useState<Etebase.CollectionMember[]>();\n  const [revokeUser, setRevokeUser] = React.useState<Etebase.CollectionMember | null>(null);\n  const [addMemberOpen, setAddMemberOpen] = React.useState(false);\n  const [error, setError] = React.useState<Error>();\n\n  const { collection, metadata } = props.collection;\n\n  const revokeUserIsAdmin = revokeUser?.accessLevel === Etebase.CollectionAccessLevel.Admin;\n\n  async function fetchMembers() {\n    const colMgr = getCollectionManager(etebase);\n    const memberManager = colMgr.getMemberManager(collection);\n    try {\n      const ret: Etebase.CollectionMember[] = [];\n      let iterator: string | null = null;\n      let done = false;\n      while (!done) {\n        const members = await memberManager.list({ iterator, limit: 30 });\n        iterator = members.iterator as string;\n        done = members.done;\n\n        for (const member of members.data) {\n          ret.push(member);\n        }\n      }\n      setMembers(ret);\n    } catch (e) {\n      setError(e);\n    }\n  }\n\n  React.useEffect(() => {\n    fetchMembers();\n  }, []);\n\n  async function onRevokeDo() {\n    const colMgr = getCollectionManager(etebase);\n    const memberManager = colMgr.getMemberManager(collection);\n    await memberManager.remove(revokeUser!.username);\n    await fetchMembers();\n    setRevokeUser(null);\n    dispatch(pushMessage({ message: \"Removed member\", severity: \"success\" }));\n  }\n\n  async function onMemberAdd(username: string, pubkey: Uint8Array, accessLevel: Etebase.CollectionAccessLevel) {\n    const inviteMgr = etebase.getInvitationManager();\n    await inviteMgr.invite(collection, username, pubkey, accessLevel);\n    await fetchMembers();\n    setAddMemberOpen(false);\n    dispatch(pushMessage({ message: \"Invitation sent\", severity: \"success\" }));\n  }\n\n  return (\n    <>\n      <AppBarOverride title={`${metadata.name} - Members`} />\n      <Container style={{ maxWidth: \"30rem\" }}>\n        {error && (\n          <Alert color=\"error\">\n            {error.toString()}\n          </Alert>\n        )}\n        {members ?\n          <List>\n            <ListItem rightIcon={<IconMemberAdd />} onClick={() => setAddMemberOpen(true)}>\n              Invite user\n            </ListItem>\n            {(members.length > 0 ?\n              members.map((member) => {\n                let rightIcon: React.ReactElement | undefined = undefined;\n                if (member.accessLevel === Etebase.CollectionAccessLevel.ReadOnly) {\n                  rightIcon = (<div title=\"Read Only\"><VisibilityIcon /></div>);\n                } else if (member.accessLevel === Etebase.CollectionAccessLevel.Admin) {\n                  rightIcon = (<div title=\"Admin\"><AdminIcon /></div>);\n                }\n                return (\n                  <ListItem\n                    key={member.username}\n                    onClick={() => setRevokeUser(member)}\n                    rightIcon={rightIcon}\n                  >\n                    {member.username}\n                  </ListItem>\n                );\n              })\n              :\n              <ListItem>\n                No members\n              </ListItem>\n            )}\n          </List>\n          :\n          <LoadingIndicator />\n        }\n      </Container>\n      <ConfirmationDialog\n        title=\"Remove member\"\n        labelOk=\"OK\"\n        open={revokeUser !== null}\n        onOk={(revokeUserIsAdmin) ? () => setRevokeUser(null) : onRevokeDo}\n        onCancel={() => setRevokeUser(null)}\n      >\n        {(revokeUserIsAdmin) ? (\n          <p>\n            Revoking admin access is not allowed.\n          </p>\n        ) : (\n          <p>\n            Would you like to revoke {revokeUser?.username}'s access?<br />\n            Please be advised that a malicious user would potentially be able to retain access to encryption keys. Please refer to the FAQ for more information.\n          </p>\n        )}\n      </ConfirmationDialog>\n\n      {addMemberOpen &&\n        <CollectionMemberAddDialog\n          collection={props.collection}\n          onOk={onMemberAdd}\n          onClose={() => setAddMemberOpen(false)}\n        />\n      }\n    </>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport * as Etebase from \"etebase\";\n\nimport { useCredentials } from \"../credentials\";\nimport { useItems } from \"../etebase-helpers\";\nimport { CachedCollection, getRawItemNavigationUid } from \"../Pim/helpers\";\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\nimport GenericChangeHistory from \"../components/GenericChangeHistory\";\nimport { useHistory } from \"react-router\";\nimport { routeResolver } from \"../App\";\n\nexport interface CachedItem {\n  item: Etebase.Item;\n  metadata: Etebase.ItemMetadata;\n  content: string;\n}\n\n// FIXME: use the ones used by e.g. Contacts/Main so ew share the cache.\n// Only problem though is that we want the deleted items here and not there.\nasync function decryptItems(items: Map<string, Map<string, Etebase.Item>>) {\n  const entries: Map<string, Map<string, CachedItem>> = new Map();\n  for (const [colUid, col] of items.entries()) {\n    const cur = new Map();\n    entries.set(colUid, cur);\n    for (const item of col.values()) {\n      cur.set(item.uid, {\n        item,\n        metadata: item.getMeta(),\n        content: await item.getContent(Etebase.OutputFormat.String),\n      });\n    }\n  }\n\n  return entries;\n}\n\ninterface PropsType {\n  collection: CachedCollection;\n}\n\nexport default function CollectionChangeEntries(props: PropsType) {\n  const [entries, setEntries] = React.useState<Map<string, CachedItem>>();\n  const history = useHistory();\n  const etebase = useCredentials()!;\n\n  const { collection, collectionType } = props.collection;\n  const items = useItems(etebase, collectionType);\n\n  React.useEffect(() => {\n    if (items) {\n      decryptItems(items)\n        .then((entries) => setEntries(entries.get(collection.uid)));\n    }\n  }, [items]);\n\n  if (!entries) {\n    return (\n      <LoadingIndicator />\n    );\n  }\n\n  const entriesList = Array.from(entries.values()).sort((a_, b_) => {\n    const a = a_.metadata.mtime ?? 0;\n    const b = b_.metadata.mtime ?? 0;\n    return a - b;\n  });\n\n  let changelogRoute = \"\";\n  switch (collectionType) {\n    case \"etebase.vevent\": {\n      changelogRoute = \"pim.events._id.log\";\n      break;\n    }\n    case \"etebase.vtodo\": {\n      changelogRoute = \"pim.tasks._id.log\";\n      break;\n    }\n    case \"etebase.vcard\": {\n      changelogRoute = \"pim.contacts._id.log\";\n      break;\n    }\n  }\n\n  return (\n    <div style={{ height: \"calc(100vh - 300px)\" }}>\n      <GenericChangeHistory\n        items={entriesList}\n        onItemClick={(item) =>\n          history.push(routeResolver.getRoute(changelogRoute, { itemUid: getRawItemNavigationUid(collection.uid, item.item.uid) }))\n        }\n      />\n    </div>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport IconEdit from \"@material-ui/icons/Edit\";\nimport IconMembers from \"@material-ui/icons/People\";\nimport IconImport from \"@material-ui/icons/ImportExport\";\n\nimport * as Etebase from \"etebase\";\n\n\nimport AppBarOverride from \"../widgets/AppBarOverride\";\nimport Container from \"../widgets/Container\";\n\nimport CollectionChangeEntries from \"./CollectionChangeEntries\";\nimport ImportDialog from \"./ImportDialog\";\n\nimport { Link } from \"react-router-dom\";\n\nimport { routeResolver } from \"../App\";\n\nimport { CachedCollection } from \"../Pim/helpers\";\n\ninterface PropsType {\n  collection: CachedCollection;\n}\n\nclass Collection extends React.Component<PropsType> {\n  public state: {\n    tab: number;\n    importDialogOpen: boolean;\n  };\n\n  constructor(props: PropsType) {\n    super(props);\n\n    this.importDialogToggle = this.importDialogToggle.bind(this);\n    this.state = {\n      tab: 0,\n      importDialogOpen: false,\n    };\n  }\n\n  public render() {\n    const { collection, metadata } = this.props.collection;\n    const isAdmin = collection.accessLevel === Etebase.CollectionAccessLevel.Admin;\n\n    return (\n      <React.Fragment>\n        <AppBarOverride title={metadata.name!!}>\n          {isAdmin &&\n            <>\n              <IconButton\n                component={Link}\n                title=\"Edit\"\n                {...{ to: routeResolver.getRoute(\"collections._id.edit\", { colUid: collection.uid }) }}\n              >\n                <IconEdit />\n              </IconButton>\n              <IconButton\n                component={Link}\n                title=\"Members\"\n                {...{ to: routeResolver.getRoute(\"collections._id.members\", { colUid: collection.uid }) }}\n              >\n                <IconMembers />\n              </IconButton>\n            </>\n          }\n          <IconButton\n            title=\"Import\"\n            onClick={this.importDialogToggle}\n          >\n            <IconImport />\n          </IconButton>\n        </AppBarOverride>\n        <Container>\n          <CollectionChangeEntries collection={this.props.collection} />\n        </Container>\n\n        <ImportDialog\n          key={this.state.importDialogOpen.toString()}\n          collection={this.props.collection}\n          open={this.state.importDialogOpen}\n          onClose={this.importDialogToggle}\n        />\n      </React.Fragment>\n    );\n  }\n\n  private importDialogToggle() {\n    this.setState((state: any) => ({ importDialogOpen: !state.importDialogOpen }));\n  }\n}\n\nexport default Collection;\n","// SPDX-FileCopyrightText: © 2020 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Switch, Route, Redirect } from \"react-router\";\n\nimport * as Etebase from \"etebase\";\n\nimport { useCredentials } from \"../credentials\";\nimport { routeResolver } from \"../App\";\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\n\nimport AppBarOverride from \"../widgets/AppBarOverride\";\nimport { List, ListItem } from \"../widgets/List\";\nimport Container from \"../widgets/Container\";\nimport { IconButton } from \"@material-ui/core\";\nimport IconAccept from \"@material-ui/icons/Done\";\nimport IconReject from \"@material-ui/icons/Close\";\nimport ConfirmationDialog from \"../widgets/ConfirmationDialog\";\nimport PrettyFingerprint from \"../widgets/PrettyFingerprint\";\n\nasync function loadInvitations(etebase: Etebase.Account) {\n  const ret: Etebase.SignedInvitation[] = [];\n  const invitationManager = etebase.getInvitationManager();\n\n  let iterator: string | null = null;\n  let done = false;\n  while (!done) {\n    const invitations = await invitationManager.listIncoming({ iterator, limit: 30 });\n    iterator = invitations.iterator as string;\n    done = invitations.done;\n\n    ret.push(...invitations.data);\n  }\n\n  return ret;\n}\n\nexport default function Invitations() {\n  return (\n    <Switch>\n      <Route\n        path={routeResolver.getRoute(\"collections.invitations\")}\n        exact\n      >\n        <Redirect to={routeResolver.getRoute(\"collections.invitations.incoming\")} />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"collections.invitations.incoming\")}\n        exact\n      >\n        <InvitationsIncoming\n        />\n      </Route>\n    </Switch>\n  );\n}\n\nfunction InvitationsIncoming() {\n  const [invitations, setInvitations] = React.useState<Etebase.SignedInvitation[]>();\n  const [chosenInvitation, setChosenInvitation] = React.useState<Etebase.SignedInvitation>();\n  const etebase = useCredentials()!;\n\n  React.useEffect(() => {\n    loadInvitations(etebase).then(setInvitations);\n  }, [etebase]);\n\n  function removeInvitation(invite: Etebase.SignedInvitation) {\n    setInvitations(invitations?.filter((x) => x.uid !== invite.uid));\n  }\n\n  async function reject(invite: Etebase.SignedInvitation) {\n    const invitationManager = etebase.getInvitationManager();\n    await invitationManager.reject(invite);\n    removeInvitation(invite);\n  }\n\n  async function accept(invite: Etebase.SignedInvitation) {\n    const invitationManager = etebase.getInvitationManager();\n    await invitationManager.accept(invite);\n    setChosenInvitation(undefined);\n    removeInvitation(invite);\n  }\n\n  return (\n    <>\n      <AppBarOverride title=\"Incoming Invitations\" />\n      <Container style={{ maxWidth: \"30rem\" }}>\n        {invitations ?\n          <List>\n            {(invitations.length > 0 ?\n              invitations.map((invite) => (\n                <ListItem\n                  key={invite.uid}\n                  rightIcon={(\n                    <>\n                      <IconButton title=\"Reject\" onClick={() => reject(invite)}>\n                        <IconReject color=\"error\" />\n                      </IconButton>\n                      <IconButton title=\"Accept\" onClick={() => setChosenInvitation(invite)}>\n                        <IconAccept color=\"secondary\" />\n                      </IconButton>\n                    </>\n                  )}\n                >\n                  Invitation from {invite.fromUsername}\n                </ListItem>\n              ))\n              :\n              <ListItem>\n                No invitations\n              </ListItem>\n            )}\n          </List>\n          :\n          <LoadingIndicator />\n        }\n      </Container>\n      {chosenInvitation && (\n        <ConfirmationDialog\n          title=\"Accept invitation\"\n          labelOk=\"OK\"\n          open={!!chosenInvitation}\n          onOk={() => accept(chosenInvitation)}\n          onCancel={() => setChosenInvitation(undefined)}\n        >\n          Please verify the inviter's security fingerprint to ensure the invitation is secure:\n          <div style={{ textAlign: \"center\" }}>\n            <PrettyFingerprint publicKey={chosenInvitation.fromPubkey} />\n          </div>\n        </ConfirmationDialog>\n      )}\n    </>\n  );\n}\n","// SPDX-FileCopyrightText: © 2020 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Switch, Route, useHistory } from \"react-router\";\n\nimport * as Etebase from \"etebase\";\n\nimport { useCredentials } from \"../credentials\";\nimport { useCollections, getCollectionManager } from \"../etebase-helpers\";\nimport { routeResolver } from \"../App\";\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\n\nimport { CachedCollection, getDecryptCollectionsFunction, PimFab } from \"../Pim/helpers\";\nimport CollectionList from \"./CollectionList\";\nimport CollectionImport from \"./CollectionImport\";\nimport PageNotFound from \"../PageNotFound\";\nimport CollectionEdit from \"./CollectionEdit\";\nimport CollectionMembers from \"./CollectionMembers\";\nimport Collection from \"./Collection\";\nimport { useAsyncDispatch } from \"../store\";\nimport { collectionUpload, pushMessage } from \"../store/actions\";\nimport Invitations from \"./Invitations\";\n\nconst decryptCollections = getDecryptCollectionsFunction();\n\nexport default function CollectionsMain() {\n  const [cachedCollections, setCachedCollections] = React.useState<CachedCollection[]>();\n  const history = useHistory();\n  const etebase = useCredentials()!;\n  const collections = useCollections(etebase);\n  const dispatch = useAsyncDispatch();\n\n  React.useEffect(() => {\n    if (collections) {\n      decryptCollections(collections)\n        .then((entries) => setCachedCollections(entries));\n      // FIXME: handle failure to decrypt collections\n    }\n  }, [collections]);\n\n  if (!cachedCollections) {\n    return (\n      <LoadingIndicator />\n    );\n  }\n\n  async function onSave(collection: Etebase.Collection): Promise<void> {\n    const colMgr = getCollectionManager(etebase);\n    await dispatch(collectionUpload(colMgr, collection));\n    dispatch(pushMessage({ message: \"Collection saved\", severity: \"success\" }));\n\n    history.push(routeResolver.getRoute(\"collections\"));\n  }\n\n  async function onDelete(collection: Etebase.Collection) {\n    const colMgr = getCollectionManager(etebase);\n    const mtime = (new Date()).getTime();\n    const meta = collection.getMeta();\n    collection.setMeta({ ...meta, mtime });\n    collection.delete(true);\n    await dispatch(collectionUpload(colMgr, collection));\n    dispatch(pushMessage({ message: \"Collection deleted\", severity: \"success\" }));\n\n    history.push(routeResolver.getRoute(\"collections\"));\n  }\n\n  function onCancel() {\n    history.goBack();\n  }\n\n  return (\n    <Switch>\n      <Route\n        path={routeResolver.getRoute(\"collections\")}\n        exact\n      >\n        <CollectionList\n          collections={cachedCollections}\n        />\n        <PimFab\n          onClick={() => history.push(\n            routeResolver.getRoute(\"collections.new\")\n          )}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"collections.import\")}\n        exact\n      >\n        <CollectionImport\n          collections={cachedCollections}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"collections.new\")}\n        exact\n      >\n        <CollectionEdit\n          onSave={onSave}\n          onDelete={onDelete}\n          onCancel={onCancel}\n        />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"collections.invitations\")}\n      >\n        <Invitations />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"collections._id\")}\n        render={({ match }) => {\n          const colUid = match.params.colUid;\n          const collection = cachedCollections.find((x) => x.collection.uid === colUid);\n          if (!collection) {\n            return (<PageNotFound />);\n          }\n\n          return (\n            <Switch>\n              <Route\n                path={routeResolver.getRoute(\"collections._id.edit\")}\n                exact\n              >\n                <CollectionEdit\n                  collection={collection}\n                  onSave={onSave}\n                  onDelete={onDelete}\n                  onCancel={onCancel}\n                />\n              </Route>\n              <Route\n                path={routeResolver.getRoute(\"collections._id.members\")}\n                exact\n              >\n                <CollectionMembers collection={collection} />\n              </Route>\n              <Route\n                path={routeResolver.getRoute(\"collections._id\")}\n                exact\n              >\n                <Collection collection={collection} />\n              </Route>\n            </Switch>\n          );\n        }}\n      />\n    </Switch>\n  );\n}\n\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport Input, { InputProps } from \"@material-ui/core/Input\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Visibility from \"@material-ui/icons/Visibility\";\nimport VisibilityOff from \"@material-ui/icons/VisibilityOff\";\n\nlet formIdCounter = 0;\n\nexport default function PasswordField(props_: Omit<InputProps, \"type\"> & { helperText?: string, label?: string }) {\n  const [showPassword, setShowPassword] = React.useState(false);\n  const formId_ = React.useMemo(() => formIdCounter++, []);\n  const { helperText, label, style, id, ...props } = props_;\n  const formId = `password-field-${id ?? formId_}`;\n\n  return (\n    <FormControl style={style}>\n      <InputLabel htmlFor={formId}>{label}</InputLabel>\n      <Input\n        {...props}\n        id={formId}\n        type={showPassword ? \"text\" : \"password\"}\n        endAdornment={(\n          <InputAdornment position=\"end\">\n            <IconButton\n              aria-label=\"Toggle password visibility\"\n              title=\"Toggle password visibility\"\n              onClick={() => setShowPassword(!showPassword)}\n            >\n              {showPassword ? <Visibility /> : <VisibilityOff />}\n            </IconButton>\n          </InputAdornment>\n        )}\n      />\n      <FormHelperText id={formId}>{helperText}</FormHelperText>\n    </FormControl>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport * as Etebase from \"etebase\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport Select from \"@material-ui/core/Select\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport Switch from \"@material-ui/core/Switch\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\n\nimport { StoreState } from \"../store\";\nimport { setSettings, login, pushMessage } from \"../store/actions\";\n\nimport Container from \"../widgets/Container\";\nimport AppBarOverride from \"../widgets/AppBarOverride\";\nimport PrettyFingerprint from \"../widgets/PrettyFingerprint\";\nimport { useCredentials } from \"../credentials\";\nimport { Button } from \"@material-ui/core\";\nimport ConfirmationDialog from \"../widgets/ConfirmationDialog\";\nimport PasswordField from \"../widgets/PasswordField\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { PASSWORD_MIN_LENGTH, startTask, enforcePasswordRules } from \"../helpers\";\n\nfunction SecurityFingerprint() {\n  const etebase = useCredentials()!;\n  const inviteMgr = etebase.getInvitationManager();\n  const publicKey = inviteMgr.pubkey;\n\n  return (\n    <>\n      <p>\n        Your security fingerprint is:\n      </p>\n      <PrettyFingerprint publicKey={publicKey} />\n    </>\n  );\n}\n\ninterface ChangePasswordFormErrors {\n  oldPassword?: string;\n  newPassword?: string;\n\n  general?: string;\n}\n\nfunction ChangePassword() {\n  const etebase = useCredentials()!;\n  const dispatch = useDispatch();\n  const [showDialog, setShowDialog] = React.useState(false);\n  const [oldPassword, setOldPassword] = React.useState(\"\");\n  const [newPassword, setNewPassword] = React.useState(\"\");\n  const [errors, setErrors] = React.useState<ChangePasswordFormErrors>({});\n\n  const styles = {\n    infoAlert: {\n      marginTop: 20,\n    },\n    textField: {\n      marginTop: 20,\n      width: \"18em\",\n    },\n  };\n\n  function handleInputChange(func: (value: string) => void) {\n    return (event: React.ChangeEvent<any>) => {\n      func(event.target.value);\n    };\n  }\n\n  async function onChangePassword() {\n    try {\n      const fieldNotEmpty = \"Password can't be empty.\";\n      const errors: ChangePasswordFormErrors = {};\n      if (!oldPassword) {\n        errors.oldPassword = fieldNotEmpty;\n      }\n      if (!newPassword) {\n        errors.newPassword = fieldNotEmpty;\n      } else {\n        const passwordRulesError = enforcePasswordRules(newPassword);\n        if (passwordRulesError) {\n          errors.newPassword = passwordRulesError;\n        }\n      }\n\n      setErrors(errors);\n      if (Object.keys(errors).length > 0) {\n        return;\n      }\n\n      await startTask(async () => {\n        const serverUrl = etebase.serverUrl;\n        const username = etebase.user.username;\n        try {\n          const etebase = await Etebase.Account.login(username, oldPassword, serverUrl);\n          await etebase.logout();\n        } catch (e) {\n          if (e instanceof Etebase.UnauthorizedError) {\n            setErrors({ oldPassword: \"Error: wrong encryption password.\" });\n          } else {\n            setErrors({ oldPassword: e.toString() });\n          }\n          return;\n        }\n\n        try {\n          await etebase.changePassword(newPassword);\n          dispatch(login(etebase));\n          dispatch(pushMessage({ message: \"Password successfully changed.\", severity: \"success\" }));\n          setShowDialog(false);\n        } catch (e) {\n          setErrors({ newPassword: e.toString() });\n        }\n      });\n    } finally {\n      // Cleanup\n    }\n  }\n\n  return (\n    <>\n      <p>\n        Change your password by clicking here;\n      </p>\n      <Button color=\"secondary\" variant=\"contained\" onClick={() => setShowDialog(true)}>\n        Change Password\n      </Button>\n      <ConfirmationDialog\n        title=\"Change Password\"\n        key={showDialog}\n        open={showDialog}\n        onOk={onChangePassword}\n        onCancel={() => setShowDialog(false)}\n      >\n        <PasswordField\n          style={styles.textField}\n          error={!!errors.oldPassword}\n          helperText={errors.oldPassword}\n          label=\"Current Password\"\n          value={oldPassword}\n          onChange={handleInputChange(setOldPassword)}\n        />\n        <PasswordField\n          style={styles.textField}\n          error={!!errors.newPassword}\n          helperText={errors.newPassword}\n          label=\"New Password\"\n          inputProps={{\n            minLength: PASSWORD_MIN_LENGTH,\n          }}\n          value={newPassword}\n          onChange={handleInputChange(setNewPassword)}\n        />\n        {errors.general && (\n          <Alert severity=\"error\" style={styles.infoAlert}>{errors.general}</Alert>\n        )}\n\n        <Alert severity=\"warning\" style={styles.infoAlert}>\n          Please make sure you remember your password, as it <em>can't</em> be recovered if lost!\n        </Alert>\n      </ConfirmationDialog>\n    </>\n  );\n}\n\nexport default React.memo(function Settings() {\n  const etebase = useCredentials();\n  const dispatch = useDispatch();\n  const settings = useSelector((state: StoreState) => state.settings);\n\n  const darkMode = !!settings.darkMode;\n\n  function handleChange(event: React.ChangeEvent<any>) {\n    const name = event.target.name;\n    const value = event.target.value;\n\n    dispatch(setSettings({ ...settings, [name]: value }));\n  }\n\n  return (\n    <>\n      <AppBarOverride title=\"Settings\" />\n      <Container>\n        {(etebase) && (\n          <>\n            <h1>Account</h1>\n            <h2>Security Fingerprint</h2>\n            <SecurityFingerprint />\n\n            <h2>Account Dashboard</h2>\n            <p>\n              Change your payment info, plan and other account settings\n            </p>\n            <Button color=\"secondary\" variant=\"contained\" onClick={async () => {\n              try {\n                const url = await etebase!.getDashboardUrl();\n                window.open(url, \"_blank\", \"noopener,noreferrer\");\n              } catch (e) {\n                dispatch(pushMessage({ message: e.message, severity: \"error\" }));\n              }\n            }}>\n              Open Dashboard\n            </Button>\n\n            <h2>Password</h2>\n            <ChangePassword />\n          </>\n        )}\n\n        <h1>Look & Feel</h1>\n        <h2>Date & Time</h2>\n        <FormControl style={{ width: \"15em\" }}>\n          <InputLabel>\n            Locale\n          </InputLabel>\n          <Select\n            name=\"locale\"\n            value={settings.locale}\n            onChange={handleChange}\n          >\n            <MenuItem value=\"en-gb\">English (United Kingdom)</MenuItem>\n            <MenuItem value=\"en-us\">English (United States)</MenuItem>\n          </Select>\n        </FormControl>\n        <h2>Dark mode</h2>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"primary\"\n                checked={darkMode}\n                onChange={() => dispatch(setSettings({ ...settings, darkMode: !darkMode }))}\n              />\n            }\n            label=\"Dark mode\"\n          />\n        </FormGroup>\n      </Container>\n    </>\n  );\n});\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport * as Etebase from \"etebase\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport Container from \"./widgets/Container\";\nimport { useSelector } from \"react-redux\";\nimport { StoreState } from \"./store\";\nimport { useCredentials } from \"./credentials\";\nimport { getCollectionManager } from \"./etebase-helpers\";\n\nexport default function Debug() {\n  const etebase = useCredentials()!;\n  const [stateCollectionUid, setCollectionUid] = React.useState(\"\");\n  const [itemsUids, setEntriesUids] = React.useState(\"\");\n  const [result, setResult] = React.useState(\"\");\n  const cacheCollections = useSelector((state: StoreState) => state.cache.collections);\n  const cacheItems = useSelector((state: StoreState) => state.cache.items);\n\n  function handleInputChange(func: (value: string) => void) {\n    return (event: React.ChangeEvent<any>) => {\n      func(event.target.value);\n    };\n  }\n\n  return (\n    <Container>\n      <div>\n        <TextField\n          style={{ width: \"100%\" }}\n          type=\"text\"\n          label=\"Collection UID\"\n          value={stateCollectionUid}\n          onChange={handleInputChange(setCollectionUid)}\n        />\n      </div>\n      <div>\n        <TextField\n          style={{ width: \"100%\" }}\n          type=\"text\"\n          multiline\n          label=\"Item UIDs\"\n          value={itemsUids}\n          onChange={handleInputChange(setEntriesUids)}\n        />\n      </div>\n      <Button\n        variant=\"contained\"\n        color=\"secondary\"\n        onClick={async () => {\n          const colUid = stateCollectionUid.trim();\n          const cachedCollection = cacheCollections.get(colUid);\n          const colItems = cacheItems.get(colUid);\n          if (!colItems || !cachedCollection) {\n            setResult(\"Error: collection uid not found.\");\n            return;\n          }\n\n          const colMgr = getCollectionManager(etebase);\n          const col = colMgr.cacheLoad(cachedCollection);\n          const itemMgr = colMgr.getItemManager(col);\n\n          const wantedEntries = {};\n          const wantAll = (itemsUids.trim() === \"all\");\n          itemsUids.split(\"\\n\").forEach((ent) => wantedEntries[ent.trim()] = true);\n\n          const retEntries = [];\n          console.log(wantAll, colItems.size);\n          for (const cached of colItems.values()) {\n            const item = itemMgr.cacheLoad(cached);\n            const meta = item.getMeta();\n            const content = await item.getContent(Etebase.OutputFormat.String);\n            if (wantAll || wantedEntries[item.uid]) {\n              retEntries.push(`${JSON.stringify(meta)}\\n${content}`);\n            }\n          }\n\n          setResult(retEntries.join(\"\\n\\n\"));\n        }}\n      >\n        Decrypt\n      </Button>\n      <div>\n        <p>Result:</p>\n        <pre>{result}</pre>\n      </div>\n    </Container>\n  );\n}\n","// SPDX-FileCopyrightText: © 2020 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Tabs, Tab, useTheme } from \"@material-ui/core\";\nimport { useHistory } from \"react-router\";\nimport { routeResolver } from \"../App\";\n\nexport type TabValue = \"contacts\" | \"events\" | \"tasks\";\n\ninterface PropsType {\n  value: TabValue;\n}\n\nexport default function PimNavigationTabs(props: PropsType) {\n  const theme = useTheme();\n  const history = useHistory();\n\n  const tabs = [\n    { title: \"Address Book\", linkValue: \"contacts\" },\n    { title: \"Calendar\", linkValue: \"events\" },\n    { title: \"Tasks\", linkValue: \"tasks\" },\n  ];\n\n  let selected;\n  switch (props.value) {\n    case \"contacts\": {\n      selected = 0;\n      break;\n    }\n    case \"events\": {\n      selected = 1;\n      break;\n    }\n    case \"tasks\": {\n      selected = 2;\n      break;\n    }\n  }\n\n  return (\n    <Tabs\n      variant=\"fullWidth\"\n      style={{ backgroundColor: theme.palette.primary.main }}\n      value={selected}\n      onChange={(_event, value) => history.push(\n        routeResolver.getRoute(`pim.${tabs[value].linkValue}`)\n      )}\n    >\n      {tabs.map((x) => (\n        <Tab\n          key={x.linkValue}\n          label={x.title}\n        />\n      ))}\n    </Tabs>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Switch, Redirect, useHistory } from \"react-router\";\n\nimport moment from \"moment\";\nimport \"moment/locale/en-gb\";\n\nimport { routeResolver } from \"./App\";\n\nimport AppBarOverride from \"./widgets/AppBarOverride\";\nimport LoadingIndicator from \"./widgets/LoadingIndicator\";\nimport Container from \"./widgets/Container\";\nimport ContactsMain from \"./Contacts/Main\";\nimport CalendarsMain from \"./Calendars/Main\";\nimport TasksMain from \"./Tasks/Main\";\nimport CollectionsMain from \"./Collections/Main\";\n\nimport Settings from \"./Settings\";\nimport Debug from \"./Debug\";\n\nimport { SyncManager } from \"./sync/SyncManager\";\n\nimport { StoreState } from \"./store\";\nimport { performSync } from \"./store/actions\";\nimport { useCredentials } from \"./credentials\";\nimport PimNavigationTabs from \"./Pim/NavigationTabs\";\nimport { PageNotFoundRoute } from \"./PageNotFound\";\n\nexport default function SyncGate() {\n  const etebase = useCredentials();\n  const settings = useSelector((state: StoreState) => state.settings);\n  const dispatch = useDispatch();\n  const [loading, setLoading] = React.useState(true);\n\n  // Doing this so we refresh on route changes\n  useHistory();\n\n  React.useEffect(() => {\n    (async () => {\n      const syncManager = SyncManager.getManager(etebase!);\n      const sync = syncManager.sync();\n      dispatch(performSync(sync));\n      await sync;\n      setLoading(false);\n    })();\n  }, []);\n\n  if (loading) {\n    return (<LoadingIndicator style={{ display: \"block\", margin: \"40px auto\" }} />);\n  }\n\n  // FIXME: Shouldn't be here\n  moment.locale(settings.locale);\n\n  return (\n    <Switch>\n      <Route\n        path={routeResolver.getRoute(\"home\")}\n        exact\n        render={() => (\n          <Redirect to={routeResolver.getRoute(\"pim\")} />\n        )}\n      />\n      <Route\n        path={routeResolver.getRoute(\"pim\")}\n      >\n        <AppBarOverride title=\"EteSync\" />\n        <Switch>\n          <Route\n            path={routeResolver.getRoute(\"pim\")}\n            exact\n          >\n            <Redirect to={routeResolver.getRoute(\"pim.events\")} />\n          </Route>\n          <Route\n            path={routeResolver.getRoute(\"pim.contacts\")}\n          >\n            <PimNavigationTabs value=\"contacts\" />\n            <Container>\n              <ContactsMain />\n            </Container>\n          </Route>\n          <Route\n            path={routeResolver.getRoute(\"pim.events\")}\n          >\n            <PimNavigationTabs value=\"events\" />\n            <Container>\n              <CalendarsMain />\n            </Container>\n          </Route>\n          <Route\n            path={routeResolver.getRoute(\"pim.tasks\")}\n          >\n            <PimNavigationTabs value=\"tasks\" />\n            <Container>\n              <TasksMain />\n            </Container>\n          </Route>\n          <PageNotFoundRoute container />\n        </Switch>\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"collections\")}\n      >\n        <CollectionsMain />\n      </Route>\n      <Route\n        path={routeResolver.getRoute(\"settings\")}\n        exact\n        render={() => (\n          <Settings />\n        )}\n      />\n      <Route\n        path={routeResolver.getRoute(\"debug\")}\n        exact\n        render={() => (\n          <Debug />\n        )}\n      />\n      <PageNotFoundRoute container />\n    </Switch>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport * as Etebase from \"etebase\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport { routeResolver } from \"./App\";\n\nimport Container from \"./widgets/Container\";\nimport PasswordField from \"./widgets/PasswordField\";\n\nimport LoadingIndicator from \"./widgets/LoadingIndicator\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { CircularProgress } from \"@material-ui/core\";\nimport { Redirect } from \"react-router\";\nimport { useCredentials } from \"./credentials\";\nimport { useDispatch } from \"react-redux\";\nimport { startTask, PASSWORD_MIN_LENGTH, enforcePasswordRules } from \"./helpers\";\nimport { login } from \"./store/actions\";\nimport { Link } from \"react-router-dom\";\n\nimport * as C from \"./constants\";\nimport ExternalLink from \"./widgets/ExternalLink\";\n\ninterface FormErrors {\n  username?: string;\n  email?: string;\n  password?: string;\n  server?: string;\n\n  general?: string;\n}\n\nexport default function SignupPage() {\n  const credentials = useCredentials();\n  const dispatch = useDispatch();\n  const [username, setUsername] = React.useState(\"\");\n  const [email, setEmail] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [server, setServer] = React.useState(\"\");\n  const [showAdvanced, setShowAdvanced] = React.useState(false);\n  const [loading, setLoading] = React.useState(false);\n  const [errors, setErrors] = React.useState<FormErrors>({});\n\n  if (credentials) {\n    return (\n      <Redirect to={routeResolver.getRoute(\"wizard\")} />\n    );\n  }\n\n  async function signup(e: React.FormEvent<any>) {\n    e.preventDefault();\n    setLoading(true);\n    try {\n      const errors: FormErrors = {};\n      const fieldRequired = \"This field is required!\";\n      if (!username) {\n        errors.username = fieldRequired;\n      }\n      if (!email) {\n        errors.email = fieldRequired;\n      }\n      if (!password) {\n        errors.password = fieldRequired;\n      } else {\n        const passwordRulesError = enforcePasswordRules(password);\n        if (passwordRulesError) {\n          errors.password = passwordRulesError;\n        }\n      }\n\n      if (process.env.NODE_ENV !== \"development\") {\n        if (showAdvanced && !server.startsWith(\"https://\")) {\n          errors.server = \"Server URI must start with https://\";\n        }\n      }\n\n      if (Object.keys(errors).length) {\n        setErrors(errors);\n        return;\n      } else {\n        setErrors({});\n      }\n\n      const serverUrl = (showAdvanced) ? server : C.defaultServerUrl;\n      const user: Etebase.User = {\n        username,\n        email,\n      };\n      const etebase = await startTask((async () => {\n        return await Etebase.Account.signup(user, password, serverUrl);\n      }));\n      dispatch(login(etebase));\n    } catch (e) {\n      if ((e instanceof Etebase.HttpError) && (e.content)) {\n        let found = false;\n        if (e.content.errors) {\n          for (const field of e.content.errors) {\n            if (field.field === \"user.username\") {\n              errors.username = field.detail;\n              found = true;\n            } else if (field.field === \"user.email\") {\n              errors.email = field.detail;\n              found = true;\n            } else if (!field.field) {\n              errors.general = field.detail;\n              found = true;\n            }\n          }\n        }\n\n        if (!found) {\n          errors.general = e.content.detail ?? e.toString();\n        }\n      } else {\n        errors.general = e.toString();\n      }\n      setErrors(errors);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const styles = {\n    form: {\n    },\n    infoAlert: {\n      marginTop: 20,\n    },\n    textField: {\n      marginTop: 20,\n      width: \"18em\",\n    },\n    submit: {\n      marginTop: 20,\n      textAlign: \"right\" as any,\n    },\n  };\n\n  function handleInputChange(func: (value: string) => void) {\n    return (event: React.ChangeEvent<any>) => {\n      func(event.target.value);\n    };\n  }\n\n  let advancedSettings = null;\n  if (showAdvanced) {\n    advancedSettings = (\n      <React.Fragment>\n        <TextField\n          type=\"url\"\n          style={styles.textField}\n          error={!!errors.server}\n          helperText={errors.server}\n          label=\"Server\"\n          value={server}\n          onChange={handleInputChange(setServer)}\n        />\n        <br />\n      </React.Fragment>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <LoadingIndicator />\n        <p>Deriving encryption data...</p>\n      </div>\n    );\n  }\n\n  return (\n    <Container style={{ maxWidth: \"30rem\" }}>\n      <h2 style={{ marginBottom: \"0.1em\" }}>Signup</h2>\n      <div style={{ fontSize: \"90%\" }}>or <Link to={routeResolver.getRoute(\"home\")}>log in to your account</Link></div>\n\n      <Alert\n        style={styles.infoAlert}\n        severity=\"info\"\n      >\n        <a href={C.pricing} style={{ color: \"inherit\", textDecoration: \"inherit\", display: \"block\" }}>\n          You are signing up for a free trial. Click here for pricing information.\n        </a>\n      </Alert>\n\n\n      <form style={styles.form} onSubmit={signup}>\n        <TextField\n          type=\"text\"\n          style={styles.textField}\n          error={!!errors.username}\n          helperText={errors.username}\n          label=\"Username\"\n          value={username}\n          onChange={handleInputChange(setUsername)}\n        />\n        <br />\n        <TextField\n          type=\"email\"\n          style={styles.textField}\n          error={!!errors.email}\n          helperText={errors.email}\n          label=\"Email\"\n          value={email}\n          onChange={handleInputChange(setEmail)}\n        />\n        <br />\n        <PasswordField\n          style={styles.textField}\n          error={!!errors.password}\n          helperText={errors.password}\n          label=\"Password\"\n          name=\"password\"\n          inputProps={{\n            minLength: PASSWORD_MIN_LENGTH,\n          }}\n          value={password}\n          onChange={handleInputChange(setPassword)}\n        />\n\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"primary\"\n                checked={showAdvanced}\n                onChange={() => setShowAdvanced(!showAdvanced)}\n              />\n            }\n            label=\"Advanced settings\"\n          />\n        </FormGroup>\n        {advancedSettings}\n        {errors.general && (\n          <Alert severity=\"error\" style={styles.infoAlert}>{errors.general}</Alert>\n        )}\n\n        <Alert severity=\"warning\" style={styles.infoAlert}>\n          Please make sure you remember your password, as it <em>can't</em> be recovered if lost!\n        </Alert>\n\n        <p style={styles.infoAlert}>\n          By signing up you agree to our <ExternalLink href={C.terms}>terms of service</ExternalLink>.\n        </p>\n\n        <div style={styles.submit}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"secondary\"\n            disabled={loading}\n          >\n            {loading ? (\n              <CircularProgress />\n            ) : \"Sign Up\"\n            }\n          </Button>\n        </div>\n      </form>\n    </Container>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport TextField from \"@material-ui/core/TextField\";\nimport FormGroup from \"@material-ui/core/FormGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\n\nimport ExternalLink from \"../widgets/ExternalLink\";\nimport PasswordField from \"../widgets/PasswordField\";\n\nimport * as C from \"../constants\";\nimport LoadingIndicator from \"../widgets/LoadingIndicator\";\nimport Alert from \"@material-ui/lab/Alert\";\n\ninterface FormErrors {\n  errorEmail?: string;\n  errorPassword?: string;\n  errorEncryptionPassword?: string;\n  errorServer?: string;\n}\n\ninterface PropsType {\n  onSubmit: (username: string, password: string, serviceApiUrl?: string) => void;\n  loading?: boolean;\n  error?: Error;\n}\n\nexport default function LoginForm(props: PropsType) {\n  const [username, setUsername] = React.useState(\"\");\n  const [password, setPassword] = React.useState(\"\");\n  const [server, setServer] = React.useState(\"\");\n  const [showAdvanced, setShowAdvanced] = React.useState(false);\n  const [errors, setErrors] = React.useState<FormErrors>({});\n\n  function generateEncryption(e: React.FormEvent<any>) {\n    e.preventDefault();\n    const errors: FormErrors = {};\n    const fieldRequired = \"This field is required!\";\n    if (!username) {\n      errors.errorEmail = fieldRequired;\n    } else if (username.includes(\"@\")) {\n      errors.errorEmail = \"Please use your username (not email)\";\n    }\n    if (!password) {\n      errors.errorPassword = fieldRequired;\n    }\n\n    if (process.env.NODE_ENV !== \"development\") {\n      if (showAdvanced && !server.startsWith(\"https://\")) {\n        errors.errorServer = \"Server URI must start with https://\";\n      }\n    }\n\n    if (Object.keys(errors).length) {\n      setErrors(errors);\n      return;\n    } else {\n      setErrors({});\n    }\n\n    props.onSubmit(username, password, (showAdvanced) ? server : undefined);\n  }\n\n  const styles = {\n    form: {\n    },\n    forgotPassword: {\n      paddingTop: 20,\n    },\n    infoAlert: {\n      marginTop: 20,\n    },\n    textField: {\n      marginTop: 20,\n      width: \"18em\",\n    },\n    submit: {\n      marginTop: 40,\n      textAlign: \"right\" as any,\n    },\n  };\n\n  function handleInputChange(func: (value: string) => void) {\n    return (event: React.ChangeEvent<any>) => {\n      func(event.target.value);\n    };\n  }\n\n  let advancedSettings = null;\n  if (showAdvanced) {\n    advancedSettings = (\n      <React.Fragment>\n        <TextField\n          type=\"url\"\n          style={styles.textField}\n          error={!!errors.errorServer}\n          helperText={errors.errorServer}\n          label=\"Server\"\n          value={server}\n          onChange={handleInputChange(setServer)}\n        />\n        <br />\n      </React.Fragment>\n    );\n  }\n\n  if (props.loading) {\n    return (\n      <div style={{ textAlign: \"center\" }}>\n        <LoadingIndicator />\n        <p>Deriving encryption data...</p>\n      </div>\n    );\n  }\n\n  return (\n    <React.Fragment>\n      <form style={styles.form} onSubmit={generateEncryption}>\n        <TextField\n          type=\"text\"\n          style={styles.textField}\n          error={!!errors.errorEmail}\n          helperText={errors.errorEmail}\n          label=\"Username\"\n          value={username}\n          onChange={handleInputChange(setUsername)}\n        />\n        <br />\n        <PasswordField\n          style={styles.textField}\n          error={!!errors.errorPassword}\n          helperText={errors.errorPassword}\n          label=\"Password\"\n          name=\"password\"\n          value={password}\n          onChange={handleInputChange(setPassword)}\n        />\n        <div style={styles.forgotPassword}>\n          <ExternalLink href={C.forgotPassword}>Forgot password?</ExternalLink>\n        </div>\n        <FormGroup>\n          <FormControlLabel\n            control={\n              <Switch\n                color=\"primary\"\n                checked={showAdvanced}\n                onChange={() => setShowAdvanced(!showAdvanced)}\n              />\n            }\n            label=\"Advanced settings\"\n          />\n        </FormGroup>\n        {advancedSettings}\n\n        {props.error && (\n          <Alert severity=\"error\" style={styles.infoAlert}>{props.error.message}</Alert>\n        )}\n\n        <div style={styles.submit}>\n          <Button\n            variant=\"contained\"\n            type=\"submit\"\n            color=\"secondary\"\n            disabled={props.loading}\n          >\n            {props.loading ? \"Loading…\" : \"Log In\"}\n          </Button>\n        </div>\n      </form>\n    </React.Fragment>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\n\nimport { useDispatch } from \"react-redux\";\n\nimport Container from \"./widgets/Container\";\nimport ExternalLink from \"./widgets/ExternalLink\";\nimport LoginForm from \"./components/LoginForm\";\n\nimport { login } from \"./store/actions\";\n\nimport * as Etebase from \"etebase\";\n\nimport * as C from \"./constants\";\n\nimport SignedPagesBadge from \"./images/signed-pages-badge.svg\";\nimport { useCredentials } from \"./credentials\";\nimport LoadingIndicator from \"./widgets/LoadingIndicator\";\nimport { startTask } from \"./helpers\";\nimport { Redirect, useLocation } from \"react-router\";\nimport { routeResolver } from \"./App\";\nimport { Link } from \"react-router-dom\";\n\nexport default function LoginPage() {\n  const credentials = useCredentials();\n  const dispatch = useDispatch();\n  const location = useLocation();\n  const [loading, setLoading] = React.useState(false);\n  const [fetchError, setFetchError] = React.useState<Error>();\n\n  if (credentials) {\n    return (\n      <Redirect to={{ pathname: routeResolver.getRoute(\"wizard\"), state: location.state }} />\n    );\n  }\n\n  async function onFormSubmit(username: string, password: string, serviceApiUrl?: string) {\n    try {\n      setLoading(true);\n      setFetchError(undefined);\n      const etebase = await startTask((async () => {\n        return await Etebase.Account.login(username, password, serviceApiUrl ?? C.defaultServerUrl);\n      }));\n      dispatch(login(etebase));\n    } catch (e) {\n      console.log(e);\n      if ((e instanceof Etebase.HttpError) && (e.status === 404)) {\n        setFetchError(new Error(\"Etebase server not found: are you sure the server URL is correct?\"));\n      } else {\n        setFetchError(e);\n      }\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  if (credentials === undefined) {\n    return (\n      <LoadingIndicator />\n    );\n  } else {\n    const style = {\n      isSafe: {\n        textDecoration: \"none\",\n        display: \"block\",\n      },\n      divider: {\n        margin: \"30px 0\",\n        color: \"#00000025\",\n      },\n    };\n\n    return (\n      <Container style={{ maxWidth: \"30rem\" }}>\n        <h2 style={{ marginBottom: \"0.1em\" }}>Log In</h2>\n        <div style={{ fontSize: \"90%\" }}>or <Link to={routeResolver.getRoute(\"signup\")}>create an account</Link></div>\n        <LoginForm\n          onSubmit={onFormSubmit}\n          loading={loading}\n          error={fetchError}\n        />\n        <hr style={style.divider} />\n        <ExternalLink style={style.isSafe} href=\"https://www.etesync.com/faq/#signed-pages\">\n          <img alt=\"SignedPgaes badge\" src={SignedPagesBadge} />\n        </ExternalLink>\n        <ul>\n          <li><ExternalLink style={style.isSafe} href={C.homePage}>\n            The EteSync Website\n          </ExternalLink></li>\n          <li><ExternalLink style={style.isSafe} href={C.faq + \"#web-client\"}>\n            Is the web client safe to use?\n          </ExternalLink></li>\n          <li><ExternalLink style={style.isSafe} href={C.sourceCode}>Source code</ExternalLink></li>\n        </ul>\n      </Container>\n    );\n  }\n}\n","// SPDX-FileCopyrightText: © 2019 EteSync Authors\n// SPDX-License-Identifier: GPL-3.0-only\n\nimport * as React from \"react\";\nimport Button from \"@material-ui/core/Button\";\n\nimport Container from \"./Container\";\n\nexport interface PagePropsType {\n  prev?: () => void;\n  next?: () => void;\n  currentPage: number;\n  totalPages: number;\n}\n\nexport function WizardNavigationBar(props: PagePropsType) {\n  const first = props.currentPage === 0;\n  const last = props.currentPage === props.totalPages - 1;\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"row\", justifyContent: \"space-between\", marginTop: \"auto\" }}>\n      <Button\n        variant=\"contained\"\n        disabled={first}\n        onClick={props.prev}\n      >\n        Prev\n      </Button>\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={!props.next}\n        onClick={props.next}\n      >\n        {(last) ? \"Finish\" : \"Next\"}\n      </Button>\n    </div>\n  );\n}\n\ninterface PropsType extends React.HTMLProps<HTMLDivElement> {\n  pages: ((props: PagePropsType) => React.ReactNode)[];\n  onFinish: () => void;\n}\n\nexport default function Wizard(inProps: PropsType) {\n  const [currentPage, setCurrentPage] = React.useState(0);\n  const { pages, onFinish, ...props } = inProps;\n\n  const Content = pages[currentPage];\n\n  const first = currentPage === 0;\n  const last = currentPage === pages.length - 1;\n  const prev = !first ? () => setCurrentPage(currentPage - 1) : undefined;\n  const next = !last ? () => setCurrentPage(currentPage + 1) : onFinish;\n\n  return (\n    <Container {...props}>\n      {Content({ prev, next, currentPage, totalPages: pages.length })}\n    </Container>\n  );\n}\n\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport * as Etebase from \"etebase\";\nimport { Redirect, useLocation } from \"react-router\";\nimport Button from \"@material-ui/core/Button\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport { routeResolver } from \"./App\";\n\nimport Container from \"./widgets/Container\";\nimport LoadingIndicator from \"./widgets/LoadingIndicator\";\nimport Wizard, { WizardNavigationBar, PagePropsType } from \"./widgets/Wizard\";\n\nimport { SyncManager } from \"./sync/SyncManager\";\n\nimport { store } from \"./store\";\nimport { useCredentials } from \"./credentials\";\n\nimport wizardWelcome from \"./images/wizard-welcome.svg\";\nimport wizardCreate from \"./images/wizard-create.svg\";\n\ninterface LocationState {\n  from: {\n    pathname: string;\n  };\n}\n\nconst wizardPages = [\n  (props: PagePropsType) => (\n    <>\n      <div style={{ display: \"flex\", flexDirection: \"column\", flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <h2 style={{ textAlign: \"center\" }}>Welcome to EteSync!</h2>\n        <p style={{ textAlign: \"center\" }}>\n          Please follow these few quick steps to help you get started.\n        </p>\n        <img src={wizardWelcome} style={{ maxWidth: \"30em\", marginTop: \"2em\" }} />\n      </div>\n      <WizardNavigationBar {...props} />\n    </>\n  ),\n  (props: PagePropsType) => (\n    <SetupCollectionsPage {...props} />\n  ),\n];\n\nfunction SetupCollectionsPage(props: PagePropsType) {\n  const etebase = useCredentials()!;\n  const [error, setError] = React.useState<Error>();\n  const [loading, setLoading] = React.useState(false);\n  async function onNext() {\n    setLoading(true);\n    try {\n      const colMgr = etebase.getCollectionManager();\n      const types = [\n        [\"etebase.vcard\", \"My Contacts\"],\n        [\"etebase.vevent\", \"My Calendar\"],\n        [\"etebase.vtodo\", \"My Tasks\"],\n      ];\n      for (const [type, name] of types) {\n        const meta: Etebase.ItemMetadata = {\n          name,\n          mtime: (new Date()).getTime(),\n        };\n        const collection = await colMgr.create(type, meta, \"\");\n        await colMgr.upload(collection);\n      }\n\n      props.next?.();\n    } catch (e) {\n      setError(e);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  const next = (loading) ? undefined : onNext;\n  return (\n    <>\n      <div style={{ display: \"flex\", flexDirection: \"column\", flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n        <h2 style={{ textAlign: \"center\" }}>Setup Collections</h2>\n        <p style={{ textAlign: \"center\", maxWidth: \"50em\" }}>\n          In order to start using EteSync you need to create collections to store your data. Clicking <i>Finish</i> below will create a default calendar, address book and a task list for you.\n        </p>\n        {(loading) ? (\n          <LoadingIndicator style={{ display: \"block\", margin: \"40px auto\" }} />\n        ) : (error) ? (\n          <>\n            <Alert severity=\"error\">{error.message}</Alert>\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              onClick={props.next}\n            >\n              Skip\n            </Button>\n          </>\n        ) : (\n          <img src={wizardCreate} style={{ maxWidth: \"30em\", marginTop: \"2em\" }} />\n        )}\n      </div>\n      <WizardNavigationBar {...props} next={next} />\n    </>\n  );\n}\n\nexport default function WizardPage() {\n  const [tryCount, setTryCount] = React.useState(0);\n  const [ranWizard, setRanWizard] = React.useState(false);\n  const [syncError, setSyncError] = React.useState<Error>();\n  const etebase = useCredentials();\n  const location = useLocation();\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    setLoading(true);\n    setSyncError(undefined);\n    (async () => {\n      const syncManager = SyncManager.getManager(etebase!);\n      const sync = syncManager.sync(true);\n      try {\n        await sync;\n\n        const cachedCollection = store.getState().cache.collections;\n        // XXX new account - though should change test to see if there are any PIM types\n        if (cachedCollection.size > 0) {\n          setRanWizard(true);\n        }\n      } catch (e) {\n        setSyncError(e);\n      }\n      setLoading(false);\n    })();\n  }, [tryCount]);\n\n  if (syncError) {\n    return (\n      <Container>\n        <div style={{ display: \"flex\", flexDirection: \"column\", flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n          <h2 style={{ textAlign: \"center\" }}>Important</h2>\n          <p style={{ textAlign: \"center\" }}>\n            {syncError?.message}\n          </p>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={() => setTryCount(tryCount + 1)}\n          >\n            Retry\n          </Button>\n        </div>\n      </Container>\n    );\n  }\n\n  if (loading) {\n    return (<LoadingIndicator style={{ display: \"block\", margin: \"40px auto\" }} />);\n  }\n\n  if (!ranWizard) {\n    return (\n      <Wizard pages={wizardPages} onFinish={() => setRanWizard(true)} style={{ display: \"flex\", flexDirection: \"column\", flex: 1 }} />\n    );\n  }\n\n  const { from } = location.state as LocationState || { from: { pathname: routeResolver.getRoute(\"home\") } };\n  return (\n    <Redirect to={from.pathname} />\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { Route, Switch, Redirect, RouteProps } from \"react-router\";\nimport { useCredentials } from \"./credentials\";\nimport LoadingIndicator from \"./widgets/LoadingIndicator\";\nimport SyncGate from \"./SyncGate\";\nimport { routeResolver } from \"./App\";\nimport SignupPage from \"./SignupPage\";\nimport LoginPage from \"./LoginPage\";\nimport WizardPage from \"./WizardPage\";\nimport { Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { StoreState } from \"./store\";\nimport { popMessage } from \"./store/actions\";\n\n\nexport default function MainRouter() {\n  return (\n    <>\n      <Switch>\n        <Route\n          path={routeResolver.getRoute(\"signup\")}\n          exact\n        >\n          <SignupPage />\n        </Route>\n        <Route\n          path={routeResolver.getRoute(\"login\")}\n          exact\n        >\n          <LoginPage />\n        </Route>\n        <PrivateRoute\n          path={routeResolver.getRoute(\"wizard\")}\n          exact\n        >\n          <WizardPage />\n        </PrivateRoute>\n        <PrivateRoute\n          path=\"*\"\n        >\n          <SyncGate />\n        </PrivateRoute>\n      </Switch>\n      <GlobalMessages />\n    </>\n  );\n}\n\nfunction GlobalMessages() {\n  const dispatch = useDispatch();\n  const message = useSelector((state: StoreState) => state.messages.first(undefined));\n\n  function handleClose() {\n    dispatch(popMessage());\n  }\n\n  return (\n    <Snackbar\n      key={message?.message}\n      open={!!message}\n      autoHideDuration={5000}\n      onClose={handleClose}\n      anchorOrigin={{ vertical: \"bottom\", horizontal: \"center\" }}\n    >\n      <Alert onClose={handleClose} severity={message?.severity}>\n        {message?.message}\n      </Alert>\n    </Snackbar>\n  );\n}\n\nfunction PrivateRoute(props: Omit<RouteProps, \"render\">) {\n  const credentials = useCredentials();\n  const { children, ...rest } = props;\n\n  if (credentials === undefined) {\n    return (<LoadingIndicator style={{ display: \"block\", margin: \"40px auto\" }} />);\n  }\n\n  return (\n    <Route\n      {...rest}\n      render={({ location }) => (\n        (credentials) ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: \"/login\",\n              state: { from: location },\n            }}\n          />\n        )\n      )}\n    />\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport { MuiThemeProvider as ThemeProvider, createMuiTheme } from \"@material-ui/core/styles\"; // v1.x\nimport amber from \"@material-ui/core/colors/amber\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Badge from \"@material-ui/core/Badge\";\n\nimport NavigationMenu from \"@material-ui/icons/Menu\";\nimport NavigationRefresh from \"@material-ui/icons/Refresh\";\nimport ErrorsIcon from \"@material-ui/icons/Error\";\n\nimport \"react-virtualized/styles.css\"; // only needs to be imported once\n\nimport \"./App.css\";\n\nimport ConfirmationDialog from \"./widgets/ConfirmationDialog\";\nimport { List, ListItem } from \"./widgets/List\";\nimport withSpin from \"./widgets/withSpin\";\nimport ErrorBoundary from \"./components/ErrorBoundary\";\nimport SideMenu from \"./SideMenu\";\nimport { RouteResolver } from \"./routes\";\n\nimport * as store from \"./store\";\nimport * as actions from \"./store/actions\";\n\nimport { useCredentials } from \"./credentials\";\nimport { SyncManager } from \"./sync/SyncManager\";\nimport MainRouter from \"./MainRouter\";\n\nexport const routeResolver = new RouteResolver({\n  home: \"\",\n  pim: {\n    contacts: {\n      _id: {\n        _base: \":itemUid\",\n        edit: {\n          contact: \"contact\",\n          group: \"group\",\n        },\n        log: \"log\",\n      },\n      new: {\n        contact: \"contact\",\n        group: \"group\",\n      },\n    },\n    events: {\n      _id: {\n        _base: \":itemUid\",\n        edit: \"edit\",\n        duplicate: \"duplicate\",\n        log: \"log\",\n      },\n      new: \"new\",\n    },\n    tasks: {\n      _id: {\n        _base: \":itemUid\",\n        edit: \"edit\",\n        log: \"log\",\n      },\n      new: \"new\",\n    },\n  },\n  collections: {\n    _id: {\n      _base: \":colUid\",\n      edit: \"edit\",\n      items: {\n        _id: {\n          _base: \":itemUid\",\n        },\n      },\n      entries: {\n        _id: {\n          _base: \":entryUid\",\n        },\n      },\n      members: {\n      },\n    },\n    invitations: {\n      incoming: {\n      },\n      outgoing: {\n      },\n    },\n    new: \"new\",\n    import: \"import\",\n  },\n  login: {\n  },\n  signup: {\n  },\n  wizard: {\n  },\n  settings: {\n  },\n  debug: {\n  },\n});\n\ninterface AppBarPropsType {\n  toggleDrawerIcon: any;\n  iconElementRight: any;\n}\n\nfunction AppBarWitHistory(props: AppBarPropsType) {\n  const {\n    toggleDrawerIcon,\n    iconElementRight,\n    ...rest\n  } = props;\n  return (\n    <AppBar\n      position=\"static\"\n      {...rest}\n    >\n      <Toolbar>\n        <div style={{ marginLeft: -12, marginRight: 20 }}>\n          {toggleDrawerIcon}\n        </div>\n\n        <div style={{ flexGrow: 1, fontSize: \"1.25em\" }} id=\"appbar-title\" />\n\n        <div style={{ marginRight: -12 }} id=\"appbar-buttons\">\n          {iconElementRight}\n        </div>\n      </Toolbar>\n    </AppBar>\n  );\n}\n\nconst IconRefreshWithSpin = withSpin(NavigationRefresh);\n\nexport default function App() {\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\n  const [errorsDialog, setErrorsDialog] = React.useState(false);\n  const dispatch = useDispatch();\n  const etebase = useCredentials();\n  const darkMode = useSelector((state: store.StoreState) => state.settings.darkMode);\n  const fetchCount = useSelector((state: store.StoreState) => state.fetchCount);\n  const errors = useSelector((state: store.StoreState) => state.errors);\n\n  async function refresh() {\n    const syncManager = SyncManager.getManager(etebase!);\n    const sync = syncManager.sync();\n    dispatch(actions.performSync(sync));\n    await sync;\n  }\n\n  function autoRefresh() {\n    if (navigator.onLine && etebase) {\n      refresh();\n    }\n  }\n\n  React.useEffect(() => {\n    const interval = 5 * 60 * 1000;\n    const id = setInterval(autoRefresh, interval);\n    return () => clearInterval(id);\n  }, []);\n\n  function toggleDrawer() {\n    setDrawerOpen(!drawerOpen);\n  }\n\n  function closeDrawer() {\n    setDrawerOpen(false);\n  }\n\n  const credentials = etebase ?? null;\n\n  const fetching = fetchCount > 0;\n\n  const muiTheme = createMuiTheme({\n    palette: {\n      type: darkMode ? \"dark\" : undefined,\n      primary: amber,\n      secondary: {\n        light: lightBlue.A200,\n        main: lightBlue.A400,\n        dark: lightBlue.A700,\n        contrastText: \"#fff\",\n      },\n    },\n  });\n\n  const styles: {[key: string]: React.CSSProperties} = {\n    main: {\n      backgroundColor: muiTheme.palette.background.default,\n      color: muiTheme.palette.text.primary,\n      flexGrow: 1,\n      display: \"flex\",\n      flexDirection: \"column\",\n    },\n  };\n\n  return (\n    <ThemeProvider theme={muiTheme}>\n      <BrowserRouter>\n        <div style={styles.main} className={darkMode ? \"theme-dark\" : \"theme-light\"}>\n          <AppBarWitHistory\n            toggleDrawerIcon={<IconButton onClick={toggleDrawer}><NavigationMenu /></IconButton>}\n            iconElementRight={\n              <>\n                {(errors.size > 0) && (\n                  <IconButton onClick={() => setErrorsDialog(true)} title=\"Errors\">\n                    <Badge badgeContent={errors.size} color=\"error\">\n                      <ErrorsIcon />\n                    </Badge>\n                  </IconButton>\n                )}\n                <IconButton disabled={!credentials || fetching} onClick={refresh} title=\"Refresh\">\n                  <IconRefreshWithSpin spin={fetching} />\n                </IconButton>\n              </>\n            }\n          />\n          <ConfirmationDialog\n            title=\"Sync Errors\"\n            open={errorsDialog}\n            labelOk=\"OK\"\n            onCancel={() => setErrorsDialog(false)}\n            onOk={() => setErrorsDialog(false)}\n          >\n            <h4>\n              Please contact developers if any of the errors below persist.\n            </h4>\n            <List>\n              {errors.map((error, index) => (\n                <ListItem\n                  key={index}\n                  style={{ height: \"unset\" }}\n                  onClick={() => (window as any).navigator.clipboard.writeText(`${error.message}\\n\\n${error.stack}`)}\n                >\n                  {error.message}\n                </ListItem>\n              ))}\n            </List>\n          </ConfirmationDialog>\n\n          <Drawer\n            open={drawerOpen}\n            onClose={toggleDrawer}\n          >\n            <SideMenu onCloseDrawerRequest={closeDrawer} />\n          </Drawer>\n\n          <ErrorBoundary>\n            <MainRouter />\n          </ErrorBoundary>\n        </div>\n      </BrowserRouter>\n    </ThemeProvider>\n  );\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\n// tslint:disable:no-console\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the 'N+1' visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL!,\n      window.location.toString()\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker) {\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === \"installed\") {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the old content will have been purged and\n                // the fresh content will have been added to the cache.\n                // It's the perfect time to display a 'New content is\n                // available; please refresh.' message in your web app.\n                console.log(\"New content is available; please refresh.\");\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // 'Content is cached for offline use.' message.\n                console.log(\"Content is cached for offline use.\");\n              }\n            }\n          };\n        }\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get(\"content-type\")!.indexOf(\"javascript\") === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","// SPDX-FileCopyrightText: © 2017 EteSync Authors\n// SPDX-License-Identifier: AGPL-3.0-only\n\nimport * as React from \"react\";\nimport * as ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/es/integration/react\";\nimport App from \"./App\";\nimport registerServiceWorker from \"./registerServiceWorker\";\nimport \"./index.css\";\n\nimport * as Etebase from \"etebase\";\n\nfunction MyPersistGate(props: React.PropsWithChildren<{}>) {\n  const [loading, setLoading] = React.useState(true);\n\n  React.useEffect(() => {\n    Etebase.ready.then(() => {\n      setLoading(false);\n      persistor.persist();\n    });\n  }, []);\n\n  if (loading) {\n    return (<React.Fragment />);\n  }\n\n  return (\n    <PersistGate persistor={persistor}>\n      {props.children}\n    </PersistGate>\n  );\n}\n\nimport { store, persistor } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <MyPersistGate>\n      <App />\n    </MyPersistGate>\n  </Provider>,\n  document.getElementById(\"root\") as HTMLElement\n);\nregisterServiceWorker();\n"],"sourceRoot":""}